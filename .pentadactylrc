"     ___________________
"    /                   \
"    | ,---------------, |
"    | | PENTADACTYLRC | |
"    | '---------------' |
"    \___________________/
"
"
group user

" load javascript utilities
runtime! utils.js
" load utils into current context
js var utils = dactyl.utils.getPlugin("utils");

" load personal details
runtime! personal.js
js var user = dactyl.utils.getPlugin("personal");
js var homedir = "/home/troy";

runtime! js/libs/jquery-3.3.1.min.js
runtime! js/libs/sprintf.js
runtime! js/libs/suncalc/suncalc.js
runtime! js/simulateHtmlMouseEvent.js
set passkeys=

" -------------------------------------------------------------------------------
" ,------------------------,
" | Javascript helper code |
" '------------------------'

js <<EOF

var Cc = Components.classes;
var Ci = Components.interfaces;
var Cu = Components.utils;

"imports"
Cu.import("resource://gre/modules/BookmarkHTMLUtils.jsm");
Cu.import("resource://gre/modules/FileUtils.jsm");
Cu.import("resource://gre/modules/PrivateBrowsingUtils.jsm");
" https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/OSFile.jsm/OS.File_for_the_main_thread "
Cu.import("resource://gre/modules/osfile.jsm");
" https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Language_Bindings/Components.utils.importGlobalProperties "
Components.utils.importGlobalProperties(["TextDecoder"]);


"components"
var Cc = Components.classes;
function XpcService(url, ifc) {
    try {
        var interface = Ci[ifc];
        return Cc[url].getService(interface);
    } catch(e) {
        utils.message("XpcService: Cannot get service " + url + ", " + ifc + "\n" + e);
        return null;
    }
}
window.XpcService = XpcService;

function XpcInstance(url, ifc) {
    try {
        var interface = Ci[ifc];
        return Cc[url].createInstance(interface);
    } catch(e) {
        utils.message("XpcInstance: Cannot create instance " + url + ", " + ifc + "\n" + e);
        return null;
    }
}
window.XpcInstance = XpcInstance;

function XpcQueryInterface(elt, ifc) {
    try {
        var interface = Ci[ifc];
        return elt.QueryInterface(interface);
    } catch(e) {
        utils.message("XpcQueryInterface: Cannot query interface " + ifc + " of " + elt + "\n" + e);
	      return null;
    }
}
window.XpcQueryInterface = XpcQueryInterface;

"System"
var env = XpcService("@mozilla.org/process/environment;1",
                      Components.interfaces.nsIEnvironment);
window.env = env;

var nsIFilePicker = Ci.nsIFilePicker;
window.nsIFilePicker = nsIFilePicker;
var WebBrowserPersist = Components.Constructor("@mozilla.org/embedding/browser/nsWebBrowserPersist;1",
                                                 "nsIWebBrowserPersist");
window.WebBrowserPersist = WebBrowserPersist;

var nsISessionStore = XpcService("@mozilla.org/browser/sessionstore;1", Components.interfaces.nsISessionStore)

"Firefox Preferences"
var prefservice = Cc["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefService);
function prefbranch(branch) { return prefservice.getBranch(branch); }
var prefroot = Cc["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefBranch);
window.prefservice = prefservice
window.prefbranch = prefbranch
window.prefroot = prefroot
" String Preferences: prefroot.(g|s)etCharPref for ASCII, prefroot.getComplexValue for unicode... "
function getStrPref(pref) { return prefroot.getComplexValue(pref, Components.interfaces.nsISupportsString); }
function setStrPref(pref, value) {
    prefroot.setComplexValue(pref, Components.interfaces.nsISupportsString, value);
}

"Bookmarks"
var nsINavBookmarksService = XpcService("@mozilla.org/browser/nav-bookmarks-service;1", Components.interfaces.nsINavBookmarksService);
var bmarksMenuFolder = nsINavBookmarksService.bookmarksMenuFolder;
window.nsINavBookmarksService = nsINavBookmarksService;
window.bmarksMenuFolder = bmarksMenuFolder;

var nsIIOService = XpcService("@mozilla.org/network/io-service;1", Components.interfaces.nsIIOService);
function createURI(url) { return nsIIOService.newURI(url, null, null); }
window.nsIIOService = nsIIOService;
window.createURI = createURI;

function createBmark(url, title, folderId=bmarksMenuFolder) {
    return nsINavBookmarksService.insertBookmark(
        folderId,
        createURI(url),
        nsINavBookmarksService.DEFAULT_INDEX,
        title);
}
window.createBmark = createBmark;

"Application"
var xulAppInfo = Cc["@mozilla.org/xre/app-info;1"].getService(Components.interfaces.nsIXULAppInfo);

var isPalemoon = prefs.has("app.vendorURL") && prefroot.getCharPref("app.vendorURL").includes("palemoon");
var isBasilisk = prefs.has("app.vendorURL") && prefroot.getCharPref("app.vendorURL").includes("basilisk");
var isFirefox  = prefs.has("app.update.url") && prefroot.getCharPref("app.update.url").includes("mozilla");
var isWaterfox = prefs.has("app.update.url") && prefroot.getCharPref("app.update.url").includes("waterfox");

var browser;
if (isPalemoon) browser = "/opt/palemoon/palemoon";
if (isBasilisk) browser = "/opt/basilisk/basilisk";
if (isFirefox)  browser = "/opt/firefox/firefox";
if (isWaterfox) browser = "/opt/waterfox/waterfox";

"utility functions"
// Array methods for other collections
A = {
    map:         (coll, f) => Array.from(coll).map(f),
    filter:      (coll, f) => Array.from(coll).filter(f),
    forEach:     (coll, f) => Array.from(coll).forEach(f),
    find:        (coll, f) => Array.from(coll).find(f),
    every:       (coll, f) => Array.from(coll).every(f),
    some:        (coll, f) => Array.from(coll).some(f),
    findIndex:   (coll, f) => Array.from(coll).find(f),
    includes:    (coll, f, fromIndex=undefined) => Array.from(coll).includes(f, fromIndex),
    indexOf:     (coll, f, fromIndex=undefined) => Array.from(coll).indexOf(f, fromIndex),
    concatMap:   (coll, f) => [].concat.apply([], Array.from(coll).map(e=>Array.from(f(e)))),
    mapProperty: (coll, p) => Array.from(coll).map(e=>e[p]),
    zip:         (coll1, coll2) => Array.from(coll1).map((e,i)=>[e, coll2[i]]),
    split:       (coll, e) => {
                     var subArrays = [];
                     var currentSub = [];
                     for (var i=0; i<coll.length; ++i) {
                         if (coll[i]==e) {
                             subArrays.push(currentSub);
                             currentSub = [];
                         } else {
                             currentSub.push(coll[i]);
                         }
                     }
                     subArrays.push(currentSub);
                     return subArrays;
                 },
    range: function (beg, end) {
        var n = end-beg;
        return Array(n).fill().map((x,i)=>i+beg);
    },
    toLines: (coll) => Array.from(coll).reduce((s,i)=>`${s}\n${i}`)
}
window.A = A;

// String methods
S = {
    // padEnd, padStart: adapted from github.com/uxitten/polyfill
    padEnd: function (s, targetLength, padString) {
        targetLength = targetLength >> 0; //floor if number or convert non-number to 0;
        padString = String((typeof padString !== 'undefined' ? padString : ' '));
        if (s.length > targetLength) {
            return String(s);
        } else {
            targetLength = targetLength - s.length;
            if (targetLength > padString.length) {
                padString += padString.repeat(targetLength / padString.length);
            }
            return String(s) + padString.slice(0, targetLength);
        }
    },
    padStart: function (s, targetLength, padString) {
        targetLength = targetLength >> 0; //floor if number or convert non-number to 0;
        padString = String((typeof padString !== 'undefined' ? padString : ' '));
        if (s.length > targetLength) {
            return String(s);
        }
        else {
            targetLength = targetLength - s.length;
            if (targetLength > padString.length) {
                padString += padString.repeat(targetLength / padString.length);
                //append to original to ensure we are longer than needed
            }
            return padString.slice(0, targetLength) + String(s);
        }
    },
    repeat: function (s, n) { return Array(n).fill(s).join(""); },
    isLowercase: function(s) {
        return s.toLowerCase()===s;
    },
    isUppercase: function(s) {
        return s.toUpperCase()===s;
    },
    isMixedcase: function(s) {
        return !(this.isLowercase(s) || this.isUppercase(s));
    },
    capitalize: function(s) {
        return s.replace(/\b\w/g, function (c) { return c.toUpperCase(); });
    },
    toSmartCase: function (s) {
        return (s.toLowerCase()===s) ? S.toStartCase(s) : s;
    },
    toStartCase: function (s) {
        var words = s.split(/\s+/);
        return A.map(words, w=>this.capitalize(w)).join(" ");
    },
    toLength: function (s, n, pad=" ") {
        n = parseInt(n);
        if (s.length > n) return s.slice(0,n);
        else return S.padEnd(s, n, pad);
    },
    titleCaseExceptionWords: ["a", "an", "the", "and", "or", "but", "nor",
                              "yet", "so", "for", "in", "to", "of", "at",
                              "by", "up", "for", "off", "on"],
    toTitleCase: function (s, excWords=this.titleCaseExceptionWords) {
        var initialLetter = s.slice(0, 1);
        var hasInitialCap = this.isUppercase(initialLetter);
        var words = s.split(/\s+/);
        var words_ = hasInitialCap ? words.slice(1) : words;
        var toCapitalize = words_.filter(w=>!excWords.includes(w));
        toCapitalize.forEach(w=>{ s = s.replace(w, this.capitalize(w)) });
        return s;
    },
    isAlphaAt: function (s, i) {
        ord = s.charCodeAt(i);
        return (ord.inRange(97, 123));
    },
    firstLineEllipsis: function (s) {
        var s = String(s);
        var lines = s.split("\n").filter(s=>s.match(/\S/));
        if (lines.length > 1)
            return lines[0] + "...";
        else return lines[0];
    },
    arrayWithEmptyStringDefault: function(a) {
        var arr = Array.from(a);
        return arr.map(elem => typeof elem == "undefined" ? "" : String(elem));
    }
}
window.S = S;

// Object methods
Object.prototype.map = function(f) {
    var result = {};
    for (var key in this) {
        if (this.hasOwnProperty(key))
            result[key] = f(this[key]);
    }
    return result;
}

function runProcess(exec, ...args) {
    var executable = XpcInstance("@mozilla.org/file/local;1", Components.interfaces.nsILocalFile);
    executable.initWithPath(exec);
    var process = XpcInstance("@mozilla.org/process/util;1", Components.interfaces.nsIProcess);
    process.init(executable);
    process.runAsync(args, args.length);
}

function makeDisplayToggle(selector) {
    function displayToggle() {
        var elt = content.document.querySelector(selector);
        if (elt) {
          if (elt.style.display == 'none')
          elt.style.display = 'block';
          else elt.style.display = 'none';
        } else dactyl.echoerr(`no match for selector ${selector}`);
    }
    return displayToggle;
}
window.makeDisplayToggle = makeDisplayToggle;

"Patched Classes"
Number.prototype.inRange = function (a, b) {
    return (a <= this && this < b);
}

window.AUDperUSD = 1.36;

" Eval Functions "

function evalStringOrFunction(s) {
    "String s represents either a string (itself) or a function.";
    if (s && s.match(/\(.*\)|=>/)) {
        return eval(s);
    } else { return s || null; }
}
window.evalStringOrFunction = evalStringOrFunction;

function evalWithScriptTag(code, doc) {
    var script = content.document.createElement("script");
    try { script.innerText = code; }
    catch(e) {
        script.appendChild(content.document.createTextNode(code));
    }
    content.document.head.appendChild(script);
    script.parentNode.removeChild(script);
}
window.evalWithScriptTag = evalWithScriptTag;

function readFromFile(f) {
    " Returns a promise. Usage: readFromFile(f).then(s=>doSomething(s)); "
    " Code from https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/OSFile.jsm/ "
    let decoder = new TextDecoder();     // This decoder can be reused for several reads
    let promise = OS.File.read(f);       // Read the complete file as an array
    promise = promise.then(
      function onSuccess(array) {
        return decoder.decode(array);    // Convert this array to a text
      }
    );
    return promise;
}

EOF

" ,-------------------------------,
" | Pentadactyl Utility Functions |
" '-------------------------------'

js <<EOF
" readStringOrRegex: converts a string to a regex if possible, else returns the string "
" Can be used to accept either a string or regex argument for a command:               "
" -js doSomething(args.map(readStringOrRegex))                                              "
function readStringOrRegex(s) {
    var matches = s.match(/^\/([^/]*)\/([gimuy]*)$/);
    if (matches)
        return RegExp(matches[1], matches[2]);
    else
        return s;
}

function getMappings() { return Array.from(mappings); }
window.getMappings = getMappings;

" matchMappingsByKey: key may be a string or regex "
function matchMappingsByKey(key) {
    return getMappings().filter(m=>m.keys.map(k=>k.search(key)>=0).reduce((x,y)=>(x||y), false));
}
window.matchMappingsByKey = matchMappingsByKey;
" matchMappingsByKeyAndMode: mode may be a string, regex or Mode instance "
function matchMappingsByKeyAndMode(key, mode=modes.NORMAL) {
    return getMappings().filter(
        function(m) {
            return m.keys.map(k=>k.search(key)>=0).reduce((x,y)=>(x||y), false) &&
                   ( m.modes.map(md=>md.toString()).join(" ").search(mode)>=0 ||
                     m.modes.includes(mode)>=0 );
        });
}
window.matchMappingsByKeyAndMode = matchMappingsByKeyAndMode;
" matchMappingsByDescription: desc may be a string or regex "
function matchMappingsByDescription(desc) {
    return getMappings().filter(m=>m.description.search(desc)>=0);
}
window.matchMappingsByDescription = matchMappingsByDescription;
" mappingsByGroup: name is a string matching the name of an active group "
function mappingsByGroup(name) {
    return getMappings().filter((m)=>m.hive.name==name);
}
window.mappingsByGroup = mappingsByGroup;
" listGroupMappings: name is a string matching the name of an active group "
function listGroupMappings(name) {
    return mappingsByGroup(name).map(m=>[m.name, m.description+':  '+m.action]);
}
window.listGroupMappings = listGroupMappings;
" listActiveGroupMappings: list mappings and descriptions for active groups "
function listActiveGroupMappings() {
    var activegroups = contexts.activeGroups();
    var activemappings = activegroups.flatMap(
        g => Array.from(g.mappings.iterate([modes.NORMAL])).concat(
             Array.from(g.mappings.iterate([modes.INSERT])))
        );
    return activemappings.map(m=>[m.name, m.description+':  '+m.action]);
}
window.listActiveGroupMappings = listActiveGroupMappings;
" eg. getHive('jisho', MapHive) "
function getHive(name, type) {
    var groupByName = group.children.filter(g=>g.name==name)[0];
    var matchesType = (hive) =>
        isinstance(hive, type) || hive._class_.toString()==`[class ${type}]`;
    return groupByName.hives.filter(matchesType)[0];
}
window.getHive = getHive;

function searchMappings(...pats) {
    var activegroups = contexts.activeGroups();
    var activemappings = activegroups.flatMap(
        g => Array.from(g.mappings.iterate([modes.NORMAL])).concat(
             Array.from(g.mappings.iterate([modes.INSERT]))).concat(
             Array.from(g.mappings.iterate([modes.BASE])))
        );
    var filtered = activemappings.filter(
        m => pats.every(
            p => {
                if (typeof p == "string" && p.toLowerCase()==p) {
                    return m.name.toLowerCase().search(p)>=0 ||
                           m.description.toLowerCase().search(p)>=0 ||
                           m.action.toString().toLowerCase().search(p)>=0
                } else {
                    return m.name.search(p)>=0 ||
                          m.description.search(p)>=0 ||
                          m.action.toString().search(p)>=0
                }
            }) );
    var maxlen = filtered.map(m=>m.name.length).reduce((acc,cur)=>Math.max(acc,cur), 0);
    var maxlendesc = Math.min(
                         50,
                         filtered.map(m=>m.description.length).reduce((acc,cur)=>Math.max(acc,cur), 0));
    dactyl.utils.message(
        filtered.map(
            m=>`${S.padEnd(m.name, maxlen)}\t${S.padEnd(m.description+':', maxlendesc)}\t${m.action}\n`
        ).join('')
    );
    return filtered;
}
window.searchMappings = searchMappings;

function searchMappingsDescriptions(...pats) {
    var activegroups = contexts.activeGroups();
    var activemappings = activegroups.flatMap(
        g => Array.from(g.mappings.iterate([modes.NORMAL])).concat(
             Array.from(g.mappings.iterate([modes.INSERT]))).concat(
             Array.from(g.mappings.iterate([modes.BASE])))
        );
    var filtered = activemappings.filter(
        m => pats.every(
            p => {
                if (typeof p == "string" && p.toLowerCase()==p) {
                    return m.name.toLowerCase().search(p)>=0 ||
                           m.description.toLowerCase().search(p)>=0
                    } else {
                    return m.name.search(p)>=0 ||
                          m.description.search(p)>=0
                }
            }) );
    var maxlen = filtered.map(m=>m.name.length).reduce((acc,cur)=>Math.max(acc,cur), 0);
    var maxlendesc = Math.min(
                         50,
                         filtered.map(m=>m.description.length).reduce((acc,cur)=>Math.max(acc,cur), 0));
    dactyl.utils.message(
        filtered.map(
            m=>`${S.padEnd(m.name, maxlen)}\t${S.padEnd(m.description+':', maxlendesc)}\t${m.action}\n`
        ).join('')
    );
    return filtered;
}

function searchMappingsByMode(mode, ...pats) {
    var activegroups = contexts.activeGroups();
    var modeInstance = modes[mode.toUpperCase()];
    var activemappings = activegroups.flatMap(
        g => Array.from(g.mappings.iterate([modeInstance])));
    var filtered = activemappings.filter(
        m => pats.every(
            p => {
                if (typeof p == "string" &&  p.toLowerCase()==p) {
                    return m.name.toLowerCase().search(p)>=0 ||
                           m.description.toLowerCase().search(p)>=0 ||
                           m.action.toString().toLowerCase().search(p)>=0
                } else {
                    return m.name.search(p)>=0 ||
                          m.description.search(p)>=0 ||
                          m.action.toString().search(p)>=0
                }
            }) );
    var maxlen = filtered.map(m=>m.name.length).reduce((acc,cur)=>Math.max(acc,cur), 0);
    var maxlendesc = Math.min(
                         50,
                         filtered.map(m=>m.description.length).reduce((acc,cur)=>Math.max(acc,cur), 0));
    dactyl.utils.message(
        filtered.map(
            m=>`${S.padEnd(m.name, maxlen)}\t${S.padEnd(m.description+':', maxlendesc)}\t${m.action}\n`
        ).join('')
    );
    return filtered;
}

function searchCommands1(pats, brief=true, searchAction=true) {
    var activegroups = contexts.activeGroups();
    var activecommands = Array.from(activegroups.flatMap(g => Array.from(g.commands)));
    var filtered = activecommands.filter(
        m => pats.every(
            p => {
                if (typeof p == "string" && p.toLowerCase()==p) {
                    return m.name.toLowerCase().search(p)>=0 ||
                           m.unlocalized_description.toLowerCase().search(p)>=0 ||
                           (searchAction && m.action.toString().toLowerCase().search(p)>=0)
                } else {
                    return m.name.search(p)>=0 ||
                          m.unlocalized_description.search(p)>=0 ||
                          (searchAction && m.action.toString().search(p)>=0)
                }
            }) );
    var maxlen = filtered.map(m=>m.name.length).reduce((acc,cur)=>Math.max(acc,cur), 0);
    var maxlendesc = Math.min(
                         50,
                         filtered.map(m=>m.description.length).reduce((acc,cur)=>Math.max(acc,cur), 0));
    dactyl.utils.message(
        filtered.map(
            m=>`${S.padEnd(m.name, maxlen)}\t${S.padEnd(m.description+':', maxlendesc)}\t${brief ? S.firstLineEllipsis(m.action) : m.action}\n`
        ).join('')
    );
    return filtered;
}
function searchCommands(...pats) { searchCommands1(pats, false); }
function searchCommandsBrief(...pats) { searchCommands1(pats, true); }
window.searchCommands = searchCommands;
window.searchCommandsBrief = searchCommandsBrief;

function getGroups() { return contexts.activeGroups().map(g=>g.name); }
function getAllCommands() { return commands.hives.flatMap(); }
function getCommandsByGroup(g) { return commands.hives.find(h=>h.name==g); }
function getMappingsByGroup(g) {
    return Array.from(mappings.hives).find(h=>h.name==g).iterate(modes.NORMAL);
}

function listCommandsByGroup(g, brief=true) {
    var cmds = Array.from(commands.hives.find(h=>h.name==g));
    var maxlen = cmds.map(m=>m.name.length).reduce((acc,cur)=>Math.max(acc,cur), 0);
    var maxlendesc = Math.min(
                         50,
                         cmds.map(m=>m.unlocalized_description.length).reduce((acc,cur)=>Math.max(acc,cur), 0));
    dactyl.utils.message(
        cmds.map(
            m=>`${S.padEnd(m.name, maxlen)}\t${S.padEnd(m.unlocalized_description+':', maxlendesc)}\t${brief ? S.firstLineEllipsis(m.action) : m.action}\n`
        ).join('')
    );
    return cmds;
}

function listMappingsByGroup(g) {
    var mpgs = Array.from(mappings.hives.find(h=>h.name==g).iterate(modes.NORMAL));
    var maxlen = mpgs.map(m=>m.name.length).reduce((acc,cur)=>Math.max(acc,cur), 0);
    var maxlendesc = Math.min(
                         50,
                         mpgs.map(m=>m.unlocalized_description.length).reduce((acc,cur)=>Math.max(acc,cur), 0));
    dactyl.utils.message(
        mpgs.map(
            m=>`${S.padEnd(m.name, maxlen)}\t${S.padEnd(m.unlocalized_description+':', maxlendesc)}\t${m.action}\n`
        ).join('')
    );
    return mpgs;
}

function listCommandsByGroupCompletion(g) { return commands.hives.map(h=>[h.name, h]); }
function listMappingsByGroupCompletion(g) { return mappings.hives.map(h=>[h.name, h.name]); }

function getCurrentDomainGroups() { return contexts.activeGroups().filter(g=>g.filter!="*"); }

function getHintModes() {
    var result = [];
    for (k in hints.modes) result.push([k, hints.modes[k]]);
    return result;
}
window.getHintModes = getHintModes;

function getHintModeKeys() {
    var result = [];
    for (k in hints.modes) result.push(k);
    return result;
}
window.getHintModeKeys = getHintModeKeys;

function searchHintModes(...pats) {
    var keys = getHintModeKeys();
    var filtered = keys.filter(
        k => pats.every(
            p => {
                if (typeof p == "string" && p.toLowerCase()==p) {
                    return k.search(p)>=0 || hints.modes[k][1].toLowerCase().search(p)>=0
                } else {
                    return k.search(p)>=0 || hints.modes[k][1].search(p)>=0
                }
            }) );
    dactyl.utils.message(filtered.map(k=>`${k}\t${hints.modes[k][1]}\n`).join(''));
    return filtered;
}

function searchHintModesVerbose(...pats) {
    var keys = getHintModeKeys();
    var stringConvert = function(s) { return s ? String(s) : ""; }
    var filtered = keys.filter(
        k => pats.every(
            p => {
                if (typeof p == "string" && p.toLowerCase()==p) {
                    return k.search(p)>=0 ||
                           hints.modes[k][1].toLowerCase().search(p)>=0 ||
                           hints.modes[k][2].toString().toLowerCase().search(p)>=0 ||
                           stringConvert(hints.modes[k][3]).toLowerCase().search(p)>=0
                } else {
                    return k.search(p)>=0 ||
                           hints.modes[k][1].search(p)>=0 ||
                           hints.modes[k][2].toString().search(p)>=0 ||
                           stringConvert(hints.modes[k][3]).search(p)>=0
                }
            }) );
    var maxlendesc = Math.min(
                         50,
                         filtered.map(k=>hints.modes[k][1].length).reduce((acc,cur)=>Math.max(acc,cur), 0));
    var maxlenact  = Math.min(
                         50,
                         filtered.map(k=>hints.modes[k][2].length).reduce((acc,cur)=>Math.max(acc,cur), 0));
    dactyl.utils.message(
        filtered.map(
            k=>`${k}\t${S.padEnd(hints.modes[k][1], maxlendesc)}\t${S.padEnd(hints.modes[k][2].toString()+':', maxlenact)}\t${stringConvert(hints.modes[k][3])}\n`
        ).join('')
    );
    return filtered;
}

EOF

" -----------------------------------------------------------------------------
" ,---------,
" | Options |
" '---------'
"
command! toggleoption
    \ -description "Toggle boolean option."
    \ -nargs=1
    \ -complete option
    \ -js utils.toggleOption(args[0]);

command! getoption
    \ -description "Show boolean option."
    \ -nargs=1
    \ -complete option
    \ -js var opt=options.get(args[0]); utils.message(`${opt.name}=${opt.value}`);

set runtimepath=/home/troy/.pentadactyl
set incfind
set hlfind
set findcase=smart
set showstatuslinks=status
"set wildmode=list:longest,list:full
set wildmode=list:full
set altwildmode=list:longest
set strictfocus=mail.google.com:laissez-faire,'chrome:*':laissez-faire,*:moderate
set scrolltime=0
set scrollsteps=1
set defsearch=g

" nextpattern, previouspattern
" default: '^\s*Next Page\s*$','^\s*Next [>»]','\bnext\b',^>$,'^(>>|»)$','^(>|»)','(>|»)$','\bmore\b',
" default: '^\s*Prev(ious)? Page\s*$','[<«] Prev\s*$','\bprev(ious)?\b',^<$,'^(<<|«)$','^(<|«)',
set nextpattern='^\W*\bForward\b\W*$','^\s*Next( Page\s*)?$','^\s*Next [>»]','\bnext\b',^>$,'^(>>|»)$','^(>|»)','(>|»|▸)$','\bMore Words\b','\bmore\b','(O|o)lder'
set previouspattern='^\W*\bBack\b\W*$','^\s*Prev(ious)?( Page\s*)?$','[<«] Prev\s*$','\bprev(ious)?\b',^<$,'^(<<|«)$','^(<|«)','(<|«|◂)$','(N|n)ewer'

set wildignore='~$','^(.*/)?\..*\.sw[m-p]$','^(.*/)?#.+#$'


" Ex commands output in a new tab by default (prefs, addons...)
set newtab=all

" make yanks go to clipboard
js editor.defaultRegister="+"

" If startup (default value of guioptions):"
:if options.get('guioptions').value.toString() == "b,C,r,s"
    " add bookmark bar, tab numbers, right scrollbar & permanent separate cmdline "
    set guioptions+=cBmNT
:endif
command! guioptionsreset set guioptions=bBcCrmNsT
command! togglecmdline -bang -js dactyl.execute("set guioptions!=c"); bang && dactyl.execute("rc");
js function cmdlineon() { return options.get("guioptions").value.includes("c") }

command! editorvim -description "Set terminal vim as editor"
\    set editor='roxterm --replace -e vim -f +<line> +"sil! call cursor(0, <column>)" +"set ft=markdown" <file>'
command! editorgvim -description "Set gVim as editor"
\    set editor='gvim -f +<line> +"sil! call cursor(0, <column>)" +"set ft=markdown" <file>'
command! editoremacs -description "Set emacs as editor" set editor='emacsclient'
command! editoremacsnewwin -description "Set emacs as editor (new window)" set editor='emacsclient -c'
command! editoremacsnw -description "Set terminal emacs as editor"
\    set editor='roxterm --replace -e emacsclient -tc +<line> <file>'

command! popupstoggle -description "Toggle whether popup windows appear in a new tab"
\    -js if (options.get('popups').value.includes("resized")) options.popups = ["tab"];
\        else options.popups = ["tab", "resized"];
\        utils.message("popups: "+options.popups);

" ,---------------------,
" | Pentadactyl Styling |
" '---------------------'
highlight CmdLine height: 15px

" =============================================================================
"                                   ______________
"                                  |              |
"                                  | KEY BINDINGS |
"                                  |______________|

" -------------------------------------------------------------------------------

unmap!

" ,-------------,
" | Prefix Keys |
" '-------------'

command! showkeys -nargs=? -complete custom,' (context) => {context.completions = listActiveGroupMappings()}' :feedkeys -mode normal <args>

" Unmap prefix keys
map b <Nop>
" map S <Nop>
" map <C-x><C-h> <Nop>
" map <C-x> <Nop>

" Map concrete prefix keys to prefix pseudokeys
map a  -description "Applications prefix"  <app>
map b  -description "Buffers/tabs prefix"  <buffer>
map c  -description "Sites/groups prefix"  <site>
map e  -description "Goto prefix"          <goto>
map s  -description "Search prefix"        <search>
map v  -description "Browser prefix"       <browser>
map x  -description "Extensions prefix"    <ext>
map y  -description "Yank prefix"          <yank>
map ,  -description "Leader key prefix"    <leader>

imap <A-return> <Esc><site>

" List mappings by prefix (using commandline completion)
map <site>         -description "(show bindings)" -js CommandExMode().open("showkeys <site>")
map <site><C-h>    -description "(show bindings)" -js CommandExMode().open("showkeys <site>")
map <leader><C-h>  -description "(show bindings)" -js CommandExMode().open("showkeys <leader>")
map <leader>       -description "(show bindings)" -js CommandExMode().open("showkeys <leader>")
map <goto><C-h>    -description "(show bindings)" -js CommandExMode().open("showkeys <goto>")
map <goto>         -description "(show bindings)" -js CommandExMode().open("showkeys <goto>")
map <ext><C-h>     -description "(show bindings)" -js CommandExMode().open("showkeys <ext>")
map <ext>          -description "(show bindings)" -js CommandExMode().open("showkeys <ext>")
map <app><C-h>    -description "(show bindings)" -js CommandExMode().open("showkeys <app>")
map <app>         -description "(show bindings)" -js CommandExMode().open("showkeys <app>")
map <browser><C-h> -description "(show bindings)" -js CommandExMode().open("showkeys <browser>")
map <browser>      -description "(show bindings)" -js CommandExMode().open("showkeys <browser>")
map <buffer><C-h>  -description "(show bindings)" -js CommandExMode().open("showkeys <buffer>")
map <buffer>       -description "(show bindings)" -js CommandExMode().open("showkeys <buffer>")
map <yank><C-h>    -description "(show bindings)" -js CommandExMode().open("showkeys <yank>")
map <yank>         -description "(show bindings)" -js CommandExMode().open("showkeys <yank>")
map <C-x><C-h>     -description "(show bindings)" -js CommandExMode().open("showkeys <C-x>")
map <C-x>          -description "(show bindings)" -js CommandExMode().open("showkeys <C-x>")
map g<C-h>         -description "(show bindings)" -js CommandExMode().open("showkeys g")
map g              -description "(show bindings)" -js CommandExMode().open("showkeys g")
map <search><C-h>  -description "(show bindings)" -js CommandExMode().open("showkeys <search>")
map <search>       -description "(show bindings)" -js CommandExMode().open("showkeys <search>")
map z<C-h>         -description "(show bindings)" -js CommandExMode().open("showkeys z")
map z              -description "(show bindings)" -js CommandExMode().open("showkeys z")

" -------------------------------------------------------------------------------
" ,----------------------------,
" | Help Commands and Bindings |
" '----------------------------'

map <C-h>        -description "(show bindings)" -js CommandExMode().open("showkeys <C-h>")
map <C-h><C-h>   -description "(show bindings)" -js CommandExMode().open("showkeys <C-h>")
map <C-h>b       -description "Search bindings" -b :searchmappings<Space>
map <C-h>B       -description "Search bindings description" -b :searchmappingsdescriptions<Space>
map <C-h>c       -description "Search commands" -b :searchcommands<Space>
map <C-h>C       -description "Search commands description" -js CommandExMode().open("searchcommandsdescriptions" + (count?"! ":" "));
map <C-h>d       -description "Pentadactyl help" -ex help
map <C-h>D       -description "Pentadactyl help - single page" -ex helpall
map <C-h>:       -description "Pentadactyl :help..." -b :help<Space>
map <C-h>e       -description "Show extensions" -b :addons -type extension<Space>
map <C-h>ag      -description "Show Greasemonkey scripts" -ex addons -type greasemonkey-user-script
map <C-h>al      -description "Show locale" -b :addons -type locale<Space>
map <C-h>ap      -description "Show plugin" -ex addons -type plugin
map <C-h>as      -description "Show userstyle" -ex addons -type userstyle
map <C-h>at      -description "Show theme" -ex addons -type theme
map <C-h>g       -description "(show bindings)" -js CommandExMode().open("showkeys <C-h>g")
map <C-h>g<C-h>  -description "(show bindings)" -js CommandExMode().open("showkeys <C-h>g")
map <C-h>gc      -description "List commands by group" -b :listcommandsbygroup<Space>
map <C-h>gC      -description "List commands by group (verbose)" -b :listcommandsbygroup!<Space>
map <C-h>gm      -description "List bindings by group" -b :listmappingsbygroup<Space>
map <C-h>h       -description "Search hint modes/descriptions" -b :searchhintmodes<Space>
map <C-h>H       -description "Search hint modes/descriptions/actions/filters"
\                -b :searchhintmodesverbose<Space>
map <C-h>k       -description "Show hint mode keys" -js utils.cbWrite(Object.keys(hints.modes).sort().join(""));
map <C-h>i       -description "Pentadactyl help - index"
\                -count -js openOrSelectTab("dactyl://help/index", count?"here":"tab");
map <C-h>m       -description "Search bindings by mode" -b :searchmappingsbymode<Space>

command! searchmappings -nargs * -js searchMappings.apply(null, args.map(readStringOrRegex));
command! searchmappingsdescriptions -nargs * -js searchMappingsDescriptions.apply(null, args.map(readStringOrRegex));
command! searchmappingsbymode -nargs * -js searchMappingsByMode.apply(null, args.map(readStringOrRegex));
command! searchcommands -description "Show commands matching pattern(s). With ! verbose definitions"
\    -bang
\    -nargs *
\    -js bang ? searchCommands.apply(null, args.map(readStringOrRegex)) : searchCommandsBrief.apply(null, args.map(readStringOrRegex));
command! searchcommandsdescriptions -description "Show commands whose name or description matches pattern(s). With ! verbose definitions"
\    -bang
\    -nargs *
\    -js searchCommands1(args.map(readStringOrRegex), !bang, true);
command! listcommandsbygroup -nargs 1
\    -bang
\    -complete custom," (context) => { context.completions = listCommandsByGroupCompletion(); } "
\    -js bang ? listCommandsByGroup(args[0], false) : listCommandsByGroup(args[0]);;
command! listmappingsbygroup -nargs 1
\    -complete custom," (context) => { context.completions = listMappingsByGroupCompletion(); } "
\    -js listMappingsByGroup(args[0]);
command! searchhintmodes -description "Search hint modes and descriptions"
\    -nargs * -js searchHintModes.apply(null, args.map(readStringOrRegex));
command! searchhintmodesverbose -description "Search hint modes and descriptions, actions and filters"
\    -nargs * -js searchHintModesVerbose.apply(null, args.map(readStringOrRegex));

" -------------------------------------------------------------------------------
" ,------------------,
" | Other Pseudokeys |
" '------------------'

map <link_desc> ;Y

" -----------------------------------------------------------------------------
" ,--------------------------,
" | Normal mode key bindings |
" '--------------------------'

" PREFIX KEYS: c e s ss x , \ <C-x>
" c : site-specific bindings
" x : global bindings
" s : selection bindings
" ss : sidebar bindings
" <C-x> : GUI commands, etc.
" y : yank

map go -description "Jump to a QuickMark in the current tab. See also M and :qmark" -b go
map gn
\    -description "Jump to a QuickMark in a new tab (focused if quickmark in 'activate'). See also M and :qmark"
\    -b gn

map gH -description "Go to first entry in tab's history" -ex back!
map gL -description "Go to last entry in tab's history" -ex forward!

" REPLACE DEFAULT BINDINGS:
" free C-h, use C-,, C-. to replace h, l
map <C-,>   -modes normal -b <Left>
map <C-.>   -modes normal -b <Right>
" use h, l for tab changing
"   note: <C-n>,gT are opposite motions. gt with arg goes to arg'th tab
map h       -modes normal -b gT
map l       -modes normal -b <C-n>
" Let gU take a count "
map gU -description "Open root path or nth level"
\    -modes normal
\    -count -js openNthFromRootPath(count);
" <C-n> and <C-p> for down and up
map <C-n>   -modes normal -b <C-v><down>
map <C-p>   -modes normal -b <C-v><up>
" replace h, l with A-k, A-j for horizontal movement
map <C-A-h> -modes normal -b h
map <C-A-l> -modes normal -b l
" A-k/j and A-,/. can be reused...
map <A-k>   -modes normal -b h
map <A-j>   -modes normal -b l
map <A-,>   -modes normal -b h
map <A-.>   -modes normal -b l
" free C-N, C-P bindings for tab movement
map <C-S-P> <Nop>
map <C-S-N> <Nop>
" focus frame
map vf      -modes normal -b ;F
" visual mode "
map <browser>v -modes normal -description "Visual mode" -ex feedkeys iv
" visual (pseudo-)line mode "
map V -modes normal -description "Pseudo-visual-line mode" -ex feedkeys i<C-a>vj

" next/previous heading or paragraph "
map <C-A-n>
\   -description "Jump to next heading"
\   -modes normal,visual
\   -count
\   -js buffer.findJump('h', count, false);
map <C-A-p>
\   -description "Jump to previous heading"
\   -modes normal,visual
\   -count
\   -js buffer.findJump('h', count, true);
map <A-S-n>
\   -description "Jump to next paragraph"
\   -modes normal,visual
\   -count
\   -js buffer.findJump('p', count, false);
map <A-S-p>
\   -description "Jump to previous paragraph"
\   -modes normal,visual
\   -count
\   -js buffer.findJump('p', count, true);

" bind gs as :viewpagesource, free gf for g;b
map gf <Nop>
map gs -ex viewpagesource
" replace builtin <C-a> and <C-x> bindings (inrease/decrease URL by 1)
map <C-a> <Nop>
map <A-=> -modes normal -b <C-a>
map <A--> -modes normal -b <C-x>
" passthrough
map \\ -b <C-v>

" disable <C-q> for quitting
map <C-q> -modes main <Nop>

" Passthrough
map <ext>a -b <C-v>
map <C-a>  -b <C-z>

" Show mode "
map <S-f9> -description "Show mode" -modes base -js utils.message(dactyl.mode.name);

map g. -description "Repeat last ex command" -modes normal -b @:

map <browser>. -description "Stop loading"                          -js BrowserStop();
map <browser>c -description "Stop loading"                          -js BrowserStop();
map <browser>r -description "Reload .pentadactylrc"                 -ex rc
map <browser>R -description "Edit .pentadactylrc"                   -ex rce
map <browser>x -description "Maximize/Remaximize window"            -js window.restore(); window.maximize();
map <C-x>h     -description "Select all text"                       -modes normal -b iGvggy
map <C-x><C-c> -description "Quit browser"    -modes base  -ex quitall
map <C-x><C-x> -description "Restart browser" -modes normal,visual,menu -ex restart
map <C-x>;     -description "Command-line: Hide messages"           -modes base   -b :<Esc>
map <C-x>:     -description "Command-line: Hide and clear messages" -modes base   -b :messclear<Cr>
map gR         -description "Redraw screen"                         -ex redraw
map g;i        -description "Focus second input area"               -modes normal -b 2gi
map !          -description "Shell command"                         -b :!<Space>
map gD         -description "Focus address bar"                     <A-d><C-e>
map gK         -description "Focus search bar"                      -b <Pass><C-k>

" Save "
map <C-x><C-s>
\ -description "Save page"
\ -modes normal,insert,visual,command-line
\ -js saveDocument(getBrowser().selectedBrowser.contentDocument);
map <C-x><C-S-S>
\ -description "Save page as MAFF"
\ -modes normal,insert,visual,command-line
\ -js saveDocument(getBrowser().selectedBrowser.contentDocument,
\                  {mafAskSaveArchive: true});

" -------------------------------------------------------------------------------
" ,--------------------------,
" | <browser>a -- Annoyances |
" '--------------------------'
map <browser>a      -description "(show bindings: Annoyances)" -js CommandExMode().open("showkeys <browser>a")
map <browser>a<C-h> -description "(show bindings: Annoyances)" -js CommandExMode().open("showkeys <browser>a")
map <browser>ar -description "Enable Right-click"
\    -js content.document.onmousedown=null;content.document.onclick=null;content.document.oncontextmenu=null

" ,------------------------,
" | <browser>d -- Download |
" '------------------------'
map <browser>d      -description "(show bindings)" -js CommandExMode().open("showkeys <browser>d")
map <browser>d<C-h> -description "(show bindings)" -js CommandExMode().open("showkeys <browser>d")
map <browser>ddw -description "Download to ~/Downloads/" -ex dlto ~/Downloads
map <browser>ddc -description "Download to ~/Documents/" -ex dlto ~/Documents
map <browser>ddr -description "Download to ~/Documents/receipts" -ex dlto ~/Documents/receipts
map <browser>de/ -description "Download to ~/ebooks/" -ex dlto ~/ebooks
map <browser>dec -description "Download to ~/ebooks/coding" -ex dlto ~/ebooks/coding
map <browser>des -description "Download to ~/ebooks/css" -ex dlto ~/ebooks/css
map <browser>dea -description "Download to ~/ebooks/articles" -ex dlto ~/ebooks/articles
map <browser>dhe -description "Download to ~/.emacs.d/private" -ex dlto ~/.emacs.d/private
map <browser>dhp -description "Download to ~/.pentadactyl" -ex dlto ~/.pentadactyl
map <browser>dhr -description "Download to ~/repos" -ex dlto ~/repos
map <browser>dhs -description "Download to ~/source" -ex dlto ~/source
map <browser>doc -description "Download to /opt/chrome-extensions" -ex dlto /opt/chrome-extensions
map <browser>dod -description "Download to /opt/deb" -ex dlto /opt/deb
map <browser>dof -description "Download to /opt/ff-addons" -ex dlto /opt/ff-addons
map <browser>dos -description "Download to /opt/scripts" -ex dlto /opt/scripts
map <browser>dow -description "Download to /opt/webapps" -ex dlto /opt/webapps
map <browser>do/ -description "Download to /opt/" -ex dlto /opt
map <browser>dtu -description "Toggle browser.download.useDownloadDir" -ex actoggleusedldir
map <browser>d<Space> -description "Set download directory" -b :dlset<Space>
map <browser>d?  -description "Show download settings" -js showDownloadSettings();

" NOTES: about:config download settings "
" When browser.download.useDownloadDir is false, saving opens dialog with default directory browser.download.lastDir "
" When browser.download.useDownloadDir is true, saving automatically saves in directory given by browser.download.dir "

command! dlto -nargs=1 -complete dir set! browser.download.lastDir=<args> | feedkeys <C-x><C-s>
command! dlset -nargs=1 -complete dir set! browser.download.lastDir=<args> | set! browser.download.dir=<args>

js <<EOF
function showDownloadSettings() {
    s = "browser.download.lastDir:............ "+prefroot.getCharPref("browser.download.lastDir")+"\n"+
        "browser.download.dir:................ "+prefroot.getCharPref("browser.download.dir")+"\n"+
        "browser.download.defaultFolder:...... "+prefroot.getCharPref("browser.download.defaultFolder")+"\n"+
        "browser.download.folderList:......... "+prefroot.getIntPref("browser.download.folderList")+"\n"+
        "browser.download.useDownloadDir:..... "+prefroot.getBoolPref("browser.download.useDownloadDir")+"\n"+
        "browser.download.lastDir.savePerSite: "+prefroot.getBoolPref("browser.download.lastDir.savePerSite");
    utils.message(s);
}
EOF

" ,---------------------,
" | <browser>m -- Menus |
" '---------------------'
map <browser>m<C-h> -description "(Show bindings)" -js CommandExMode().open("showkeys <browser>m")
map <browser>m      -description "(Show bindings)" -js CommandExMode().open("showkeys <browser>m")
map <browser>mm -b :emenu<SPACE>
map <browser>mf -b :emenu File.
map <browser>me -b :emenu Edit.
map <browser>mv -b :emenu View.
map <browser>mh -b :emenu History.
map <browser>mb -b :emenu Bookmarks.
map <browser>mt -b :emenu Tools.
map <browser>m/ -b :emenu Help.

" ,-----------------------,
" | <browser>b -- Sidebar |
" '-----------------------'
map <browser>bb -b :sidebar<SPACE>
map <browser>bc -ex sbclose
map <browser>bh -description "Toggle History Sidebar" -js toggleHistorySidebar();

js <<EOF
var sidebarDoc = sidebar.document;

function showHistorySidebar() { SidebarUI.show('viewHistorySidebar'); }
function hideHistorySidebar() { SidebarUI.hide(); }
function toggleHistorySidebar() {
    if (SidebarUI.isOpen) SidebarUI.hide();
    else SidebarUI.show('viewHistorySidebar');
    return SidebarUI.isOpen;
}
EOF

" Copying
map -modes normal -b <A-w> Y
" A-Esc: Pass-through Escape
map <A-Esc> -b <C-v><Esc>
" C-w closes tab; if last in window closes window.
map <C-w> -b :q<CR>
" movement
map <C-S-D> -modes normal -b <C-u>
map J       -modes normal -b <C-d>
map K       -modes normal -b <C-u>

" jumplist
map <C-j> -description "Show jump list" -b :jumps<CR>f

" -------------------------------------------------------------------------------
" ,------------------------------------------,
" | <app> -- Open current URL in application |
" '------------------------------------------'

" ,-------------------------------------,
" | <app>a -- Open external application |
" '-------------------------------------'
js <<EOF
function xopenMaybeFromBufferDir() {
    var localDirRegex = /^file:\/\/([^?#]*)/;
    var localDirMatch = buffer.URL.match(localDirRegex);
    if (localDirMatch) {
        var localDir = decodeURIComponent(localDirMatch[1]).replace(/ /g, '\\ ');
        CommandExMode().open('xopen ' + localDir);
    } else {
        CommandExMode().open('xopen ');
    }
}

function openMaffFile(f) {
    io.system(`~/.pentadactyl/scripts/runmaff "${f}" "${browser}"`);
}

function openLastDownloadAsMaff(n=1) {
    var dlP = getLastDownload(n);
    dlP.then(f=> openMaffFile(f));
}

function openLastDownloadDir(n=1) {
    var dlP = getLastDownload(n);
    dlP.then(f=> io.system(`dolphin $(dirname "${f}")`));
}

function renameLastDownload(n=1) {
    var dlP = getLastDownload(n);
    dlP.then(f=> {
        utils.message(
            io.system(
                `mv ${f} $(zenity --entry --text "Rename" --entry-text="${f}" 2>/dev/null)`
            ).output);
    })
}
EOF
map <app>a -description "(show bindings: External application)" -js CommandExMode().open("showkeys <app>a")
map <app>a<C-h> -description "(show bindings: External application)" -js CommandExMode().open("showkeys <app>a")
map <app>ap
\    -description "Open colour picker (gpick)"
\    -ex !gpick

map <app>c
\    -description "Open in Google Chrome (minimal profile)"
\    -ex ochromemin
map <app>C
\    -description "Open URL in Google Chrome (minimal profile)"
\    -ex ochromeminurl
map <app>;c
\    -description "Open in Google Chrome (default profile)"
\    -ex ochrome
map <app>;C
\    -description "Open URL in Google Chrome (default profile)"
\    -ex ochromeurl
map <app>d
\    -description "(show bindings: Access Downloads)"
\    -count
\    -js CommandExMode().open("showkeys <app>a");
map <app>dd
\    -description "Open last download directory in Dolphin"
\    -count
\    -js openLastDownloadDir(count||1);
map <app>dm
\    -description "Open last download as MAFF file"
\    -count
\    -js openLastDownloadAsMaff(count||1);
map <app>dr
\    -description "Rename last download using xdg-open"
\    -count
\    -js renameLastDownload(count||1)
map <app>dt
\    -description "Trash last download using xdg-open"
\    -count
\    -js trashLastDownload(count||1)
map <app>dx
\    -description "Open last download using xdg-open"
\    -count
\    -js xdgOpenLastDownload(count||1)
map <app>dy
\    -description "Yank last download path"
\    -count
\    -js getLastDownload(count||1).then(function (dlPath) { dactyl.utils.cbWrite(dlPath); });
map <app>f
\    -description "Open in Firefox"
\    -ex ofox
map <app>q
\    -description "Open in Qutebrowser"
\    -ex oqute
map <app>vm -description "Open MAFF file in browser" -b :omafffile<Space>
map <app>x
\    -description "Open local file with xdg-open"
\    -js xopenMaybeFromBufferDir();

" Open MAFF in browser "
command! omafffile -nargs 1 -js openMaffFile(args[0]);

" ,-------------------------,
" | <app>e -- Open in Emacs |
" '-------------------------'
js <<EOF
/* TODO: How to save text to a file without using clipboard/selection? */
function openPageTextInEmacs(createFrame=true) {
    editor.setRegister("*", content.document.body.innerText, false);
    if (createFrame)
        var cmd = "tempfile=`mktemp` && xsel -p > $tempfile && emacsclient -c $tempfile";
    else
        var cmd = "tempfile=`mktemp` && xsel -p > $tempfile && emacsclient $tempfile";
    io.system(cmd);
}
EOF
map <app>e -description "(show bindings: Open in Emacs)" -js CommandExMode().open("showkeys <app>e")
map <app>ee
\    -description "Open file in Emacs"
\    -ex openinemacs
map <app>eE
\    -description "Open page in EWW"
\    -ex openUrlInEWW
map <app>ed
\    -description "Open directory in Dired"
\    -ex openDirectoryInDired
map <app>et
\    -description "Open page text in Emacs"
\    -count
\    -js openPageTextInEmacs(!count)
map <app>ew
\    -description "Open page in Emacs w3m"
\    -js dactyl.execute("!emacsclient -e '(w3m-goto-url "+'"'+buffer.URL+'")'+"'");

map <app>D
\    -description "Open directory in Dolphin"
\    -ex openDirectoryInDolphin
map <app>op
\    -description "Visit Packt Free Learning site in Google Chrome"
\    -ex ochromeurl "https://www.packtpub.com/packt/offers/free-learning"
map <app>p -description "(show bindings: Password Hasher)" -js CommandExMode().open("showkeys <app>p")
map <app>ph
\    -description "Password hasher"
\    -ex pwhash
map <app>pp
\    -description "Password hasher: hash site domain"
\    -ex pwhashsite
map <app>pu
\    -description "Password hasher: hash site domain"
\    -b :pwhashdomain<Space>
" ,---------------------------------,
" | <app>s -- Switch to Application |
" '---------------------------------'
map <app>s -description "(show bindings: Switch to Application)" -js CommandExMode().open("showkeys <app>s")
map <app>sa
\    -description "Switch to Alarm Clock"
\    -js io.system("alarm-clock-applet")
map <app>se
\    -description "Switch to Emacs"
\    -js io.system("wmctrl -a emacs")
map <app>sv
\    -description "Switch to VLC"
\    -js io.system("wmctrl -a vlc")

" open file with xdg-open
" FIXME: issue with maff files with spaces in directory (not name)
command! xopen -nargs=1 -complete=file -js dactyl.execute("!xdg-open " + escapeFilenameUnescapedChars(args[0]));

" Open in Google Chrome "
command! ochrome :exec `!google-chrome --disable-infobars "${buffer.URL}" &`
command! ochromeurl -nargs + :exec `!google-chrome --disable-infobars "<args>" &`
command! ochromesearch -nargs + :exec `!google-chrome --disable-infobars "? <args>" &`
command! ochromemin :exec `!google-chrome --profile-directory='Profile 1' "${buffer.URL}" &`
command! ochromeminurl -nargs + :exec `!google-chrome --profile-directory='Profile 1' "<args>" &`
" Open in Firefox "
command! ofox :exec `!/opt/firefox/firefox -new-tab "${buffer.URL}" &`
" Open in Qutebrowser "
command! oqute :exec `!qutebrowser "${buffer.URL}" &`

" Open in Emacs "
command! openDirectoryInDired
    \ -description "Open the current file's directory in Dired."
    \ -js var file = decodeURIComponent(buffer.URL.replace(/^file:\/\//,'').replace(/[?#].*/,''));
    \     var dir = file.replace(/[^/]*$/,'');
    \     dactyl.execute(`!emacsclient -e '(dired "${dir}")'`);
command! openinemacs
    \ -description "Open the current file for editing in Emacs."
    \ -nargs=?
    \ -complete=file
    \ -js openUrlInEmacs(args[0]);
command! openUrlInEWW -description "Open in EWW in Emacsclient"
    \ -js dactyl.execute("!emacsclient -e '(eww "+'"'+buffer.URL+'")'+"'");

" Open in Dolphin "
command! openDirectoryInDolphin
    \ -description "Open the current file's directory in Dolphin."
    \ -js var file = decodeURIComponent(buffer.URL.replace(/^file:\/\//,'').replace(/[?#].*/,''));
    \     var dir = file.replace(/[^/]*$/,'');
    \     dactyl.execute(`!dolphin "${dir}" 2>/dev/null`);

" Open File/Directory "
command! openf
    \ -description "Open a file/directory."
    \ -complete file
    \ -nargs 1
    \ -js var file = args[0].replace(/^~/, homedir);
    \     if (!file.startsWith('/')) file = homedir + file;
    \     file = 'file://' + file;
    \     dactyl.open(file);
command! tabopenf
    \ -description "Open a file/directory in a new tab."
    \ -complete file
    \ -nargs 1
    \ -js var file = args[0].replace(/^~/, homedir);
    \     if (!file.startsWith('/')) file = homedir + file;
    \     file = 'file://' + file;
    \     dactyl.open(file, {where: 'tab'});

" ,----------------------,
" | <leader>j - Japanese |
" '----------------------'
map <leader>j      -description "(show bindings: Japanese)" -js CommandExMode().open("showkeys <leader>j")
map <leader>j<C-h> -description "(show bindings: Japanese)" -js CommandExMode().open("showkeys <leader>j")
map <leader>jf
    \ -description "Jisho kanji search (hints)"
    \ -count
    \ -js window._dactylargs=[jishoKanjiSearch]; hints.show('カ');
map <leader>jj
    \ -description "Jisho search (clipboard)"
    \ -count
    \ -js jishoSearch(dactyl.clipboardRead(), count?'here':'tab');
map <leader>jk      -description "(show bindings: Kanji)" -js CommandExMode().open("showkeys <leader>jk")
map <leader>jk<C-h> -description "(show bindings: Kanji)" -js CommandExMode().open("showkeys <leader>jk")
map <leader>jkh -description "Google Translate handwritten input"
    \ -count -js openOrSelectTab('https://translate.google.com.au/#ja/en/', count?"here":"tab", /https:\/\/translate\.google\.com\.au\/(#ja\/en\/|.*&sl=ja.*&tl=en).*/);
map <leader>jkp
    \ -description "Jisho kanji search (clipboard)"
    \ -count
    \ -js jishoKanjiSearch(dactyl.clipboardRead(), count?'here':'tab');
map <leader>jkv -description "Visual Kanji Search (similar kanji)"
    \ -count -js openOrSelectTab("https://thekanjimap.com/index.html?k="+dactyl.clipboardRead(),
    \                            count?"here":"tab");
map <leader>jm -description "Jisho multiword search" -b :jishomultisearch<Space>
map <leader>jp -description "Popjisyo Japanese Hints" -ex popjisyo

" ,-----------------------------,
" | <leader>m - Manipulate Page |
" '-----------------------------'
map <leader>m      -description "(show bindings: Manipulate Page)"
\    -js CommandExMode().open("showkeys <leader>m")
map <leader>m<C-h> -description "(show bindings: Manipulate Page)"
\    -js CommandExMode().open("showkeys <leader>m")
map <leader>ms -description "Open selection as HTML" -js openHTML(getSelectionHtml(), count?"here":"tab");
map <leader>mcm -description "Add margins to page body" -b addmargin<SPACE>
map <leader>mbp -description "Print What You Like" -ex prwul

" ,--------------------------,
" | <leader>n - edit content |
" '--------------------------'
map <leader>n      -description "(show bindings: Edit Content)" -js CommandExMode().open("showkeys <leader>n")
map <leader>n<C-h> -description "(show bindings: Edit Content)" -js CommandExMode().open("showkeys <leader>n")
map <leader>na -description "Isolate Article" -js isolateArticle();
map <leader>ni -description "Remove images" -ex removeimages
map <leader>nn -description "Remove selector" -b :removeselector<Space>
map <leader>no -description "Isolate selector" -b :isolateselector<Space>
map <leader>nO
\    -description "SEL:EXPR [SEL2:EXPR2] ...\tIsolate selectors if optional EXPR holds. Escape quotes"
\    -b :isolateselectorsfiltered<Space>
map <leader>np -description "lmnpop " -js hints.show('🄿');
map <leader>nr -description "Remove cruft" -ex removecruft

js <<EOF
function isolateArticle() {
    isolateSelectors("article:first-of-type");
    removeSelectors(".sharedaddy");
}
EOF


" ,------------------,
" | <leader>o - Open |
" '------------------'
map <leader>o      -description "(show bindings: Open)" -js CommandExMode().open("showkeys <leader>o")
map <leader>o<C-h> -description "(show bindings: Open)" -js CommandExMode().open("showkeys <leader>o")
map <leader>ol
\    -description "Open local file"
\    -b :openf<Space>
map <leader>oL
\    -description "Open local file (new tab)"
\    -b :tabopenf<Space>
map <leader>opd
\    -description "Open clipboard text in wiktionary"
\    -count -js wiktionaryGotoPage(dactyl.clipboardRead(), count?"here":"tab", true);
map <leader>opw
\    -description "Open clipboard text in wikipedia"
\    -count -js wikipediaGotoPage(dactyl.clipboardRead(), count?"here":"tab", true);
map <leader>ow
\    -description "Open in new window"
\    -count -b :winopen<Space>

" ,------------------,
" | <leader>s - Save |
" '------------------'
map <leader>s      -description "(show bindings: Save)"
\    -js CommandExMode().open("showkeys <Leader>s")
map <leader>s<C-h> -description "(show bindings: Save)"
\    -js CommandExMode().open("showkeys <Leader>s")
map <leader>sp -description "Save PDF" -b :dlpdf<Space>~/ebooks/

" ,---------------------,
" | <leader>t - toggles |
" '---------------------'
map <leader>t<C-h>  -description "(show bindings: Toggles)"
\                   -js CommandExMode().open("showkeys <Leader>t")
map <leader>tc<C-h> -description "(show bindings: Config toggles)"
\                   -js CommandExMode().open("showkeys <Leader>tc")
map <leader>t   -description "(show bindings: Toggles)"         -js CommandExMode().open("showkeys <Leader>t")
map <leader>ta  -description "Toggle User Agent Override"         -ex actoggleuaoverride
map <leader>tc  -description "(show bindings: Config toggles)"  -js CommandExMode().open("showkeys <Leader>tc")
map <leader>tca -description "Toggle autoplay"                    -ex actoggleautoplay
map <leader>tcb -description "Toggle popup blocking"              -ex actoggleenablepopupblocker
map <leader>tcc -description "Cycle CSP/CSP strict dynamic"       -ex accyclecsp
map <leader>tcj -description "Toggle javascript"                  -ex actogglejs
map <leader>tco -description "Toggle strict origin"               -ex actogglestrictorigin
map <leader>tcO -description "Toggle OCSP stapling"               -ex actoggleocspstapling
map <leader>tct -description "Toggle related tabs after current"  -ex actogglerelatedtabaftercurrent
map <leader>tcu -description "Toggle UA override"                 -ex actoggleuaoverride
map <leader>tcw -description "Toggle open in new window"          -ex actoggleopennewwin
map <leader>te  -description "Toggle designMode"                  -ex designmode
map <leader>tE  -description "Toggle contentEditable"             -ex contenteditable
map <leader>tj  -description "Toggle Javascript"                  -ex actogglejs
map <leader>to  -description "Toggle Online"                      -ex toggleoption online
map <leader>ts  -description "Toggle HTTPS"                       -js toggleHTTPS()
map <leader>tu  -description "Toggle User Mode (Minimal Styling)" -ex set usermode!
map <leader>tv  -description "Toggle Visited Links Styling"       -ex styletoggle  -name visitedlinks

map <leader>?c -description "Display config value" -b :acget

" ,-------------------------,
" | <leader>T - GUI toggles |
" '-------------------------'
map <leader>T       -description "(show bindings: GUI Toggles)"       -js CommandExMode().open("showkeys <Leader>T")
map <leader>T<C-h>  -description "(show bindings: GUI Toggles)"       -js CommandExMode().open("showkeys <Leader>T")
map <leader>Ta      -description "Toggle nav & bookmarks toolbars"    -ex set guioptions!=TB | set showtabline!=always,never
map <leader>Tb      -description "Toggle bookmark bar"                -ex set guioptions!=B
map <leader>Tc      -description "(show bindings: GUI Style Toggles)" -js CommandExMode().open("showkeys <Leader>Tc")
map <leader>Tc<C-h> -description "(show bindings: GUI Style Toggles)" -js CommandExMode().open("showkeys <Leader>Tc")
map <leader>Tct     -description "Toggle highlight active tab"        -ex styletoggle -name activetabhighlight
map <leader>Td      -description "Toggle webdev toolbar"              -ex toolbartoggle Web Developer Toolbar
map <leader>Te      -description "Toggle navigation toolbar"          -ex set guioptions!=T
map <leader>Tm      -description "Toggle menu bar"                    -ex set guioptions!=m
map <leader>To      -description "Toggle add-on bar"                  -ex toolbartoggle Add-on Bar
map <leader>Ts      -description "Toggle status bar"                  -ex set guioptions!=s
map <leader>Tt      -description "Toggle tab bar"                     -ex set showtabline!=always,never

map <A-Up>   -description "Show navigation & bookmarks toolbars and command line"
\            -ex set guioptions-=mTB | set guioptions+=c | set showtabline=never
map <A-Down> -description "Hide navigation & bookmarks toolbars and command line"
\            -ex set guioptions+=mTB | set guioptions-=c | set showtabline=always

" ,-------------------------,
" | <leader>u - userscripts |
" '-------------------------'
map <leader>u      -description "(show bindings: Extensions)" -js CommandExMode().open("showkeys <leader>u")
map <leader>u<C-h> -description "(show bindings: Extensions)" -js CommandExMode().open("showkeys <leader>u")
map <leader>uh -description "word highlight" -ex emenu Tools.Greasemonkey.word highlight
map <leader>ut -description "TeX The World" -ex emenu Tools.Greasemonkey.TeX the world

" ,---------------------------,
" | <leader>x - miscellaneous |
" '---------------------------'
map <leader>x<C-h>
\    -description "(show bindings: Misc)"
\    -js CommandExMode().open("showkeys <leader>x")
map <leader>x
\    -description "(show bindings: Misc)"
\    -js CommandExMode().open("showkeys <leader>x")
" ,---------------------------,
" | Conversion and Arithmetic |
" '---------------------------'
map <leader>xc<C-h>
\    -description "(show bindings: Misc/Conversion,Arithmetic)"
\    -js CommandExMode().open("showkeys <leader>xc")
map <leader>xc
\    -description "(show bindings: Misc/Conversion&Arithmetic)"
\    -js CommandExMode().open("showkeys <leader>xc")
map <leader>xci -description "Convert inches to centimeters (by hints)" -js hints.show("”");
map <leader>xcd -description "Convert USD to AUD ($US->$AU)" -b :usd2aud<Space>
map <leader>xcc -description "Convert quantity into other units" -b :convertunits<Space>

command! convertunits
    \ -nargs +
    \ -description "Convert quantity into other units with GNU units [N UNIT1 UNIT2]"
    \ -js utils.message(convertUnitsWrapper(...args));
command! usd2aud
    \ -nargs *
    \ -description "convert $US prices to $AU"
    \ -js utils.message(args.map(x=>USDtoAUD(x).toFixed(2)).join(" "));
command! setusdaudexchange
    \ -nargs 1
    \ -description "Set exchange rate of $AU/$US"
    \ -js setUSDAUDexchange(args[0]);
command! sumusd2aud
    \ -nargs *
    \ -description "Sum $US prices and convert to $AU"
    \ -js utils.message(USDtoAUD(args.reduce((a,b)=>parseFloat(a)+parseFloat(b))));

command! sum -nargs * -js utils.message(args.reduce((a,b)=>parseFloat(a)+parseFloat(b)));
command! product -nargs * -js utils.message(args.reduce((a,b)=>parseFloat(a)*parseFloat(b)));
map <leader>+ -b :sum<Space>
map <leader>* -b :product<Space>

js <<EOF
function convertUnits(n, unit1, unit2) {
    return Number(io.system(`units -t "${n} ${unit1}" ${unit2}`).output);
}
function convertUnitsWrapper(...args) {
    var n, unit1, unit2;
    if (args.length==2) {
        var match = args[0].match(/(\d+)(.*)/);
        n = match[1];
        unit1 = match[2];
        unit2 = args[1];
    } else {
        [n, unit1, unit2] = args;
    }
    var res = convertUnits(n, unit1, unit2);
    return n + unit1 + " = " + res + unit2;
}
EOF

" Download PDF "
command! dlpdf
\    -nargs=1
\    -complete=dir
\    -js dlPDF(args[0]);
js <<EOF
function dlPDF(dir) {
    var title = content.document.querySelector('.textLayer>div').textContent;
    var safeTitle = title.replace("\n", " - ").replace(/\//g, "∕");
    var path = dir.replace(/\/?$/, "/") + safeTitle;
    CommandExMode().open(`saveas ${path}.pdf`);
}
EOF

js <<EOF
function wikipediaGotoPage(s, where="tab", openorselect=true) {
    var page = strToWikiTitle(s);
    var url = `https://en.wikipedia.org/wiki/${page}`;
    if (openorselect)
        openOrSelectTab(url, where);
    else
        dactyl.open(url, { where: where });
}
function wiktionaryGotoPage(s, where="tab", openorselect=true) {
    var page = strToWikiTitle(s, false);
    var url = `https://en.wiktionary.org/wiki/${page}`;
    if (openorselect)
        openOrSelectTab(url, where);
    else
        dactyl.open(url, { where: where });
}
EOF


" ,----------------------, ,-----------,
" | Web Sites & Web Apps | | <leader>a |
" '----------------------' '-----------'
map <leader>a
\    -description "(show bindings: Web Sites)"
\    -js CommandExMode().open("showkeys <leader>a")
map <leader>a<C-h>
\    -description "(show bindings: Web Sites)"
\    -js CommandExMode().open("showkeys <leader>a")
" <leader>aa - Misc Accounts"
map <leader>aa
\    -description "(show bindings: Web Sites/Misc Accts)"
\    -js CommandExMode().open("showkeys <leader>aa");
map <leader>aa<C-h>
\    -description "(show bindings: Web Sites/Misc Accts)"
\    -js CommandExMode().open("showkeys <leader>aa");
map <leader>aai
    \ -description "Open Inoreader"
    \ -count -js openOrSelectTab("https://www.inoreader.com/dashboard");
"  <leader>aap - Packt "
map <leader>aap
\    -description "(show bindings: Web Sites/Packt)"
\    -js CommandExMode().open("showkeys <leader>aap");
map <leader>aap<C-h>
\    -description "(show bindings: Web Sites/Packt)"
\    -js CommandExMode().open("showkeys <leader>aap");
map <leader>aapa
    \ -description "Append today's Packt free title to library"
    \ -js packtWriteTitleToListAndShowEndOfList();
map <leader>aapf
    \ -description "Open Packt Free Learning"
    \ -count -js openOrSelectTab("https://www.packtpub.com//packt/offers/free-learning?login=1");
map <leader>aapl
    \ -description "Open Packt Library"
    \ -count -js openOrSelectTab("https://www.packtpub.com/account/my-ebooks");
map <leader>aapL
    \ -description "Open Packt Library local list"
    \ -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/data/packt-library.txt`);
map <leader>aapn
    \ -description "Is today's Packt free title already in library?"
    \ -js utils.message(packtGetTodaysTitle() + ": " + (packtIsTodaysTitleInLibrary() ? "Already in library" : "NOT in library"));
map <leader>aapt
    \ -description "Yank today's Packt free title to clipboard"
    \ -js utils.yankWithMsg(packtGetTodaysTitle());
"  <leader>aar - Art "
map <leader>aarj
\    -description "JustSketchMe - posable figure model"
\    -js openOrSelectTab("http://justsketch.me");
" Banking "
map <leader>ab
    \ -description "Open Banking (Chrome)"
    \ -ex ochromeurl ${user.mybankurl}
" <leader>ad - Diagrams"
map <leader>ada
    \ -description "Open AsciiFlow"
    \ -count -js openOrSelectTab('http://asciiflow.com/', count?"here":"tab");
" eBay "
map <leader>ae
    \ -description "Open eBay"
    \ -count -js openOrSelectTab('https://www.ebay.com.au/myb/Summary', count?"here":"tab");
" <leader>ag - Repos "
map <leader>aag
\    -description "(show bindings: Web Sites/Repos)"
\    -js CommandExMode().open("showkeys <leader>aag");
map <leader>aag<C-h>
\    -description "(show bindings: Web Sites/Repos)"
\    -js CommandExMode().open("showkeys <leader>aag");
map <leader>agh
    \ -description "Open My Github: Repositories"
    \ -count -js openOrSelectTab('https://github.com/troyp?tab=repositories', count?"here":"tab");
map <leader>agb
    \ -description "Open My Bitbucket"
    \ -count -js openOrSelectTab('https://bitbucket.org/', count?"here":"tab");
" Email: <leader>am "
map <leader>am
\    -description "(show bindings: Web Sites/Email)"
\    -js CommandExMode().open("showkeys <leader>am");
map <leader>am<C-h>
\    -description "(show bindings: Web Sites/Email)"
\    -js CommandExMode().open("showkeys <leader>am");
map <leader>amc
    \ -description "Open Google Contacts"
    \ -count -js openOrSelectTab("https://contacts.google.com/", count?"here":"tab");
map <leader>amC
    \ -description "Open Gmail Contacts (basic)"
    \ -count -js openOrSelectTab("https://mail.google.com/mail/u/0/h/1f0xqcpo2pdl3/?&v=cl",
    \                            count?"here":"tab",
    \                            /https:\/\/mail.google.com\/mail\/u\/0\/h\/.*v=cl/);
map <leader>amm
    \ -description "Open Gmail Basic"
    \ -count -js openOrSelectTab('https://mail.google.com/mail/u/0/h/1f0xqcpo2pdl3/?&',
    \                            count?"here":"tab",
    \                            /https:\/\/mail.google.com\/mail\/u\/0\/h\/.*\?&/);
map <leader>amg
    \ -description "Open Gmail"
    \ -count -js openOrSelectTab('https://mail.google.com/mail/u/0/#inbox', count?"here":"tab");
map <leader>amy
    \ -description "Open Y7Mail"
    \ -count -js openOrSelectTab('https://mg.mail.yahoo.com/', count?"here":"tab");
" Paypal "
map <leader>ap
    \ -description "Open Paypal"
    \ -count -js openOrSelectTab('https://www.paypal.com/myaccount/home', count?"here":"tab");
" <leader>ar - Reference"
map <leader>ar
\    -description "(show bindings: Web Sites/Reference)"
\    -js CommandExMode().open("showkeys <leader>ar");
map <leader>ar<C-h>
\    -description "(show bindings: Web Sites/Reference)"
\    -js CommandExMode().open("showkeys <leader>ar");
map <leader>ara
    \ -description "Ballina Airport: Arrivals and Departures"
    \ -count -js openOrSelectTab("http://ballinabyronairport.com.au/arrivals-departures/");
map <leader>arbib
    \ -description "King James Bible BOOK [CH:SEC]"
    \ -count -b :kingjames<SPACE>
map <leader>arwp
    \ -description "Goto Wikpedia article"
    \ -count -b :wikipediapage<SPACE>
map <leader>arwe
    \ -description "Goto Wikpedia episode list"
    \ -count -b :wpeplist<SPACE>
" <leader>as - Shopping & Schedules"
map <leader>as
\    -description "(show bindings: Shopping)"
\    -js CommandExMode().open("showkeys <leader>as");
map <leader>as<C-h>
\    -description "(show bindings: Shopping)"
\    -js CommandExMode().open("showkeys <leader>as");
map <leader>asa
    \ -description "open Amazon AU"
    \ -count -js selectTab("https://www.amazon.com.au/gp/cart/view.html/ref=nav_cart") ||
    \                openOrSelectTab("https://www.amazon.com.au/gp/cart/view.html/ref=nav_cart", null, /https:\/\/[^.]+\.amazon\.com\.au/);
map <leader>ase
    \ -description "open eBay"
    \ -count -js selectTab("https://cart.ebay.com.au") ||
    \                openOrSelectTab("https://cart.ebay.com.au", null, /https:\/\/[^.]+\.ebay\.com\.au/);
map <leader>asj
    \ -description "open Jackson's Art"
    \ -count -js selectTab("https://www.jacksonsart.com/en-au/checkout/cart/") ||
    \                openOrSelectTab("https://www.jacksonsart.com/en-au/checkout/cart/", null, /https:\/\/[^.]+\.jacksonsart\.com/);
map <leader>aq
\    -description "Open Quix"
\    -ex tabopen javascript:Quix();function%20Quix(){var%20e=encodeURIComponent;var%20t=window.getSelection?window.getSelection():(document.getSelection?document.getSelection():(document.selection?document.selection.createRange().text:''));var%20c=window.prompt('Quix:%20Type%20`help`%20for%20a%20list%20of%20commands:');if(t!=''){if(c){c+='%20'+t;}else{c=''+t;}}if(c){var%20u='https://www.quixapp.com/go/?c='+e(c)+'&t='+(document.title?e(document.title):'')+'&s='+'&v=090'+'&u='+(document.location?e(document.location):'');d=''+document.location;if(d.substr(0,4)!='http'){window.location=u+'&mode=direct';}else{heads=document.getElementsByTagName('head');if(c.substring(0,1)=='%20'){var%20w=window.open(u+'&mode=direct');w.focus();}else%20if(heads.length==0){window.location=u+'&mode=direct';}else{q=document.getElementById('quix');if(q){q.parentNode.removeChild(q);}sc=document.createElement('script');sc.src=u;sc.id='quix';sc.type='text/javascript';void(heads[0].appendChild(sc));}}}}
" Time "
map <leader>at
    \ -description "Open Time Server"
    \ -count -js openOrSelectTab('https://time.is/Sydney', count?"here":"tab", /^https:\/\/time\.is/);
" <leader>av - Video & Radio"
map <leader>av
\    -description "(show bindings: Web Sites/Video&Radio)"
\    -js CommandExMode().open("showkeys <leader>as");
map <leader>av<C-h>
\    -description "(show bindings: Web Sites/Video&Radio)"
\    -js CommandExMode().open("showkeys <leader>as");
map <leader>ava
    \ -description "AccuRadio Classical"
    \ -count -js openOrSelectTab("https://www.accuradio.com/classical/?name=Chamber%20Music&b0=Classical");
:if isPalemoon
    map <leader>avn -description "Open Netflix (Chrome)" -ex ochromeurl "https://www.netflix.com/browse"
:else
    map <leader>avn -description "Open Netflix"
    \ -count -js openOrSelectNetflix(count?"here":"tab");
:endif
" Weather "
map <leader>av
\    -description "(show bindings: Web Sites/Weather)"
\    -js CommandExMode().open("showkeys <leader>as");
map <leader>av<C-h>
\    -description "(show bindings: Web Sites/Weather)"
\    -js CommandExMode().open("showkeys <leader>as");
map <leader>aww
    \ -description "Open Lismore Weather (BoM)"
    \ -count -js openOrSelectTab('http://www.bom.gov.au/nsw/forecasts/lismore.shtml', count?"here":"tab");
map <leader>aws
    \ -description "Show Goonellabah Sunrise and Sunset Times"
    \ -js showSunriseSunset();
map <leader>awt
    \ -description "Open Goonellabah Weather (timeanddate.com)"
    \ -count -js openOrSelectTab('https://www.timeanddate.com/weather/@2164966', count?"here":"tab");
" MyGov "
map <leader>ay
    \ -description "Open MyGov"
    \ -count -js openOrSelectTab('https://my.gov.au/LoginServices/main/login?execution=e1s1',
    \                            count?"here":"tab");
" Amazon "
map <leader>azz
    \ -description "Open AU Amazon"
    \ -count -js openOrSelectTab("https://www.amazon.com");
map <leader>azu
    \ -description "Open US Amazon"
    \ -count -js openOrSelectTab("https://smile.amazon.com");

js <<EOF
function packtGetTodaysTitle() {
    return io.system(
               "curl -s https://www.packtpub.com/packt/offers/free-learning | " +
               "pup 'div.dotd-title text{}'"
            ).output.trim();
}

function packtIsTodaysTitleInLibrary() {
    return io.system(
                'grep -F "' +
                "$(curl -s https://www.packtpub.com/packt/offers/free-learning | pup 'div.dotd-title text{}' | python -c 'import sys; print(sys.stdin.read().strip())')" +
                '" ~/.pentadactyl/data/packt-library.txt'
            ).returnValue==0;
}

function packtWriteTitleToList(title=packtGetTodaysTitle()) {
    return io.system("printf '" + title + "\n' >> ~/.pentadactyl/data/packt-library.txt").returnValue;
}

function packtWriteTitleToListAndShowEndOfList(title=packtGetTodaysTitle()) {
    packtWriteTitleToList(title);
    utils.message(io.system("tail ~/.pentadactyl/data/packt-library.txt").output);
}

function openOrSelectNetflix(where='tab') {
    var alltabs = Array.from(tabs.allTabs);
    var existingTab = alltabs.find(
    t=> t.linkedBrowser.contentDocument &&
        t.linkedBrowser.contentDocument.URL.match(/https:\/\/www.netflix.com\//)
    );
    if (existingTab)
        tabs.select(existingTab);
    else
        dactyl.open('https://www.netflix.com/browse', {where: where});
}

function kingJames(book=null, chSec=null) {
    var baseURL = "https://en.wikisource.org/wiki/Bible_(King_James)";
    var fragment = chSec ? ("#"+chSec) : "";
    var urlExt = book ? ("/" + S.toTitleCase(book).replace(" ", "_") + fragment) : "";
    var url = baseURL + urlExt;
    openOrSelectTab(url);
}

var kingJamesBooks = ["Genesis", "Leviticus", "Numbers", "Deuteronomy", "Joshua", "Judges", "Ruth", "1_Samuel", "2_Samuel", "1_Kings", "2_Kings", "1_Chronicles", "2_Chronicles", "Ezra", "Nehemiah", "Esther", "Job", "Psalms", "Proverbs", "Ecclesiastes", "Song_of_Solomon", "Isaiah", "Jeremiah", "Lamentations", "Ezekiel", "Daniel", "Hosea", "Joel", "Amos", "Obadiah", "Jonah", "Micah", "Nahum", "Habakkuk", "Zephaniah", "Haggai", "Zechariah", "Malachi", "1_Esdras", "2_Esdras", "1_Esdras", "2_Esdras", "Tobit", "Judith", "Rest_of_Esther", "Wisdom_of_Solomon", "Ecclesiasticus", "Baruch", "Prayer_of_Azarias_and_Hymn_of_the_Three_Children", "Susanna", "Bel_and_the_Dragon", "Prayer_of_Manasseh", "1_Maccabees", "2_Maccabees", "Matthew", "Mark", "Luke", "John", "Acts", "Romans", "1_Corinthians", "2_Corinthians", "Galatians", "Ephesians", "Philippians", "Colossians", "1_Thessalonians", "2_Thessalonians", "1_Timothy", "2_Timothy", "Titus", "Philemon", "Hebrews", "James", "1_Peter", "2_Peter", "1_John", "2_John", "3_John", "Jude", "Revelation"];

var goonellabahLatLong = [-28.816782, 153.321018];
window.goonellabahLatLong = goonellabahLatLong;

function sunTimes() {
    var [lat, long] = goonellabahLatLong;
    return SunCalc.getTimes(new Date(), lat, long);
}
window.sunTimes = sunTimes;

function sunriseSunset() {
    var times = sunTimes();
    var [sunrise, sunset] = [times.sunrise, times.sunset];
    return [times.sunrise, times.sunset];
}

function showSunriseSunset() {
    var [sunrise, sunset] = sunriseSunset().map(t=>t.toTimeString());
    utils.cbWrite(`SUNRISE: ${sunrise}\nSUNSET:  ${sunset}`);
}

function inoreaderSubscribe(url=buffer.URL){
    tabOpenAdjacent('https://www.inoreader.com/bookmarklet/subscribe/' + encodeURIComponent(url||buffer.URL));
}

function wpEpList (s, where=dactyl.NEW_TAB, force_new=false) {
    var sConv = S.toTitleCase(s).split(/\s+/).join("_");
    var url = `en.wikipedia.org/wiki/List_of_${sConv}_episodes`;
    if (force_new) dactyl.open(url, {where: where});
    else openOrSelectTab(
        url,
        where,
        RegExp(`en\.wikipedia\.org/wiki/Lists?_of_${sConv}_episodes`),
    );
}

EOF

command! inoreadersubscribe
\    -description "Subscribe to site's feed with Inoreader"
\    -nargs=?
\    -complete=url
\    -js inoreaderSubscribe();

command! wikipediapage -description "Goto Wikipedia article"
\    -nargs=1
\    -js openOrSelectTab(`https://en.wikipedia.org/wiki/${S.capitalize(args[0].replace(" ", "_"))}`);
command! wpeplist
\    -description "Goto Wikipedia episode list"
\    -nargs=+
\    -bang
\    -js (wpEpList(args.join(" "), dactyl.NEWTAB, bang))

command! kingjames -description "King James Bible BOOK [CH:SEC]"
\    -nargs=*
\    -complete custom," (context) => { context.completions = kingJamesBooks.map(b=>[b, null]); } "
\    -js kingJames(args[0], args[1]);

" ,--------------,
" | Bookmarklets |
" '--------------'

" | Keepvid |
command! keepvid open javascript:document.location='http://keepvid.com/?url='+escape(window.location);

" | Page Zipper |
command! pagezipper :open javascript:(function(){if(window['pgzp']){_pgzpToggleBookmarklet();}else{window._page_zipper_is_bookmarklet=true;window._page_zipper=document.createElement('script');window._page_zipper.type='text/javascript';window._page_zipper.src='//www.printwhatyoulike.com/static/pagezipper/pagezipper_10.js';document.getElementsByTagName('head')[0].appendChild(window._page_zipper);}})();
map <C-Space> -description "Page Zipper" -ex pagezipper

js <<EOF
function openWithPagezipper(url) {
    var newtab = gBrowser.addTab(url);
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        window.setTimeout(()=>{
            dactyl.execute('pagezipper');
        }, 1300);
    });
}
EOF
command! openwithpagezipper -nargs 1 -js openWithPagezipper(args[0]);

" | Print What You Like |
command! prwul -description "run PrintWhatYouLike" open javascript:(function(){if(window['ppw']&&ppw['bookmarklet']){ppw.bookmarklet.toggle();}else{window._pwyl_home='//www.printwhatyoulike.com/';window._pwyl_pro_id=null;window._pwyl_bmkl=document.createElement('script');window._pwyl_bmkl.setAttribute('type','text/javascript');window._pwyl_bmkl.setAttribute('src',window._pwyl_home+'static/compressed/pwyl_bookmarklet_10.js');window._pwyl_bmkl.setAttribute('pwyl','true');document.getElementsByTagName('head')[0].appendChild(window._pwyl_bmkl);}})();

" | PrintFriendly |
command! printfriendly -description "Run Print Friendly" open javascript:(function(){if(window['priFri']){window.print()} else{var pfurl=''; pfstyle='nbk'; pfBkVersion='1'; if(window.location.href.match(/https/)){pfurl='https://pf-cdn.printfriendly.com/ssl/main.js'} else {pfurl='http://cdn.printfriendly.com/printfriendly.js'} _pnicer_script=document.createElement('SCRIPT'); _pnicer_script.type='text/javascript'; _pnicer_script.src=pfurl + '?x='+(Math.random()); document.getElementsByTagName('head')[0].appendChild(_pnicer_script);}})();


" ,-------------,
" | Translation |
" '-------------'
" Translation Prefix: <app>t "
map <app>t<C-h> -js CommandExMode().open("showkeys <app>t")
map <app>t      -js CommandExMode().open("showkeys <app>t")

js <<EOF

function googleTranslateText(s, from='auto', to='en', where=dactyl.NEW_TAB) {
    dactyl.open(`https://translate.google.com.au/#${from}/${to}/${s}`, where);
}

function googleTranslateUrl(url, from='auto', to='en', where=dactyl.NEW_TAB) {
    dactyl.open(`http://translate.google.com/translate?hl=&sl=${from}&tl=${to}&u=${url}`, where);
}

function googleFetchTranslation(s) {
    var newtab = gBrowser.addTab(`https://translate.google.com.au/#auto/en/${s}`);
    var fromtab = tabs.getTab();
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        window.setTimeout(()=>{
            var translation = content.document.getElementById('gt-res-content').innerText;
            utils.yankWithMsg(translation);
            gBrowser.selectedTab = fromtab;
            newtab.remove();
        }, 1000);
    });
}

function googleInsertTranslationForElement(elt) {
    var s = elt.innerText;
    var newtab = gBrowser.addTab(`https://translate.google.com.au/#auto/en/${s}`);
    var fromtab = tabs.getTab();
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        window.setTimeout(()=>{
            var translation = content.document.getElementById('gt-res-content').innerText;
            gBrowser.selectedTab = fromtab;
            newtab.remove();
            var transDiv = content.document.createElement('div');
            transDiv.style = "background: #FFC; border: solid #822 1px;";
            transDiv.innerText = translation;
            elt.parentNode.insertBefore(transDiv, elt);
        }, 1000);
    });
}
window.googleInsertTranslationForElement = googleInsertTranslationForElement;

function bingAddWebWidget() {
    var d=content.document.createElement('div');
    d.id='MicrosoftTranslatorWidget';
    d.class='Dark';
    d.style='color:white;background-color:#555555';
    content.document.body.insertBefore(d, content.document.body.firstChild);
    var s=content.document.createElement('script');
    s.type='text/javascript';
    code="setTimeout(function(){{var s=document.createElement('script');s.type='text/javascript';s.charset='UTF-8';s.src=((location && location.href && location.href.indexOf('https') == 0)?'https://ssl.microsofttranslator.com':'http://www.microsofttranslator.com')+'/ajax/v3/WidgetV3.ashx?siteData=ueOIGRSKkd965FeEGM5JtQ**&ctf=False&ui=true&settings=Manual&from=';var p=document.getElementsByTagName('head')[0]||document.documentElement;p.insertBefore(s,p.firstChild); }},0)";
    s.innerText = code;
    content.document.body.insertBefore(s, content.document.body.firstChild);
}

// WHERE parameter can be 'here', 'tab', 'background-tab' or 'window'
// which are the values of the variables dactyl.CURRENT_TAB etc

function bingTranslateUrl(url, from='auto', to='en', where=dactyl.NEW_TAB) {
    dactyl.open(`http://www.microsofttranslator.com/bv.aspx?from=${from}&to=${to}&a=${url}`, where);
}

function bingTranslateText(s, from='auto', to='en', where=dactyl.NEW_TAB) {
    dactyl.open(`http://www.bing.com/translator/?from=${from}&to=${to}&text=${s}`, where);
}

EOF

command! googletranslatetext
    \ -description "googletranslatetext TEXT [FROM] [TO] [WHERE]"
    \ -nargs=+
    \ -js googleTranslateText(args[0], args[1]||undefined, args[2]||undefined, args[3]||undefined);
command! googletranslateurl
    \ -description "googletranslateurl URL [FROM] [TO] [WHERE]"
    \ -nargs=+
    \ -js googleTranslateUrl(args[0], args[1]||undefined, args[2]||undefined, args[3]||undefined);
command! googletranslatepage
    \ -description "Google translate page (!: in new tab)"
    \ -bang
    \ -js googleTranslateUrl(buffer.URL, undefined, undefined, bang?'tab':'here');
command! googletranslateselection
    \ -description "Google translate selection"
    \ -nargs=*
    \ -bang
    \ -js googleTranslateText(dactyl.clipboardRead(), args[0]||undefined, args[1]||undefined);
command! googletranslatetextcb
    \ -description "Google translate text: store translation in clipboard"
    \ -nargs=+
    \ -js googleFetchTranslation(args.join(" "));

command! bingwebwidget -js bingAddWebWidget();
command! bingtranslatetext
    \ -description "bingtranslatetext TEXT [FROM] [TO] [WHERE]"
    \ -nargs=+
    \ -js bingTranslateText(args[0], args[1]||undefined, args[2]||undefined, args[3]||undefined);
command! bingtranslateurl
    \ -description "bingtranslateurl URL [FROM] [TO] [WHERE]"
    \ -nargs=+
    \ -js bingTranslateUrl(args[0], args[1]||undefined, args[2]||undefined, args[3]||undefined);
command! bingtranslatepage
    \ -description "Bing translate page (!: in new tab)"
    \ -bang
    \ -js bingTranslateUrl(buffer.URL, undefined, undefined, bang?'tab':'here');
command! trans
    \ -description "Google translate text"
    \ -nargs=+
    \ -js googleTranslateText(args.join(" "));

map <app>t  -description "(show bindings: translate)" -js CommandExMode().open("showkeys <app>t")
map <app>tt -description "Bing translate page" -ex bingtranslatepage
map <app>tg -description "Google translate page" -ex googletranslatepage
map <app>tx -description "Google translate text" -b :trans<Space>
map <app>tc -description "Google translate text to clipboard" -b :googletranslatetextcb<Space>
map <app>tv -description "Google translate selection" -ex googletranslateselection
map <app>tf -description "Google translate text (HINTS)" -js hints.show("ţ");
map <app>td -description "Google translate element (HINTS)" -js hints.show("Ţ");
map <app>ta -description "Google append translation (HINTS)" -js hints.show("ʈ");
map <app>tb -description "Google append translation (div) (HINTS)" -js hints.show("Ʈ");


" ,------,
" | Yank |
" '------'
map <yank>a -description "Yank text area #N contents" -b :yanktextarea<Space>
map <yank>c -description "Yank a table's CSV contents (use after :table2csv)." -b :yanktablecsvarea<Space>

" <yank>d -- Yank datetime "
map <yank>d  -description "(show bindings: yank datetime)" -js CommandExMode().open("showkeys <yank>d")
map <yank>da
\    -description "Yank current datetime (yyyy-mm-dd-HH-MM-SS)"
\    -js utils.cbAppend("-"+(new Date).toISOString().replace("T", "-").replace(/:[0-9.]+Z/, ""));
map <yank>dd
\    -description "Append current datetime to clipboard (-yyyy-mm-dd-HH-MM-SS)"
\    -js utils.cbWrite((new Date).toISOString().replace("T", "-").replace(/:[0-9.]+Z/, ""));

map <yank>D -description "Yank current date and time" -js utils.yankWithMsg(getDate());
map <yank>h -description "Yank page heading (choose with completion)" -b :yankheading<Space>
" <yank>i -- Yank input fields "
map <yank>i  -description "(show bindings: yank input fields)" -js CommandExMode().open("showkeys <yank>i")
map <yank>ii -description "Yank first text input field" -js yankInputFieldN(count || 1);
map <yank>ia -description "Yank text input fields" -js yankInputFields();

map <yank>I
\    -description "Yank all image locations"
\    -js yankCollection(content.document.images, l=>l.src);
map <yank>k -description "Yank kanji (HINTS)" -js hints.show("字");
map <yank>l
\    -description "Yank all links"
\    -js yankCollection(content.document.links, l=>l.href);
map <yank>L -description "Yank selection links" -ex yankselectionlinks
map <yank>m -description "Yank markdown link" -js utils.yankWithMsg(`[${buffer.title}](${buffer.URL})`)
map <yank>M -description "Yank markdown link (using H1 heading as title)"
    \ -js utils.yankWithMsg(`[${content.document.querySelector('h1').innerText}](${buffer.URL})`)
map <yank>p -description "Yank paragraph/heading/item (HINTS)" -js hints.show("ÿ");
" <yank>P -- yank from PDF "
map <yank>P  -description "(show bindings: yank from PDF)" -js CommandExMode().open("showkeys <yank>P")
map <yank>P1 -description "PDF: Yank first line" -js content.document.querySelectorAll(".textLayer>div")[0].textContent;
map <yank>P2 -description "PDF: Yank second line" -js content.document.querySelectorAll(".textLayer>div")[1].textContent;
map <yank>P3 -description "PDF: Yank third line" -js content.document.querySelectorAll(".textLayer>div")[2].textContent;
map <yank>P4 -description "PDF: Yank fourth line" -js content.document.querySelectorAll(".textLayer>div")[3].textContent;
map <yank>P5 -description "PDF: Yank fifth line" -js content.document.querySelectorAll(".textLayer>div")[4].textContent;
map <yank>PL -description "PDF: Yank specified lines (eg. 2-5,11,19)" -b :pdfYankSpecifiedLines<Space>
map <yank>PP -description "PDF: Yank nth line" -b :pdfYankNthLine<Space>

map <yank>r -description "Yank link reference (page title and url)"
    \ -js utils.yankWithMsg(`${buffer.title}: ${buffer.URL}`)
map <yank>R -description "Yank link reference (page title and heading)"
    \ -js utils.yankWithMsg(`${content.document.querySelector('h1').innerText}: ${buffer.URL}`)
map <yank>s -description "Yank element content by selector" -b :yankselectorcontent<Space>
map <yank>t -description "Yank page title" -js utils.yankWithMsg(buffer.title)
map <yank>T -description "Yank page title with date & time" -ex yanktitleanddate
" <yank>u -- Yank URL/filename "
map <yank>u  -description "(show bindings: yank URL)" -js CommandExMode().open("showkeys <yank>u")
map <yank>uu -description "Yank buffer URL (unencoded)" -ex yanktrueURL
map <yank>ud -description "Yank page domain" -js utils.yankWithMsg(buffer.URL.match(/:\/+([^/]+)/)[1])
map <yank>uf -description "Yank filename or buffer URL (unencoded)" -ex yankfilenameorURL
map <yank>up -description "Yank nth parent of URL" -count -js utils.yankWithMsg(getNthUrlPathParent(count));
map <yank>ur -description "Yank root path or nth level" -count -js utils.yankWithMsg(getNthFromRootPath(count));

map <yank>v -description "Yank browser version" -js utils.yankWithMsg(xulAppInfo.version);
map <yank>V -description "Yank browser name and version"
\           -js utils.yankWithMsg(`${xulAppInfo.name} ${xulAppInfo.version}`);
map <yank>x -description "Yank page text" -js utils.yankWithMsg(content.document.body.innerText);
map <yank>y -description "Yank buffer URL" -b y
map <yank>1 -description "Yank all <H1> headings" -ex yankselectorcontent h1
map <yank>2 -description "Yank all <H2> headings" -ex yankselectorcontent h2
map <yank>3 -description "Yank all <H3> headings" -ex yankselectorcontent h3
map <yank>4 -description "Yank all <H4> headings" -ex yankselectorcontent h4
map <yank>! -description "Yank <H1> heading (choose with completion)" -b :yankh1<Space>
map <yank>@ -description "Yank <H2> heading (choose with completion)" -b :yankh2<Space>
map <yank># -description "Yank <H3> heading (choose with completion)" -b :yankh3<Space>
map <yank>$ -description "Yank <H4> heading (choose with completion)" -b :yankh4<Space>
map <yank>,, -description "Append buffer URL to selection" -js utils.cbAppend(buffer.URL);

" Yank commands "
command! yanktrueURL
    \ -description "Yank the uncoded URL of the current buffer"
    \ -js var text=decodeURIComponent(buffer.URL);
    \     utils.yankWithMsg(text);
command! yankLastURLComponent
    \ -description "Yank the last component of the uncoded current buffer URL"
    \ -js var text=decodeURIComponent(buffer.URL);
    \     utils.yankWithMsg(text.replace(/.*\//,''));
command! yankfilenameorURL
    \ -description "Yank the unencoded filename or the hierarchical part of the current buffer's URL. Removes queries and fragments."
    \ -js var text=decodeURIComponent(buffer.URL.replace(/^file:\/\//,'').replace(/[?#].*/,''));
    \     utils.yankWithMsg(text);
command! yanktextarea
    \ -description "Yank the contents of textarea N."
    \ -nargs=1
    \ -js yankTextarea(Number(args[0])-1);
command! yanktitleanddate
\    -description "Yank: pagetitle (date-time)"
\    -js utils.yankWithMsg(`${buffer.title} (${getDate()})`);

" yankselectorcontent - note: if second arg contains quotes, they must be escaped (or the whole argument quoted) "
command! yankselectorcontent
    \ -description "Yank the contents of an element by selector."
    \ -nargs=+
    \ -js yankSelectorContent(args[0], evalStringOrFunction(args[1])||'innerText');

" Heading Yank Commands "
js yankheadingDelCharRegex = /®|©|™/g;
command! yankh1
    \ -description "Yank the contents of an H1 heading."
    \ -nargs=1
    \ -complete custom," (context) => { context.completions = yankSelectorCompletions('h1'); } "
    \ -js utils.yankWithMsg(args[0].replace(yankheadingDelCharRegex, ""));
command! yankh2
    \ -description "Yank the contents of an H2 heading."
    \ -nargs=1
    \ -complete custom," (context) => { context.completions = yankSelectorCompletions('h2'); } "
    \ -js utils.yankWithMsg(args[0].replace(yankheadingDelCharRegex, ""));
command! yankh3
    \ -description "Yank the contents of an H3 heading."
    \ -nargs=1
    \ -complete custom," (context) => { context.completions = yankSelectorCompletions('h3'); } "
    \ -js utils.yankWithMsg(args[0].replace(yankheadingDelCharRegex, ""));
command! yankh4
    \ -description "Yank the contents of an H4 heading."
    \ -nargs=1
    \ -complete custom," (context) => { context.completions = yankSelectorCompletions('h4'); } "
    \ -js utils.yankWithMsg(args[0].replace(yankheadingDelCharRegex, ""));
command! yankheading
    \ -description "Yank the contents of an H1-4 heading."
    \ -nargs=1
    \ -complete custom," (context) => { context.completions = yankSelectorCompletions('h1','h2','h3','h4'); } "
    \ -js utils.yankWithMsg(args[0].replace(yankheadingDelCharRegex, ""));
command! pdfYankNthLine
    \ -description "PDF: Yank nth line"
    \ -nargs=1
    \ -js utils.yankWithMsg(content.document.querySelectorAll('.textLayer>div')[Number(args[0])-1].textContent);
command! pdfYankSpecifiedLines
    \ -description "PDF: Yank nth line"
    \ -nargs=1
    \ -js pdfYankLines(parseRanges(args[0]));

js <<EOF
function yankTextarea(n) {
    var contents = getTextArea(n);
    var contents = getSelectorContent(`textarea:nth-of-type(${n})`);
    utils.cbWriteWithMessageLimit(contents);
}

function yankSelectorContent(sel, target='innerText') {
    utils.cbWriteWithMessageLimit(getSelectorContent(sel, target).join("\n"));
}

function yankSelectorCompletions(...sels) {
    return getSelectorsContent(sels).map(e=>[e]);
}

function pdfGetLines(lines, sep="\n") {
    var allLines = content.document.querySelectorAll('.textLayer>div');
    included = [];
    for (n of lines) { included.push(allLines[n-1].textContent); }
    return included.join(sep);
}
function pdfYankLines(lines, sep="\n") { utils.cbWriteWithMessageLimit(pdfGetLines(lines)); }
window.pdfYankLines = pdfYankLines;

function yankCollection(a, transform=null) {
    var s;
    if (transform)
        s = Array.from(a).map(transform).join("\n");
    else
        s = Array.from(a).join("\n");
    utils.cbWriteWithMessageLimit(s);
    return s;
}

function getInputFields() {
    var inputElts = Array.from(content.document.getElementsByTagName("input"));
    var textFields = inputElts.filter(
        e => [
            "text", "search", "email", "url", "file",
            "time", "date", "color", "number"
        ].includes(e.type));
    var textInput = textFields.filter(e => e.value!="");
    return textInput;
}
function yankInputFieldsRec(textInput) {
    if (textInput.length == 0) return;
    dactyl.clipboardWrite(textInput[0].value);
    window.setTimeout(
        () => yankInputFieldsRec(textInput.slice(1)),
        250
    );
}
function yankInputFields() {
    var textInput = getInputFields();
    yankInputFieldsRec(textInput);
    utils.message("Copied\n" + textInput.map(f=>"    "+f.value).join("\n"));
}

function yankInputFieldN(n) {
    var textInput = getInputFields();
    var N = textInput.length;
    if ( N >= n)
        utils.yankWithMsg(textInput[n-1].value);
    else
        utils.message(`Input field ${n} does not exist. There are only ${N} input fields.`);
}

EOF

" ,------,
" | Zoom |
" '------'
set! zoom.minPercent=10
set! zoom.maxPercent=1000
set! toolkit.zoomManager.zoomValues=.1,.2,.3,.5,.67,.8,.9,1,1.1,1.2,1.33,1.5,1.7,2,2.4,3,4,5,6,7,8,9

" note: text and full zoom can't be used independently. Using one cancels the other
map = +
map <C-=> zI
map <C--> zO
map z; -description "Toggle Text/Full Zoom" -js zoomToggle();

js <<EOF
function zoomToggle() {
    ZoomManager.toggleZoom();
    utils.message(`Full Zoom: ${ZoomManager.useFullZoom ? 'ON':'OFF'}`);
}
EOF

" ,----------------------,
" | Option Key Sequences |
" '----------------------'

" ,--------,
" | Search |
" '--------'
js <<EOF
findbarToggle = function() {
    if (gFindBar.hidden)
        dactyl.execute("normal <findbarOpenFocus>");
    else
        gFindBar.close();
}
function searchClipboard(engines=["g"], where="tab") {
    for (i=0; i<engines.length; i++) {
        dactyl.open(engines[i] + " " + readFromClipboard(), {where: where});
    }
}
EOF

command! searchgoogle -nargs * -js openWithPagezipper('https://www.google.com/search?hl=en&q=' + args.join(' '))
command! searchclipboard -nargs * -bang -js searchClipboard(args.length?args:undefined, bang?"here":"tab");

map <findbarOpenFocus> <C-v><C-f>
map <hide-inputs> -ex hideselector input
map <unhide-inputs> -ex unhideselector input
" clear the search term highlighting
map / <hide-inputs><find-forward>
map ? <hide-inputs><find-backward>
map <C-/> -ex noh
map <C-?> <unhide-inputs>
" Search from top of page
map g/ -modes normal -b gg/
" Firefox find box
map <A-/> -description "Toggle Firefox Find Box (native search in page)"
\    -modes base
\    -js findbarToggle();
" C-' Firefox link search
map "<C-'>" -modes normal -description "Firefox Quick Find Link Search (native link search)" -b <C-v>'

map <search>f   -description "Firefox Search-bar" -modes normal -b <C-v><C-j>
map <search>g   -description "Google Search (pagezipper)" -b :openwithpagezipper<Space>
map <search>m   -description "Multiple query bookmark search" -b :searchmultiple<Space>
map <search>M   -description "Multiple engine bookmark search" -b :multipleenginesearch<Space>
map <search>p   -description "Poly search: multiple queries & engines: :polysearch ENG... / Q..."
\               -b :polysearch<Space>
map <search>r   -description "Regex search: Forward" -modes normal -b /\r
map <search>R   -description "Regex search: Backward" -modes normal -b ?\r
map <search>s      -description "(show bindings: shopping search)" -js CommandExMode().open("showkeys <search>s")
map <search>s<C-h> -description "(show bindings: shopping search)" -js CommandExMode().open("showkeys <search>s")
map <search>saa -description "Shopping search: art (quick)" -b :shopartquick<Space>
map <search>saA -description "Shopping search: art" -b :shopart<Space>
map <search>saz -description "Shopping search: art (ebay + amazon.au + amazon)" -b :shopartEbayAmaz<Space>
map <search>ss  -description "Shopping search: ebay + amazon" -b :shop<Space>
map <search>sv      -description "(show bindings: vaping search)" -js CommandExMode().open("showkeys <search>sv")
map <search>sv<C-h> -description "(show bindings: vaping search)" -js CommandExMode().open("showkeys <search>sv")
map <search>svfm  -description "Shopping search/Vaping: fasttech mods" -b :shopvapeFtMod<Space>
map <search>sz  -description "Shopping search: ebay + amazon.au" -b :shopEbayAmazau<Space>
map <search>;saz
\    -description "Clipboard Shopping search: art (ebay + amazon + amazon.au)"
\    -js multipleEngineSearch(["e", "amazart", "amazau"], readFromClipboard());
map <search>;saa
\    -description "Clipboard Shopping search: art (quick)"
\    -js multipleEngineSearch(searchEngineArtShopsMain, readFromClipboard());
map <search>;saA
\    -description "Clipboard Shopping search: art"
\    -js multipleEngineSearch(searchEngineArtShops, readFromClipboard());
map <search>;ss
\    -description "Clipboard Shopping search: ebay + amazon"
\    -js multipleEngineSearch(["e", "amaz"], readFromClipboard());
map <search>;sz
\    -description "Clipboard Shopping search: ebay + amazon.au"
\    -js multipleEngineSearch(["e", "amazau"], readFromClipboard());
map <search>S   -description "Supermarket search: woolworths + coles" -b :supermarket<Space>
map <search>w   -description "Search for word containing..." -modes normal /\r\w*\w*<Left><Left><left>
map <search>0   -description "Search for word beginning with..." -modes normal -b /\r\w*<Left><Left><left>
map <search>\'  -description "Link Search: Forward" -modes normal -b /\l
map <search>\"  -description "Link Search: Backward" -modes normal -b ?\l    "
map <search>;;
\    -description "Search with engine (clipboard)"
\    -js utils.message("Searching clipboard contents: " + readFromClipboard()), CommandExMode().open("searchclipboard ");

" Special site searches "
map <search>;gh -description "Github search and goto first result" -b :ghsearchgo<SPACE>

command! ghsearchgo -description "Github search and goto first result"
\    -nargs=1 -js ghSearchAndGo(args[0]);
command! searchmultiple -description "Multiple query bookmark search"
\    -nargs=+ -complete=search -js searchMultiple(args[0], args.slice(1));
command! multipleenginesearch -description "Multiple engine bookmark search"
\    -nargs=+ -complete=search -js multipleEngineSearch(args.slice(0,-1), args.slice(-1));
command! polysearch -description "Poly search: multiple queries & engines: :polysearch ENG... / Q..."
\    -nargs=+ -complete=search -js polySearch.apply(null, A.split(args, "/"));

js searchEngineArtShops = ["e", "amazart", "amazau", "shopja", "shopnarts", "shopjpen", "shopma", "shopcraftol", "shoptas", "shopas", "shopow"];
js searchEngineArtShopsMain = ["e", "amazau", "shopja"];
command! shop -description "Shopping search: ebay + amazon"
\    -nargs=* -js multipleEngineSearch(["e", "amaz"], args.join(" "));
command! shopart -description "Shopping search: art"
\    -nargs=* -js multipleEngineSearch(searchEngineArtShops, args.join(" "));
command! shopartquick -description "Shopping search: art (quick)"
\    -nargs=* -js multipleEngineSearch(searchEngineArtShopsMain, args.join(" "));
command! shopEbayAmazau
\    -description "Shopping search: ebay + amazon"
\    -nargs=*
\    -js multipleEngineSearchWithDefaults(
\            [
\                ["e", "https://cart.ebay.com.au"],
\                ["amazau", "https://www.amazon.com.au/gp/cart/view.html/ref=nav_cart"]
\            ], args.join(" "));
command! shopartEbayAmaz -description "Shopping search: ebay + amazon"
\    -nargs=* -js multipleEngineSearch(["e", "amazart", "amazau"], args.join(" "));
command! supermarket -description "Supermarket shopping search: woolworths + coles"
\    -nargs=* -js multipleEngineSearch(["shopwoo", "shopcol"], args.join(" "));
command! shopvapeFtMod
\    -description "Search VV/VW mods on Fasttech (MAXPRICE, SEARCHTERM)"
\    -nargs *
\    -js ftSearchMods(args[0]||500, args.slice(1).join(" "));

js <<EOF
function ghSearchAndGo(s) {
    var cmd = `curl -G "https://api.github.com/search/repositories" --data-urlencode "q=${s}" 2>/dev/null | jq -r '.items | .[0] | {user: (.owner | .login), repo: .name}'`;
    var json = JSON.parse(io.system(cmd).output);
    var url = `https://github.com/${json.user}/${json.repo}`;
    openOrSelectTab(url);
}
function ftSearchMods(maxprice, s, where="tab") {
    var url = "https://www.fasttech.com/category/3099/e-cigarettes#!/177=Mods - VV/VW|-20=1|-2=10|-1=_" +
                  maxprice + "|p=0|s=p|ps=undefined|k=" + s;
    openOrSelectTab(url, where);
}

function searchMultiple(searchEngine, queries) {
    queries.reverse().forEach(q => tabSearchAdjacent(searchEngine, q, true));
}
function multipleEngineSearch(searchEngines, query) {
    searchEngines.reverse().forEach(s => tabSearchAdjacent(s, query, true));
}
function multipleEngineSearchWithDefaults(searchEnginesWithDefaults, query) {
    if (query)
        searchEnginesWithDefaults.reverse().forEach(pair => tabSearchAdjacent(pair[0], query, true));
    else
        searchEnginesWithDefaults.reverse().forEach(pair => tabOpenAdjacent(pair[1]), true);
}
function polySearch(searchEngines, queries) {
    queries.reverse().forEach(q =>
        searchEngines.reverse().forEach(s =>
            tabSearchAdjacent(s, q, true)));
}
EOF


" -----------------------------------------------------------------------------
" ,---------------------------------------,  MAP COMMANDS.
" | Command mode and insert mode bindings |  cmap: command-line mode
" '---------------------------------------'  imap: insert mode

js <<EOF
function getCmdline() { return CommandExMode().command; }
function copyCmdlineOrJS() {
    var cmd = getCmdline();
    var cmdOrJS = cmd.replace(/^ec(ho)? +|^js +|^javas(cript)? +/, '');
    utils.cbWrite(cmdOrJS);
}
function copyCmdlineOrConvertedJS() {
    var cmd = getCmdline();
    var cmdOrJS = cmd.replace(/^ec(ho)? +|^js +|^javas(cript)? +/, '');
    utils.cbWrite(cmdOrJS.replace(/content\.(document|window)/, "$1"));
}
EOF


" Useful pseudo-keys
map <copy-command-to-cb>   -modes command-line -b <A-a><C-v><C-c><End>
map <cut-command-to-cb>    -modes command-line -b <A-a><C-v><C-x>
map <paste>                -modes command-line -b <C-v><C-v>
map <copy>                 -modes command-line -b <C-v><C-c>
map <cut>                  -modes command-line -b <C-v><C-x>
map <forward-word>         -modes command-line -b <C-Right>
map <backward-word>        -modes command-line -b <C-Left>
map <insert-after-command> -modes command-line -b <Home><C-Right><Space>
map <cb-change-first-arg>  -modes command-line  -js var cmd=dactyl.clipboardRead(0).split(/\s+/); dactyl.clipboardWrite(cmd[0]+' '+cmd.slice(2).join(' '));
map <change-first-arg> -modes command-line <A-a><C-v><C-x><cb-change-first-arg><C-v><C-v><Home><C-Right><Space>

map <A-b>   -modes command-line <backward-word>
map <A-f>   -modes command-line <forward-word>

" copy command-line "
map <C-A-y>
\    -description "Copy command-line or JS expression"
\    -modes command-line
\    -js copyCmdlineOrJS();
map <C-A-S-Y>
\    -description "Copy command-line or JS expression (convert JS to page context)"
\    -modes command-line
\    -js copyCmdlineOrConvertedJS();
" kill rest of line "
map <C-k>   -description "Kill rest of line" -modes command-line -b <S-End><C-v><C-x>
" undo "
map <C-/>   -description "Undo" -modes command-line -b <C-v><C-z>
map <C-S-/> -description "Redo" -modes command-line -b <C-v><C-y>
" select all
map <C-x>h  -description "Select all" -modes command-line -b <Home><S-End><C-v><C-c>
" use c_<C-,>, c_<C-.> for cycling WildMode completion
map <C-,>   -description "Cycle wildmode completion" -modes command-line -b <Tab>
map <C-.>   -description "Cycle wildmode completion (backwards)" -modes command-line -b <S-Tab>
" use c_<A-/> for AltWildMode completion
map <A-/>   -description "Cycle altwildmode completion" -modes command-line -b <A-Tab>
map <A-S-/> -description "Cycle altwildmode completion (backwards)" -modes command-line -b <A-S-Tab>

map <C-y>   -modes command-line,insert -b <C-v><C-v>
map <C-p>   -modes command-line,insert -b <Up>
map <C-n>   -modes command-line,insert -b <Down>
map <C-S-P> -modes command-line,insert -b <S-Up>
map <C-S-N> -modes command-line,insert -b <S-Down>
map <C-f>   -modes command-line,insert -b <Right>
map <C-b>   -modes command-line,insert -b <Left>
map <C-S-F> -modes command-line,insert -b <C-Right>
map <C-S-B> -modes command-line,insert -b <C-Left>
map <C-l>   -modes command-line,insert -b <Del>
map <C-A-l> -modes command-line,insert -b <BS>
map <C-g>   -modes command-line,insert -b <C-u><Escape>

" repeat last search with a new keyword:
"   uses clipboard and javascript to do text processing, since <C-Del>, <C-BS>, <C-S-Left>, etc aren't working in map commands
"   TODO: remove dependence on clipboard and ad-hoc pseudo-keyword (either by getting delete-word keys working in `map`, or finding
"         javascript commands for retrieving command history and entering text in command line)
map <C-r> -modes command-line <up><A-a><C-v><C-c><down><cb-change-first-arg><C-v><C-v><Home><C-Right><Space>
map <C-s> -modes command-line <A-a><C-v><C-x><cb-change-first-arg><C-v><C-v><Home><C-Right><Space>
" map -modes command-line <C-s> <change-first-arg>

" SPACES (TODO)
" insert space with C-SPACE (When typing search keywords in
" a japanese IME, double-width spaces don't work. If F10
" won't convert spaces to single width, C-SPACE can be used.
map -modes command-line,insert -b <C-SPACE> <SPACE>
" TODO: Work out how to get current textarea. See insertAtCaret()
" nbsp
map -modes command-line,insert <C-S-s> -js alert("not implemented");
" em-space
" FIXME: Doesn't work.
"map -modes insert -b <C-s> \u2003
"execute "map -modes insert -b <C-s> \u2003"

execute "map <C-m>   -modes command-line,insert -b " + user.myemail
execute "map <C-S-m> -modes command-line,insert -b " + user.myemail2
execute "map <C-S-I> -modes command-line,insert -b " + user.myname
execute "map <C-S-T> -modes command-line,insert -b " + user.myfirstname
execute "map <C-S-L> -modes command-line,insert -b " + user.mylastname
execute "map <C-S-A> -modes command-line,insert -b " + user.mystreet
execute "map <C-S-S> -modes command-line,insert -b " + user.mysuburb
execute "map <C-S-D> -modes command-line,insert -b " + user.myaddress
execute "map <C-S-P> -modes command-line,insert -b " + user.myphone
execute "map <C-S-Z> -modes command-line,insert -b " + user.mypostcode
execute "map <C-S-Q> -modes command-line,insert -b " + user.mymasterpw
execute "map <C-S-C> -modes command-line,insert -b " + user.mycreditcard
map <C-S-W> -modes insert <pwhashsite>

" ,---------------------------------------,
" | Normal mode bindings for Command-line |
" '---------------------------------------'
map <leader>c<C-h> -description "(show bindings: Commandline)" -js CommandExMode().open("showkeys <leader>c")
map <leader>c      -description "(show bindings: Commandline)" -js CommandExMode().open("showkeys <leader>c")
map <leader>cc -description "Copy last js command or args to ex command" :<up><S-Home><S-C-Right><S-Right><C-c>
map <leader>cm -ex messages
map <leader>cM -ex messclear
" Repeat search just entered with keyword changed
map <leader>cr :<C-r>
" Repeat default just entered search with keyword
map <leader>cR :<up><Home><forward-word><Space>
" Search clipboard contents using search keyword
map <leader>cv -b :<C-v><C-v><Home>tabopen<Space><Space><Left>
map <leader>cV -b :<C-v><C-v><Home>open<Space><Space><Left>

" ,-------------------,
" | Command-line only |
" '-------------------'
" regex search: word boundary
map <C-1> -modes command-line (?= |^)
map <C-2> -modes command-line (?= |$)

" -----------------------------------------------------------------------------
" ,--------------------------------,  MAP COMMANDS.
" | Caret and visual mode bindings |  vmap: visual mode
" '--------------------------------'

" Caret and Visual mode:
" C-e end of line, C-a start of line.
" C-y scroll down, C-Y scroll up.
map <C-a>   -modes caret,visual -b 0
map <C-e>   -modes caret,visual -b $
map <C-S-Y> -modes caret,visual -b <C-e>

" select from caret mode "
map H -modes caret <S-left>
map L -modes caret <S-right>
map J -modes caret <S-down>
map K -modes caret <S-up>

" to search and select:
" 1. press / and type search term
" 2. when satisfied, press enter
" 3. press C-/ to clear highlighting of other matches
" 4. press i to enter insert mode
" 5. press <left> to move to start of match
" 6. press v to enter visual mode
" 7. use visual mode keys j,k,h,l,C-a,C-e, etc to extend selection

" -----------------------------------------------------------------------------
" ,--------------------,
" | Menu mode bindings |
" '--------------------'

map <C-n> -modes menu -b <Down>
map <C-p> -modes menu -b <Up>
map <C-j> -modes menu -b <Down>
map <C-k> -modes menu -b <Up>
map <C-h> -modes menu -b <Left>
map <C-l> -modes menu -b <Right>

" -----------------------------------------------------------------------------
" ,--------------------------------------,
" | Text-edit and operator mode bindings |
" '--------------------------------------'

map <C-a> -modes text-edit,operator -b ^
map <C-e> -modes text-edit,operator -b $
map <A-=> -modes text-edit,operator -b <C-a>
map <A--> -modes text-edit,operator -b <C-x>


" -----------------------------------------------------------------------------
" ,----------------------------,
" | Pass-through mode bindings |
" '----------------------------'

map <A-;> -modes pass-through -b :normal "<Esc><C-^>"<CR>


" -----------------------------------------------------------------------------
" ,----------,
" | Commands |
" '----------'

command! undob -description "Undo tab in background" -js undob()
command! backt -description "Create adjacent duplicate tab and go back in the browser history" -js backt()
command! forwardt -description "Create adjacent duplicate tab and go forward in the browser history" -js forwardt()
command! tabdupa -description "Create adjacent duplicate tab" -js tabCopyLeftBg()

command! pasteall -description "open all links in clipboard" -js openAllLinksInCB();
map gp -ex pasteall

command! viewpagesource -description "Toggle viewing page / viewing page source" -js viewPageSource();

command! rc source ~/.pentadactylrc
"command! rce viewsource! file:/home/troy/.pentadactylrc
command! rce !emacsclient ~/.pentadactylrc 2> /dev/null

command! loadutils runtime! utils.js | js var utils = dactyl.utils.getPlugin("utils");

command! showsource -nargs=1 -js (alert(self[args[0]].toString()))

command! saveindir
\    -nargs=1
\    -complete dir
\    -js dactyl.execute(`saveas ${joinFilePathFromDactylArgs(args[0])}`);
js <<EOF
function joinFilePathFromDactylArgs(dir) {
    var name = window._dactylargs && window._dactylargs[0];
    if (!name || typeof name != "string") {
        " default name "
        name = getDate();
    }
    return dir+'/'+name;
}
EOF

" enable jQuery in content document
command! jQueryLoad -js <<EOF
    var scripttag = content.document.createElement('script');
    scripttag.type = 'text/javascript';
    scripttag.async = true;
    scripttag.src = 'https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js';
    var parent = ( content.document.getElementsByTagName('head') ||
                    content.document.getElementsByTagName('body') )[0];
    parent.appendChild(scripttag);
EOF
" Stop page from intercepting key events:
command! nointercept -js document.addEventListener('keydown', function(e) { e.stopImmediatePropagation(); return false;}, true);

" Show all marks (quickmarks and url/local marks)
command! allmarks,amarks,am :qmarks | marks

" Troubleshooting information
command! info :tabopen about:support<CR>

" Unicode code of character
command! uni
   \ -js dactyl.echo(
   \     dactyl.clipboardRead().charCodeAt(0).toString() +
   \     "\tU+" +
   \     dactyl.clipboardRead().charCodeAt(0).toString(16));

command! yanktitle js dactyl.clipboardWrite(buffer.title)

" Search commands "
command! jkdamage -nargs=1 -js searchKanjiDamage(args[0]);
command! prefsuffsearch
    \ -description "Search for prefix/suffix on macroevolution.net"
    \ -nargs=1
    \ -js prefsuffSearch(args[0]);

" run shell command in terminal
command! -nargs=1 runinterminal -js runInZSH(args[0]);

" rubular
command! rubular -nargs=+ -js rubular(args[0], args[1]);

" Password Hasher "
command! pwhash
    \ -description "Open Password Hasher"
    \ -nargs=0
    \ -js pwHash();
command! pwhashgen
    \ -description "Generate short password from a raw URL using Password Hasher"
    \ -nargs=1
    \ -js pwHashGen(args[0]);
command! pwhashdomain
    \ -description "Generate short password from an URL (based on simplified domain) using Password Hasher"
    \ -nargs=1
    \ -js pwHashDomain(args[0], tabs.getTab());
command! pwhashsite
    \ -description "Generate short password from current site's URL using Password Hasher"
    \ -nargs=0
    \ -js pwHashDomain(buffer.URL, tabs.getTab());
map -modes input <pwhashsite> -ex pwhashsite

" Page editing commands "
command! contenteditable
    \ -description "Make content editable by setting e.contentEditable on each element"
    \ -js elts = content.document.getElementsByTagName("*");
    \     for (i=0; i<elts.length; ++i)
    \         if (elts[i].hasAttribute("contentEditable") && elts[i].contentEditable === "true")
    \             elts[i].contentEditable = "false";
    \         else
    \             elts[i].contentEditable = "true";
command! designmode
    \ -description "Make content editable by setting document.designMode"
    \ -js content.document.designMode = (content.document.designMode=="on") ? "off" : "on";
command! setbodybyid
    \ -nargs=1
    \ -complete=javascript
    \ -js setBodyById(args[0]);
command! hidefooter -js toggleFooter();
command! removefooter -js removeSelectors('footer');
command! removeimages -js removeSelectors('img');
command! removeselector -nargs=* -js removeSelectors.call(null, ...args);
command! removefirstselector -nargs=1 -js removeFirstSelector.call(null, args[0]);
command! removeselectorwithmatchingattribute -nargs=+ -js removeSelectorWithMatchingAttribute.call(null, ...args);
command! removecruft -js removeCruft();
command! removeiframes -js removeIFrames();
command! isolateselector -nargs=* -js isolateSelectors.call(null, ...args);
command! isolateselectorsfiltered
\    -description "Isolate selectors when (optional) EXPR holds. Escape quotes. args: SEL:EXPR [SEL2:EXPR2] ..."
\    -nargs=*
\    -js isolateSelectorsFiltered.call(
\            null,
\            ...args.map(pr=>{
\                var [sel,pred]=pr.split(":");
\                pred = pred || true;
\                return [sel, eval("(e)=>"+pred)];
\            }));
command! clickselector -nargs=1 -js clickSelector(content.document.querySelector(args[0]));
command! hideselector  -nargs=* -js hideSelectors.call(null, ...args);
command! unhideselector  -nargs=* -js unhideSelectors.call(null, ...args);
command! hidefirstselector  -nargs=1 -js hideFirstSelector.call(null, args[0]);
command! blankselector  -nargs=* -js blankSelectors.call(null, ...args);
command! removexpath -nargs=1 open javascript:(function (xpathexpr) {var elts = document.evaluate(xpathexpr, document, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null); for (var i=0; i < elts.snapshotLength; i++) {var elt = elts.snapshotItem(i); elt.parentNode.removeChild(elt);}})('<args>');
command! countselector -nargs=1 -js utils.messageWithLineLimit(`Number of elements matching selector ${args[0]}: ${countSelector(args[0])}`);
command! addmargin -nargs=+ -js addMarginToBody(args[0], args[1]);

" Page info commands "
command! getselector -nargs=* -js dactyl.execute(`echo getSelectors('${args.join(",")}')`);
command! imgsalttotitle
    \ -description "Add ALT text to TITLE for all images on page"
    \ -js imgsAddAltTextToTitle();

command! wget -nargs=* -js wget(args[0], args[1], args[2]);
command! wgetm -nargs=* -js wgetm(args[0], args[1], args[2]);
command! wget1 -nargs=* -js wget1(args[0], args[1], args[2]);
command! curlto -nargs=? -complete=dir -js curl(null, args[0]);

" Exchange Rate Info "
command! updateUSDAUDexchange -js updateUSDAUDexchange();

" ========================================================================
"                             ________________
"                            |                |
"                            | TABS & BUFFERS |
"                            |________________|
"
" ------------------------------------------------------------------------

" switch buffers "
:if options.get('guioptions').value.includes('c')
    map <search>bb -description "search buffers" -b :buffers -max 41<SPACE>
:else
    map <search>bb -description "search buffers" -b :buffers<SPACE>
:endif

" open tabs "
map ga -description "Open new tab, search in Awesome Bar" -b <C-v><C-t>
map <buffer>o -description "Open adjacent tab" -b :tabopenadjacent<Space>
" Paste and Search
" swap p and P
map p -modes normal -b P
map P -modes normal -b p
map <A-p> -description "Open clipboard contents in new background tab"
\    -modes normal
\    -js dactyl.execute(`background tabopen ${dactyl.clipboardRead()}`);
" ,-----------------------,
" | <buffer>a -- all tabs |
" '-----------------------'
map <buffer>a       -description "(show bindings)" -js CommandExMode().open("showkeys <buffer>a")
map <buffer>a<C-h>  -description "(show bindings)" -js CommandExMode().open("showkeys <buffer>a")
map <buffer>aP      -description "Unpin all tabs" -ex unpinall
map <buffer>ar      -description "Reload all tabs"                  -ex reloadall
map <buffer>aR      -description "Reload all tabs (without cache)"  -ex reloadall!
map <buffer>b       -description "Switch to buffer matching PATTERN" -builtin b
" ,--------------------------,
" | <buffer>d -- delete tabs |
" '--------------------------'
map <buffer>d       -description "(show bindings)" -js CommandExMode().open("showkeys <buffer>d")
map <buffer>d<C-h>  -description "(show bindings)" -js CommandExMode().open("showkeys <buffer>d")
map <buffer>da      -description "Close alternate tab" -js tabCloseAlternate();
map <buffer>db      -description "Close tab from list" -b :bdelete<SPACE>
map <buffer>dd      -description "Close tab range" -b :tc<SPACE>
map <buffer>de      -description "Close tabs satisfying EXPR" -b :tabremove<Space>""<Left>
map <buffer>d;e     -description "Close tabs not satisfying EXPR"  -b :tabfilter<Space>""<Left>
map <buffer>dm      -description "Close tabs matching STRING" -b :tabremoveregex<Space>""<Left>
map <buffer>d;m     -description "Close tabs not matching STRING" -b :tabfilterregex<Space>""<Left>
map <buffer>dr      -description "Close tabs matching REGEX (case-insensitive)"
\                   -b :tabremoveregex<Space>"//i"<Left><Left><Left>
map <buffer>d;r     -description "Close tabs not matching REGEX (case-insensitive)"
\                   -b :tabfilterregex<Space>"//i"<Left><Left><Left>
map <buffer>dR      -description "Close tabs matching REGEX (case-sensitive)"
\                   -b :tabremoveregex<Space>"//"<Left><Left>
map <buffer>d;R     -description "Close tabs not matching REGEX (case-sensitive)"
\                   -b :tabfilterregex<Space>"//"<Left><Left>
map <buffer>dt      -description "(show bindings: Delete tabs/delete to)"
\                   -js CommandExMode().open("showkeys <buffer>dt")
map <buffer>dt<C-h> -description "(show bindings: Delete tabs/delete to)"
\                   -js CommandExMode().open("showkeys <buffer>dt")
map <buffer>dtt     -description "Close from here to ARG" -b :tabclosefromhereto<Space>
map <buffer>dtx     -description "Close from here to ARG (exclusive)" -b :tabclosefromherebefore<Space>
map <buffer>du      -description "Close all duplicates adjacent to current tab" -ex tabcloseduplicates
map <buffer>dw
\    -description "Close window unless last"
\    -js if ([...browserWindows()].length > 1) dactyl.execute("winclose"); else utils.message("Last window");

map <buffer>h       -description "Rename document to h1 heading" -js content.document.title = getFirstSelector("h1").textContent.trim();

" ,------------------------,
" | <buffer>m -- move tabs |
" '------------------------'
map <buffer>m       -description "(show bindings)" -js CommandExMode().open("showkeys <buffer>m")
map <buffer>m<C-h>  -description "(show bindings)" -js CommandExMode().open("showkeys <buffer>m")
map <buffer>mm      -description "Move tab to ordinal P" -b :tabmove<SPACE>
map <buffer>mn      -description "Move N tabs to start or ordinal P" -b :moventabs<Space>
map <buffer>mr      -description "Move tabs right of N to ordinal P" -arg -ex movealltabsrightofn <arg>
map <buffer>m>      -description "Move COUNT tabs to end" -count -ex movetabstoend <count>
map <buffer>m<      -description "Move COUNT tabs to start" -count -ex movetabstostart <count>
map <buffer>m.      -description "Move last COUNT tabs to ordinal ARG"
\                   -arg -count -ex movelastntabs <count> <arg>
map <buffer>m\'     -description "Move COUNT tabs to ordianl ARG" -arg -count -ex moventabs <count> <arg>
map <buffer>ma      -description "Move tab after alternate" -js moveTabAfterAlternate();
map <buffer>mA      -description "Move alternate after tab" -js moveAlternateAfterTab();

map <buffer>n       -description "Show number of tabs"s -js utils.message("Number of tabs: " + tabs.count);
map <buffer>p       -description "Toggle pin tab" -ex pintab!
map <buffer>t       -description "Execute binding in new tab" -b :tab normal<Space>
map <buffer>v       -description "Toggle mute tab" -js tabs.getTab().toggleMuteAudio();

" undo recent closed tab from list
map U -b :undo<SPACE>

" close tabs to right/left (inclusive) "
map <C-k>   <buffer>>d
map <C-S-K> <buffer><d
" close other tabs "
map <buffer>1 -description "Close all other tabs" -ex tabonly
map <buffer>< -description "Close tabs to left"   -ex closetabstoleft
map <buffer>> -description "Close tabs to right"  -ex closetabstoright
" close adjacent duplicates "
map <A-S-Space> -description "Close all duplicates adjacent to current tab" -ex tabcloseduplicates

" move tabs "
map gm     -b :tabmove!<SPACE>
map <A-h>  -ex tabmove! -1
map <A-l>  -ex tabmove! +1
map <A-\<> -ex tabmove! 1
map <A-\>> -ex tabmove! $
map <A-!>  -ex tabmove! 1
map <A-@>  -ex tabmove! 2
map <A-#>  -ex tabmove! 3
map <A-$>  -ex tabmove! 4
map <A-%>  -ex tabmove! 5
map <A-^>  -ex tabmove! 6
map <A-&>  -ex tabmove! 7
map <A-*>  -ex tabmove! 8
map <A-(>  -ex tabmove! 9
map <A-)>  -ex tabmove! $
" Select buffer:  b  (cycle with gb, gB)
map \< -b g0
map \> -b g$
map -modes normal <C-a> -b g0
map -modes normal <C-e> -b g$
" switch to alternate (previously selected buffer): A-;
map -modes command,embed -b <A-;> <C-^>
map -modes input -b <A-;> <Esc><C-^>
" delete and switch to alternate
map -modes command,embed -b <A-:> d<C-^>
map -modes input -b <A-:> <Esc>d<C-^>

" Background Tabs "
map C   -description "Duplicate current tab"                            -js tabCopyLeftBg();
map gh  -description "Open previous page in history in background tab"  -js backt();
map gl  -description "Open next page in history in background tab"      -js forwardt();
map gf  -description "Open multiple links in background tabs (HINTS)"   -b g;b

" ,------------------,
" | Buffer Selection |
" '------------------'

command! openorselect -description "Open URL in current (! new) tab, or switch to existing tab"
\  -nargs=+
\  -bang
\  -complete=url
\  -js openOrSelectTab(args[0], args[1]?"here":"tab");
command! openorsummon -description "Open URL in new tab, or move existing tab after current. Select unless !"
\  -nargs=+
\  -bang
\  -complete=url
\  -js openOrSummonTab(args[0], bang, args[1]||null);

js <<EOF
function tabSelectLeft(n=1, wrap=true) {
    var currIdx = tabs.getTab()._tPos;
    targetIdx = currIdx - n;
    tabs.select(targetIdx);
    return targetIdx;
}
EOF

" ,--------------,
" | Pinning Tabs |
" '--------------'
command! unpinall tabdo unpintab

" ,--------------,
" | Opening Tabs |
" '--------------'
js <<EOF
function tabOpenAdjacent(url, background=false) {
    var t = config.tabbrowser.loadOneTab(url, { "relatedToCurrent" : true });
    if (!background) tabs.select(t);
}
function tabSearchAdjacent(searchEngine, searchTerm, background=false) {
    var search = `${searchEngine} ${searchTerm}`;
    var origOrd = tabs.getTab().dactylOrdinal;
    if (background)
        dactyl.execute("background tabopen " + search);
    else
        dactyl.open(search, "tab");
    var n1 = tabs.allTabs.length;
    utils.moveTab(n1, origOrd+1);
}
function openAndRunCode(url, f, where="tab") {
    if (where=="here") {
        dactyl.open(url, {where: "here"});
        var tabUsed = tabs.getTab();
    } else {
        var tabUsed = gBrowser.addTab(url);
        if (where=="tab") gBrowser.selectedTab = tabUsed;
    }
    var tb = gBrowser.getBrowserForTab(tabUsed);
    tb.addEventListener("DOMContentLoaded", f);
}
window.openAndRunCode = openAndRunCode;
EOF

command! tabopenadjacent -description "Open adjacent tab [!: in background]"
\    -nargs=1
\    -complete=url
\    -bang
\    -js bang ? tabOpenAdjacent(args[0], true) : tabOpenAdjacent(args[0]);

command! tabsearchadjacent -description "Open search in adjacent tab [!: in background]"
\    -nargs=+
\    -bang
\    -js bang ? tabSearchAdjacent(args[0], args.slice(1), true) : tabSearchAdjacent(args[0], args.slice(1));

" ,--------------,
" | Closing Tabs |
" '--------------'

command! closetabstoleft
    \ -description "Close all tabs to the left of the current tab"
    \ -js
    \ var firstTab = tabs.getTab(0);
    \ var numToClose = tabs.getTab().dactylOrdinal - 1;
    \ tabs.remove(firstTab, numToClose);
command! closetabstoright
    \ -description "Close all tabs to the right of the current tab"
    \ -js
    \ tabIndex = tabs.getTab().dactylOrdinal - 1;
    \ var nextTabIndex = tabIndex + 1;
    \ var firstTab = tabs.getTab(nextTabIndex);
    \ var N = tabs.allTabs.length;
    \ var numToClose = N - nextTabIndex;
    \ tabs.remove(firstTab, numToClose);
command! tabcloseduplicates
    \ -description "Close all duplicates adjacent to current tab"
    \ -js tabCloseDuplicates();


" close tab range "
command! tc
    \ -description "close tab range [START, END]"
    \ -nargs=+
    \ -js utils.message(closeTabRangeInclusiveBidirectional(args[0], args[1]));
command! tcx
    \ -description "close tab range [START, END)"
    \ -nargs=+
    \ -js utils.message(closeTabRangeExclusiveBidirectional(args[0], args[1]));

" filter tabs "
command! tabfilter
    \ -description "Close tabs that do not satisfy expression (t=tab doc, n0=init.ord, n=curr.ord, t.URL=url)"
    \ -nargs=1
    \ -js tabFilter(eval(`(t, n, n0)=>${args[0]};`));

command! tabremove
    \ -description "Close tabs that satisfy expression (t=tab doc, n0=init.ord, n=curr.ord, t.URL=url)"
    \ -nargs=1
    \ -js tabRemove(eval(`(t, n, n0)=>${args[0]};`));

command! tabremoveregex
    \ -description "Close tabs that satisfy regex"
    \ -nargs=1
    \ -js tabRemoveUrlRegex(readStringOrRegex(args[0]));

command! tabremovewhile
    \ -description "Close successive tabs while they satisfy expression (t=tab doc, n0=init.ord, n=curr.ord, t.URL=url)"
    \ -nargs=1
    \ -js tabRemoveWhile(eval(`(t, n, n0)=>${args[0]};`), ["forward"]);

command! tabremovewhileregex
    \ -description "Close successive tabs while they satisfy regex"
    \ -nargs=1
    \ -js tabRemoveWhileUrlRegex(readStringOrRegex(args[0]), ["forward"]);

command! tabremovearound
    \ -description "Close adjacent tabs while they satisfy expression (t=tab doc, n0=init.ord, n=curr.ord, t.URL=url)"
    \ -nargs=1
    \ -js tabRemoveWhile(eval(`(t, n, n0)=>${args[0]};`), ["forward", "reverse"]);

command! tabremovearoundregex
    \ -description "Close adjacent tabs while they satisfy regex"
    \ -nargs=1
    \ -js tabRemoveWhileUrlRegex(readStringOrRegex(args[0]), ["forward", "reverse"]);

command! tabfilterregex
    \ -description "Close tabs that satisfy regex"
    \ -nargs=1
    \ -js tabFilterUrlRegex(readStringOrRegex(args[0]));
command! tabclosefromhereto
\ -description "Close tabs from the current tab (incl) to the chosen tab (incl)"
\ -nargs=1
\ -complete=buffer
\ -js closeTabsFromHereTo(args[0]);
command! tabclosefromherebefore
\ -description "Close tabs from the current tab (incl) to the chosen tab (excl)"
\ -nargs=1
\ -complete=buffer
\ -js closeTabsFromHereTo(parseInt(args[0])-1);

js <<EOF
function closeTabRange(firstOrd, endOrd) {
    "Close tabs from firstOrd to endOrd-1"
    if (firstOrd == '.') firstOrd = gBrowser.mCurrentTab.dactylOrdinal;  /* current */
    if (endOrd == '.')   endOrd   = gBrowser.mCurrentTab.dactylOrdinal;  /* current */
    firstSpec = firstOrd - 1;
    if (endOrd === '$') {
        /* last tab */
        endOrd = 0;
        var toEnd = true;
    }
    endOrd = tabNormalizeOrdinal(endOrd);
    endSpecInc = endOrd -1;        /* ord  -> idx */
    endSpecExc = endSpecInc +1;    /* incl -> excl */
    utils.closeTabsFromTo(firstSpec, endSpecExc, spec='');
    if (toEnd) tabs.remove(tabs.getTab());
}
window.closeTabRange = closeTabRange;
function closeTabRangeInclusiveBidirectional(ordA, ordB=".") {
    "Close tabs in range [ordA, ordB] or [ordB, ordA]";
    var initTab = tabs.getTab();
    var initIdx = initTab._tPos;

    var N = tabs.allTabs.length;
    if (ordA.match(/\.|\^|\$/))
        ordA = eval(ordA.replace(/\./g, gBrowser.mCurrentTab.dactylOrdinal).replace(/\^/g, 0).replace(/\$/g, N));
    if (ordB.match(/\.|\^|\$/))
        ordB = eval(ordB.replace(/\./g, gBrowser.mCurrentTab.dactylOrdinal).replace(/\^/g, 0).replace(/\$/g, N));
    var idxA = parseInt(ordA) - 1;
    var idxB = parseInt(ordB) - 1;

    var n = Math.abs(ordB-ordA)+1;
    if (idxA <= idxB) {
        firstTab =  tabs.getTab(idxA);
    } else {
        firstTab =  tabs.getTab(idxB);
    }
    tabs.remove(firstTab, n);

    if (Number.isNaN(initTab.dactylOrdinal))
        tabs.select(initTab);
    else
        tabs.select(initIdx);

    return n;
}
window.closeTabRangeInclusiveBidirectional = closeTabRangeInclusiveBidirectional;

function closeTabRangeExclusiveBidirectional(ordA, ordB=".") {
    "Close tabs in range [ordA, ordB) or (ordB, ordA]";
    var initTab = tabs.getTab();
    var initIdx = curTab._tPos;

    var N = tabs.allTabs.length;
    if (ordA.match(/\.|\^|\$/))
        ordA = eval(ordA.replace(/\./g, gBrowser.mCurrentTab.dactylOrdinal).replace(/\^/g, 0).replace(/\$/g, N));
    if (ordB.match(/\.|\^|\$/))
        ordB = eval(ordB.replace(/\./g, gBrowser.mCurrentTab.dactylOrdinal).replace(/\^/g, 0).replace(/\$/g, N));
    var idxA = parseInt(ordA) - 1;
    var idxB = parseInt(ordB) - 1;

    var n = Math.abs(ordB-ordA);
    if (idxA < idxB) {
        firstTab =  tabs.getTab(idxA);
    } else {
        firstTab =  tabs.getTab(idxB + 1);
    }
    tabs.remove(firstTab, n);

    if (Number.isNaN(initTab.dactylOrdinal))
        tabs.select(initTab);
    else
        tabs.select(initIdx);

    return n;
}
function closeTabsFromHereTo(endOrd) {
    closeTabRange(gBrowser.mCurrentTab.dactylOrdinal, parseInt(endOrd));
}
function tabIdxToOrd (idx) { return idx+1; }
function tabOrdToIdx (ord) { return ord-1; }
function tabNormalizeOrdinal (ord) {
    idx = ord - 1;
    return tabNormalizeIndex(idx) + 1;
}
function tabNormalizeIndex (idx) {
    var N = tabs.allTabs.length;
    if (idx < 0)
        return idx%N + Number(N) ;
    else
        return idx%N;
}
function tabURL(t) {
    "URL of t, where t is a tab or a tab index";
    if (Number.isInteger(t))
        t = tabs.getTab(t);
    return gBrowser.getBrowserForTab(t).contentDocument.URL;
}
function tabCount() { return tabs.allTabs.length; }
window.tabCount = tabCount;
function tabRemove(f) {
    /* takes a function of 1 to 3 args (current tab, [current ordinal, [original ordinal]]) */
    var currentOrd = tabs.getTab().dactylOrdinal;
    var alltabs = Array.from(tabs.allTabs);
    var N_0 = alltabs.length;  /* initial number of tabs */
    var i, t;
    for (i=0; i<N_0; ++i) {
        tab_i = alltabs[i];
        t = tab_i.linkedBrowser.contentDocument;
        /* alert(`${f}\n${f(t, i+1)}\n${i+1}\n${t.ord}`); // debug */
        if (f(t, i+1, currentOrd)) tabs.remove(tab_i);
    }
    var N_closed = N_0 - tabCount();
    utils.message(`${N_closed} tabs closed`);
    return N_closed;
}
function tabFilter(f) {
    /* takes a function of 1 to 3 args (current tab, [current ordinal, [original ordinal]]) */
    return tabRemove((t,n,n0)=>!f(t,n,n0));
}
function tabRemoveUrlRegex(regex) {
    " Note: :bdelete! does the same thing, but is much slower for some reason. "
    return tabRemove((t)=>t.URL.match(regex)||t.title.match(regex));
}
function tabFilterUrlRegex(regex) {
    return tabFilter((t)=>t.URL.match(regex)||t.title.match(regex));
}

function tabRemoveWhileUrlRegex(regex, directions=["forward", "reverse"]) {
    return tabRemoveWhile((t)=>t.URL.match(regex)||t.title.match(regex), directions);
}

function tabRemoveWhile(f, directions=["forward", "reverse"]) {
    /* remove tabs until match fails                                                                    */
    /* takes a function of 1 to 3 args (current tab content doc, [current ordinal, [original ordinal]]) */
    /* directions is a vector of entries which may be "forward" and/or "reverse"                        */
    var initTab = tabs.getTab();
    var initOrd = initTab.dactylOrdinal;
    var toRemove = [];
    var omitInit = false;

    if (directions.includes("forward")) {
        var i = initOrd,
        t = tabs.getTab(i-1);
        while (f(t.linkedBrowser.contentDocument, i, initOrd)) {
            toRemove.push(t);
            ++i;
            t = tabs.getTab(i-1);
        }
        omitInit = true;
    }
    if (directions.includes("reverse")) {
        i = omitInit ? initOrd-1 : initOrd;
        t = tabs.getTab(i-1);
        while (f(t.linkedBrowser.contentDocument, i, initOrd)) {
            toRemove.push(t);
            --i;
            t = tabs.getTab(i-1);
        }
    }
    toRemove.forEach(t => tabs.remove(t));

    var N_closed = toRemove.length;
    utils.message(`${N_closed} tabs closed`);
    return N_closed;
}
window.tabRemoveWhile = tabRemoveWhile;

function tabCloseDuplicates() {
    var url = buffer.URL;
    var N = tabs.allTabs.length - 1;
    var currentTab = tabs.getTab();
    var currentIdx = currentTab.dactylOrdinal - 1;
    var i;
    try {
    for (i=currentIdx; i>=0 && tabs.getTab(i-1).linkedBrowser.contentDocument.URL==url; --i);
    var firstIdx = i;
    for (i=currentIdx; i<=N && tabs.getTab(i+1).linkedBrowser.contentDocument.URL==url; ++i);
    var lastIdx = i;
    } catch(error) {
        utils.message(`i=${i}, N=${N}`);
    }
    var n = lastIdx - firstIdx;
    if (n > 0) {
        tabs.remove(tabs.getTab(firstIdx+1), n);
        tabs.select(tabs.getTab(firstIdx));
    }
}

function tabCloseAlternate() {
    var currentTab = tabs.getTab();
    tabs.remove(tabs.alternate);    /* jumps to next tab after the one removed */
    tabs.select(currentTab);
}
EOF

" ,-------------,
" | Moving Tabs |
" '-------------'
" alias tt=tabmove
command! tt -nargs=1 -bang -js dactyl.execute("tabmove" + (bang ? "! " : " ") + args[0]);

command! movealltabsrightofn -nargs ? -js moveAllTabsRightOfN(null, args[0]||1);
command! movetabstoend       -nargs ? -js moveNTabs(tabs.getTab().dactylOrdinal, args[0]||1, "$");
command! movetabstostart     -nargs ? -js moveNTabs(tabs.getTab().dactylOrdinal, args[0]||1, "1");
command! movelastntabs       -nargs + -js moveLastNTabs(args[0], args[1]||1);
command! moventabs           -nargs + -js moveNTabs(tabs.getTab().dactylOrdinal, args[0], args[1]||1);

js <<EOF
moveNTabs = function (start, n, toOrd=1, wrap=false) {
    // we don't know which way tabs will move, so we can't predict how tab
    // numbers may change - thus, have to get references to each tab first
    if (toOrd == 0 || toOrd === "$") toOrd = tabCount();
    var targets = [];
    for (var i = 0; i < n; ++i)
        targets.push(tabs.getTab(start-1+i));
    if (toOrd < start) targets.reverse();
    for (var target of targets)
        tabs.move(target, toOrd, wrap);
}
moveLastNTabs = function (n, toOrd, wrap=false) {
    var N = tabs.allTabs.length;
    for (var i = 1; i <= n; ++i) {
        var target = tabs.getTab(N-1);
        tabs.move(target, toOrd, wrap)
    }
}
moveAllTabsRightOfN = function (fromOrd, toOrd, wrap=false) {
    fromOrd = fromOrd || tabs.getTab().dactylOrdinal;
    var N = tabs.allTabs.length;
    moveLastNTabs(N-fromOrd+1, toOrd, wrap);
}

" Note: if tab is already in final position, tab swapped with alternate "
function moveTabAfterAlternate() {
    var thisTab = tabs.getTab();
    var altOrd = tabs.alternate.dactylOrdinal;
    if (thisTab.dactylOrdinal < altOrd)
        tabs.move(thisTab, altOrd);    // -1 to account for alt shifting left
    else
        tabs.move(thisTab, altOrd+1);
}
function moveAlternateAfterTab() {
    var thisOrd = tabs.getTab().dactylOrdinal;
    var altTab = tabs.alternate;
    tabs.move(altTab, thisOrd);
}
EOF

" ,------------,
" | Tab Groups |
" '------------'

command! tginit
    \ description "Initialize pentadactyl tabgroups commands"
    \ -b :runtime! config/tabgroups.penta

" ,-----------,
" | Tile Tabs |
" '-----------'

command! tabtile -description "View Tiled" -js tileTabs.Tile();

" ,--------------,
" | Pending Tabs |
" '--------------'

js <<EOF
function getPendingTabs() {
    return Array.from(tabs.allTabs).filter(t=>t.hasAttribute('pending'));
}
EOF


" =============================================================================
"       _______
"      |       |
"      |  GUI  |
"      |_______|

" -----------------------------------------------------------------------------
" ,----------,
" | Toolbars |
" '----------'

"map <C-x><C-f> -ex buftabs


" -------------------------------------------------------------------------------
" ,-------,
" | Menus |
" '-------'

js <<EOF
function showContextMenu(element, xpos, ypos, popuptype, anchoralignment, popupalignment) {
    var cmenu = document.getElementById('contentAreaContextMenu');
    cmenu.showPopup(
        element || document.body,
        xpos || 200,
        ypos || 200,
        anchoralignment,
        popupalignment
    );
}
EOF

map <C-f10> -js showContextMenu();

" -----------------------------------------------------------------------------
" ,-------------------------,
" | Dialogs & Special Pages |
" '-------------------------'

" history (better dialog than `:dialog history`)
command! library
    \ -description "Open history dialog"
    \ -b :feedkeys <C-S-H>
command! librarysticky silent library |
    \ silent ! wmctrl -F -r "Library" -e 0,1081,216,812,815
    \ silent ! wmctrl -F -a "Library" -r "Library" -b add,above,sticky;

js <<EOF
var newTabPage = function(where=dactyl.NEW_TAB) {
    dactyl.open('about:newtab', {where:where});
    findbarToggle();
}
EOF

map <goto>        -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>")
map <goto><C-h>   -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>")
map <goto>a       -description "(Show bindings: Goto Addons)" -js CommandExMode().open("showkeys <goto>a")
map <goto>a<C-h>  -description "(Show bindings: Goto Addons)" -js CommandExMode().open("showkeys <goto>a")
map <goto>aa      -description "Addons"
\                 -ex dialog addons
map <goto>ac      -description "Classic Addons"
\                 -count -js openOrSelectTab("caa:list", count?"here":"tab");
map <goto>ap      -description "Palemoon Extensions"
\                 -count -js openOrSelectTab("https://addons.palemoon.org/extensions/", count?"here":"tab");
map <goto><C-a>   -description "Palemoon Incompatible Extensions"
\                 -count -js openOrSelectTab("https://addons.palemoon.org/incompatible/", count?"here":"tab");
map <goto>;a      -description "Addons Directory"
\                 -count -js openOrSelectTab("file:///opt/ff-addons/", count?"here":"tab");
map <goto>b       -description "Firefox Keyboard Shortcuts"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/doc/firefox-kb-shortcuts.html`,
\                                            count?"here":"tab");
map <goto>c       -description "about:config (existing or new tab)"
\                 -count -js openOrSelectTab("about:config", count?"here":"tab");
map <goto>d       -description "Downloads"
\                 -count -b :openorselect about:downloads <count><CR><C-z>
map <goto>D       -description "about:debugging"
\                 -count -js openOrSelectTab("about:debugging", count?"here":"tab");
map <goto>f       -description "about:about"
\                 -count -js openOrSelectTab("tabopen about:about", count?"here":"tab");
map <goto>h       -description "Pentadactyl help"
\                 -ex help
map <goto>H       -description "Pentadactyl help - single page"
\                 -ex helpall
map <goto>;h      -description "Pentadactyl help - index"
\                 -count -js openOrSelectTab("dactyl://help/index", count?"here":"tab");
map <goto>i       -description "Profiles"
\                 -count -js openOrSelectTab("about:profiles", count?"here":"tab");
map <goto>k       -description "places (bookmarks & history)"
\                 -count -b :openorselect chrome://browser/content/places/places.xul <count><CR>gi<C-z>
map <goto>K       -description "Bookmarks"
\                 -count -js openOrSelectTab("chrome://browser/content/bookmarks/bookmarksPanel.xul", count?"here":"tab");
map <goto>l       -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>l")
map <goto>l<C-h>  -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>l")
map <goto>ldw     -description "~/Downloads/"
\                 -count -js openOrSelectTab(`${homedir}/Downloads`, count?"here":"tab");
map <goto>ldc     -description "~/Documents/"
\                 -count -js openOrSelectTab(`${homedir}/Documents`, count?"here":"tab");
map <goto>le      -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>le")
map <goto>le<C-h> -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>le")
map <goto>le/     -description "~/ebooks/"
\                 -count -js openOrSelectTab(`${homedir}/ebooks`, count?"here":"tab");
map <goto>lec     -description "~/ebooks/coding"
\                 -count -js openOrSelectTab(`${homedir}/ebooks/coding`, count?"here":"tab");
map <goto>led     -description "~/ebooks/dl"
\                 -count -js openOrSelectTab(`file://${homedir}/ebooks/dl`, count?"here":"tab");
map <goto>les     -description "~/ebooks/css"
\                 -count -js openOrSelectTab(`${homedir}/ebooks/css`, count?"here":"tab");
map <goto>lea     -description "~/ebooks/articles"
\                 -count -js openOrSelectTab(`${homedir}/ebooks/articles`, count?"here":"tab");
map <goto>lh      -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>lh")
map <goto>lh<C-h> -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>lh")
map <goto>lhe     -description "~/.emacs.d/private"
\                 -count -js openOrSelectTab(`${homedir}/.emacs.d/private`, count?"here":"tab");
map <goto>lhp     -description "~/.pentadactyl"
\                 -count -js openOrSelectTab(`${homedir}/.pentadactyl`, count?"here":"tab");
map <goto>lhr     -description "~/repos"
\                 -count -js openOrSelectTab(`${homedir}/repos`, count?"here":"tab");
map <goto>lhs     -description "~/source"
\                 -count -js openOrSelectTab(`${homedir}/source`, count?"here":"tab");
map <goto>lo      -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>lo")
map <goto>lo<C-h> -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>lo")
map <goto>lo/     -description "/opt/"
\                 -count -js openOrSelectTab(`/opt`, count?"here":"tab");
map <goto>loc     -description "/opt/chrome-extensions"
\                 -count -js openOrSelectTab(`/chrome-extensions`, count?"here":"tab");
map <goto>lod     -description "/opt/deb"
\                 -count -js openOrSelectTab(`/deb`, count?"here":"tab");
map <goto>lof     -description "/opt/ff-addons"
\                 -count -js openOrSelectTab(`/opt/ff-addons`, count?"here":"tab");
map <goto>los     -description "/opt/scripts"
\                 -count -js openOrSelectTab(`/scripts`, count?"here":"tab");
map <goto>low     -description "/opt/webapps"
\                 -count -js openOrSelectTab(`/webapps`, count?"here":"tab");
map <goto>lp      -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>lp")
map <goto>lp<C-h> -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>lp")
map <goto>lp/     -description "~/Pictures/"
\                 -count -js openOrSelectTab(`file://${homedir}/Pictures`, count?"here":"tab");
map <goto>lpd     -description "~/Pictures/downloads"
\                 -count -js openOrSelectTab(`file://${homedir}/Pictures/downloads`, count?"here":"tab");
map <goto>lpa     -description "~/Pictures/art"
\                 -count -js openOrSelectTab(`file://${homedir}/Pictures/art`, count?"here":"tab");
map <goto>lud     -description "/usr/share/doc (existing or new tab)"
\                 -count -js openOrSelectTab("file:///usr/share/doc/", count?"here":"tab");
map <goto>luld    -description "/usr/local/share/doc (existing or new tab)"
\                 -count -js openOrSelectTab("file:///usr/local/share/doc/", count?"here":"tab");
map <goto>m       -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>m")
map <goto>m<C-h>  -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>m")
map <goto>mc       -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>mc")
map <goto>mc<C-h>  -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>mc")
map <goto>mcc     -description "chrome:// URL completion"
\                 -b :openorselect chrome://
map <goto>mcg     -description "chrome://global/content/ URL completion"
\                 -b :openorselect chrome://global/content/
map <goto>N       -description "New Tab Page"
\                 -js newTabPage();
map <goto>o       -description "/opt/ directory"
\                 -count -js openOrSelectTab("file:///opt", count?"here":"tab");
map <goto>p       -description "Plugins"
\                 -count -js openOrSelectTab("about:plugins", count?"here":"tab");
:if isPalemoon
    map <goto>P   -description "Preferences"
\                 -count -js openOrSelectTab("tchrome://browser/content/preferences/preferences.xul", count?"here":"tab");
:else
    map <goto>P   -description "Preferences"
\                 -count -b :openorselect about:preferences <count><CR><C-z>
:endif
map <goto>q       -description "Password manager"
\                 -count -js openOrSelectTab("chrome://passwordmgr/content/passwordManager.xul", count?"here":"tab");
map <goto>r       -description "Session restore"
\                 -count -js openOrSelectTab("about:sessionrestore", count?"here":"tab");
map <goto>s       -description "Support"
\                 -count -js openOrSelectTab("about:support", count?"here":"tab");
map <goto>u       -description "/opt/userscripts/ directory"
\                 -count -js openOrSelectTab("file:///opt/userscripts", count?"here":"tab");
map <goto>U       -description "/opt/userstyles/ directory"
\                 -count -js openOrSelectTab("file:///opt/userstyles", count?"here":"tab");
map <goto>;u      -description "~/.pentadactyl/gmscripts/ directory"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/gmscripts`, count?"here":"tab");
map <goto>w       -description "(Show bindings: goto (new window/dialog))" -js CommandExMode().open("showkeys <goto>w")
map <goto>w<C-h>  -description "(Show bindings: goto (new window/dialog))" -js CommandExMode().open("showkeys <goto>w")
map <goto>wk     -description "Bookmarks Dialog"
\                 -ex dialog bookmarks
map <goto>wl      -description "Library Dialog (sticky)"
\                 -ex librarysticky
map <goto>wi      -description "Page Info"
\                 -js BrowserPageInfo();

map <goto>x       -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>x")
map <goto>x<C-h>  -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>x")
map <goto>xc      -description "ChromEdit"
\                 -count -js openOrSelectTab("chrome://chromedit/content/ChromEdit.xul", count?"here":"tab");
map <goto>xe      -description "Epub Catalog"
\                 -count -js openOrSelectTab("about:epubcatalog", count?"here":"tab");
map <goto>xx      -description "XPCOM Viewer"
\                 -count -js openOrSelectTab("chrome://xpcomviewer/content/xpcomviewer.xul", count?"here":"tab");
map <goto>y       -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>y")
map <goto>y<C-h>  -description "(Show bindings)" -js CommandExMode().open("showkeys <goto>y")
map <goto>yc      -description "~/.pentadactyl/config"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/config`, count?"here":"tab");
map <goto>yC      -description "~/.pentadactyl/css"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/css`, count?"here":"tab");
map <goto>yd      -description "~/.pentadactyl/doc"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/doc`, count?"here":"tab");
map <goto>yD      -description "~/.pentadactyl/data"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/data`, count?"here":"tab");
map <goto>yge     -description "dactyl repo: my local fork (open in Emacs)"
\                 -ex openinemacs ~/repos/dactyl/common
map <goto>ygg     -description "dactyl repo: my fork"
\                 -count -js openOrSelectTab("https://github.com/troyp/dactyl/tree/master",
\                                            count?"here":"tab");
map <goto>ygx     -description "dactyl repo: my local fork - downloads directory"
\                 -count -js openOrSelectTab(`file://${homedir}/repos/dactyl/downloads/`, count?"here":"tab");
map <goto>ygo     -description "dactyl repo: origin"
\                 -count -js openOrSelectTab("https://github.com/5digits/dactyl/tree/master",
\                                            count?"here":"tab");
map <goto>yh      -description "~/.pentadactyl/html"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/html`, count?"here":"tab");
map <goto>yj      -description "~/.pentadactyl/js"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/js`, count?"here":"tab");
map <goto>ym      -description "~/.pentadactyl/misc"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/misc`, count?"here":"tab");
map <goto>yp      -description "~/.pentadactyl/plugins"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/plugins`, count?"here":"tab");
map <goto>yP      -description "~/.pentadactyl/plugins_inactive"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/plugins_inactive`, count?"here":"tab");
map <goto>ys      -description "~/.pentadactyl/src"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/src`, count?"here":"tab");
map <goto>yS      -description "resource://dactyl/ (Dactyl source)"
\                 -count -js openOrSelectTab("resource://dactyl/", count?"here":"tab");
map <goto>yu      -description "~/.pentadactyl/gmscripts"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/gmscripts`, count?"here":"tab");
map <goto>yU      -description "~/.pentadactyl/userstyles"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl/userstyles`, count?"here":"tab");
map <goto>yy      -description "~/.pentadactyl"
\                 -count -js openOrSelectTab(`file://${homedir}/.pentadactyl`, count?"here":"tab", RegExp(`^file://${homedir}/.pentadactyl/?$`));
map <goto>`       -description "Home directory"
\                 -count -js openOrSelectTab("dactyl.open(`file://${homedir}`,", count?"here":"tab");
map <goto>/       -description "Root directory"
\                 -count -js openOrSelectTab("file:///", count?"here":"tab");


command! appcache
    \ -description "Open about:cache in new tab"
    \ -b :tabopen about:cache?storage=appcache

set passkeys+='chrome://browser/content/bookmarks/bookmarksPanel.xul':'<Up><Down><Left><Right>'
set passkeys+='chrome://browser/content/places/places.xul':'<Up><Down><Left><Right>'
set passkeys+='chrome://passwordmgr/content/passwordManager.xul':'<Up><Down><Left><Right>'

" ,---------,
" | History |
" '---------'

command! tabopenhistory -nargs 1 -complete history tabopen <args>

" Select:
map <search>h       -description "(Show bindings)" -js CommandExMode().open("showkeys <search>h")
map <search>h<C-h>  -description "(Show bindings)" -js CommandExMode().open("showkeys <search>h")
map <search>ha -description "Open selected history items" -b :history! -max 30 -sort -date<SPACE>
map <search>ho -description "Open history item" -b :tabopenhistory<SPACE>

" List/Search:
:if options.get('guioptions').value.includes('c')
    map <search>hh -description "search history" -b :history -max 41 -sort -date<SPACE>
:else
    map <search>hh -description "search history" -b :history -sort -date<SPACE>
:endif

" -------------------------------------------------------------------------------
" ,-----------,
" | Bookmarks |
" '-----------'

map <search>k       -description "(Show bindings)" -js CommandExMode().open("showkeys <search>k")
map <search>k<C-h>  -description "(Show bindings)" -js CommandExMode().open("showkeys <search>k")
map <search>ka -description "Open selected bookmarks items" -b :bmarks!  -max 30<SPACE>
map <search>kb -description "search bookmarks with buku"  -ex !buku_run
map <search>ko -description "Open bookmarks item" -b tabopenbookmark<SPACE>
map <browser>k -description "Bookmark page" -b <C-v><C-d>

:if options.get('guioptions').value.includes('c')
    map <search>kb -description "search bookmarklets (with bmklet::)"   -b :bmarks -keyword bmklet::<CR>
    map <search>kk -description "search bookmarks"                      -b :bmarks<SPACE>
    map <search>kg -description "search bookmarks by tags"              -b :bmarks -tags<SPACE>
    map <search>kt -description "search bookmarks by title"             -b :bmarks -title<SPACE>
    map <search>ks -description "search static kword bmarks (with :::)" -b :bmarks -keyword :::<CR>
    map <search>kS -description "search static kword bmarks (with :::) by category" -b :bmarks -keyword :::<Left><Left><Left>
    map <search>kw -description "search bookmarks by keyword"           -b :bmarks -keyword<SPACE>
:else
    map <search>kb -description "search bookmarklets (with bmklet::)"   -b :bmarks -max 41 -keyword bmklet::<CR>
    map <search>kk -description "search bookmarks"                      -b :bmarks -max 41<SPACE>
    map <search>kg -description "search bookmarks by tags"              -b :bmarks -max 41 -tags<SPACE>
    map <search>kt -description "search bookmarks by title"             -b :bmarks -max 41 -title<SPACE>
    map <search>ks -description "search static kword bmarks (with :::)" -b :bmarks -max 41 -keyword :::<CR>
    map <search>kS -description "search static kword bmarks (with :::) by category" -b :bmarks -max 41 -keyword :::<Left><Left><Left>
    map <search>kw -description "search bookmarks by keyword"           -b :bmarks -max 41 -keyword<SPACE>
:endif

command! tabopenbookmark -nargs 1 -complete bookmark tabopen <args>
command! bookmarkExportHTML -nargs=1 -js BookmarkHTMLUtils.exportToFile(args[0]);
command! bookmarkExportBuku -js bookmarkExportBuku();
command! bukurun !buku_run
command! bmrunkw -nargs + -js bmRunKeymark(args[0], args[1]);
command! bmrunkwtab -nargs + -js bmRunKeymark(args[0], args[1], 'tab');

js <<EOF
" Buku "
function bookmarkExportBuku() {
    var filename = `/tmp/firefox-buku-${(new Date).toISOString()}`;
    BookmarkHTMLUtils.exportToFile(filename);
    runProcess("/usr/local/bin/buku", "--import", filename);
}

" bm : https://github.com/cym13/bookmark "
var bm_db = '~/.bookmarks';

function bmResolveKeymark(kw, searchterm) {
    var tag = 'kw:' + kw;
    var bmk = io.system(`bm -f ${bm_db} ${tag}`);
    var url = bmk.replace('%s', encodeURIComponent(searchterm)).replace('%S', searchterm);
    return url;
}
function bmRunKeymark(kw, searchterm, where='here') {
    dactyl.open(bmResolveKeymark(kw, searchterm), {where:where});
}
EOF

" -------------------------------------------------------------------------------

map <search>j  -description "Goto jump" -ex jumps
map <search>o -b :set<SPACE>
map <search>c -b :set!<SPACE>

" -----------------------------------------------------------------------------
" ,---------------------,
" | Resizing and moving |
" '---------------------'

command! resize -description "Resize window to X Y"
    \ -nargs=* -js self.resizeTo(args[0], args[1])
command! resizeby -description "Resize window by X Y"
    \ -nargs=* -js self.resizeBy(args[-3], args[0])
command! maximize -description "Maximize window"
    \ -js self.maximize()
command! maximizeH -description "Maximize window height"
    \ -js self.resizeTo(self.outerWidth, screen.availHeight)
command! maximizeW -description "Maximize window width"
    \ -js self.resizeTo(screen.availWidth, self.outerHeight)
command! minimize -description "Minimize window"
    \ -js self.minimize()
command! maximizeRestore -description "Maximize and restore"
    \ -js self.resizeTo(null,null); window.setTimeout(()=>self.maximize(), 400);
command! move -description "Move window by X Y"
    \ -nargs=* -js self.moveBy(args[0], args[1])
command! moveto -description "Move window to X Y"
    \ -nargs=* -js self.moveTo(args[0], args[1])
command! moveTL -description "Move window to top left"
    \ -js self.moveTo(0,0)
command! moveTR -description "Move window to top right"
    \ -js self.moveTo(screen.availWidth-self.window.outerWidth, 0)
command! moveBL -description "Move window to bottom left"
    \ -js self.moveTo(0, screen.availHeight-self.window.outerHeight)
command! moveBR -description "Move window to bottom right"
    \ -js self.moveTo(screen.availWidth-self.window.outerWidth, screen.availHeight-self.window.outerHeight)

" =============================================================================
"                                      _________
"                                     |         |
"                                     | STYLING |
"                                     |_________|

" define temp group for use by temp styles, etc
group temp
group user

js <<EOF
function narrowPage(width, lmarg, rmarg) {
    var doc = content.document.getElementsByTagName('html')[0];
    doc.setAttribute(
        'style',
        `width: ${width}px; margin-left: ${lmarg}px; margin-right: ${rmarg}px;`
    );
}
EOF

command! narrowpage
\   -description "Style/narrow page"
\    -nargs=*
\    -js narrowPage(args[0]||1000, args[1]||100, args[2]||1000);
command! cssapply
\ -nargs=*
\ -description "Style/apply CSS to current page (!; expands to !important;)"
\ -js dactyl.execute(`style -group temp -name ${Date().replace(/ /g,'',true)} '${buffer.URL}' ${args.join(' ').replace(/ !;/g, ' !important;')}`);

style -name=visitedlinks * a:visited { color: #8E73E6 !important; }

" style taken from http://forums.mozillazine.org/viewtopic.php?f=38&t=2799203#p13349801 "
:if isFirefox || isPalemoon
    style -name=activetabhighlight * .tabbrowser-tab[selected="true"] {
    \   font-weight: bold !important;
    \   color: rgba(255,255,255,1) !important;
    \   background-image: linear-gradient(rgba(102,51,102,.85), rgba(102,51,102,.85) 50%),
    \                     linear-gradient(-moz-dialog, -moz-dialog) !important;
    \ }
:endif
:if isWaterfox
    style -name=activetabhighlight * .tab-content[selected="true"] {
    \   font-weight: bold !important;
    \   background: rgba(100, 255, 0, 0.3) !important;
    \   margin: 5px;
    \   border: solid grey 1px;
    \   border-radius: 15px;
    \ }
:endif

" ,-----------------------,
" | <browser>s -- Styling |
" '-----------------------'
map <browser>sm -description "Stylish/manage styles" -ex stylishmanage
map <browser>sn -description "Stylish/new style" -js stylishCommon.openEdit('new');
map <browser>sN -description "Style/narrow page" -b :narrowpage<Space>
map <browser>ss -description "Stylish/toggle overlay" -ex stylishtoggleoverlay
map <browser>st -description "Style/add temp style for page" -b y:style -group=temp <C-v><C-v><Space>
map <browser>su -description "Style/toggle usermode (minimal styling)" -ex set usermode!
map <browser>sv -description "Style/view:choose page style" -b :emenu View.Page Style.

js <<EOF
function stylishGetOverlayStatus() {
    var prefs = Cc["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefBranch);
    return prefs.getBoolPref("extensions.stylish.styleRegistrationEnabled");
}
function stylishToggleOverlay() {
    var prefs = Cc["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefBranch);
    if (stylishGetOverlayStatus())
        prefs.setBoolPref("extensions.stylish.styleRegistrationEnabled", false);
    else
        prefs.setBoolPref("extensions.stylish.styleRegistrationEnabled", true);
}
EOF

command! stylishmanage -description "Stylish/manage styles" tabopen chrome://stylish-custom/content/info.xul
command! stylishnew -description "Stylish/new style" -js stylishCommon.openEdit('new');
command! stylishtoggleoverlay -description "Stylish/toggle overlay" -js stylishToggleOverlay();

" =============================================================================
"                            ___________________
"                           |                   |
"                           | DEVELOPMENT TOOLS |
"                           |___________________|

" ,------------------------, ,-----------,
" | Javascript Evalutation | | <leader>e |
" '------------------------' '-----------'
map <leader>e<C-h> -description "(show bindings: Javascript Eval)" -js CommandExMode().open("showkeys <leader>e")
map <leader>e      -description "(show bindings: Javascript Eval)" -js CommandExMode().open("showkeys <leader>e")

" JS Repl
command! jsrepl -js repl=CommandREPLMode.call(); repl.open(); repl.update();
command! evalwithscripttag
    \ -nargs *
    \ -complete javascript
    \ -b :js evalWithScriptTag(<args>);
command! evalwithjsscheme
    \ -nargs *
    \ -complete javascript
    \ -b :open javascript:<args>; void(0);

map <leader>eb -description "Evaluate JS as bookmarklet"
\    -b :open javascript:;void(0);<Left><Left><Left><Left><Left><Left><Left><Left><Left>
map <leader>ee -description "Evaluate JS expression"
\    -b :echo<Space>
map <leader>eE -description "Evaluate JS expression: doc=content doc, $=jQuery"
\    -b :echo doc=content.document;<Space>$=jQuery;<Space>
map <leader>ef -description "Evaluate JS expression: doc=1st frame doc, $=jQuery"
\    -b :echo doc=content.window.frames[0].document;<Space>$=jQuery;<Space>
map <leader>eF -description "Evaluate JS expression: doc=Nth frame doc, $=jQuery"
\    -count -b :echo doc=content.window.frames[0<count>].document;<Space>$=jQuery;<Space>
map <leader>ei -description "Evaluate JS expression by injecting into a script tag"
\    -b :evalwithscripttag<Space>
map <leader>em -description "Evaluate JS expression (end with EOF)" -b :js <<EOF
map <leader>er -description "JS REPL" -ex js!
map <leader>eR -description "JS REPL: doc=content doc, $=jQuery"
\    -js dactyl.execute("js doc=content.document; $=jQuery;") && dactyl.execute("js!");
map <leader>es -description "Show elements matching selector(s)" -b :getselector<Space>

" -----------------------------------------------------------------------------
" ,---------------------------------, ,-----------,
" | Mozilla DevTools & DOM Inspector| | <leader>d |
" '---------------------------------' '-----------'
map <leader>d<C-h>
\    -description "(show bindings: Devtools)"
\    -js CommandExMode().open("showkeys <leader>d")
map <leader>d
\    -description "(show bindings: Devtools)"
\    -js CommandExMode().open("showkeys <leader>d")
map <leader>di<C-h> -js CommandExMode().open("showkeys <leader>di")
map <leader>di      -js CommandExMode().open("showkeys <leader>di")

map <leader>db -ex browserconsole
map <leader>dii -ex dominspector
map <leader>dis -ex storageinspector
map <leader>dss -js buffer.viewSelectionSource();
map <leader>dw -ex webide
map <leader>dy -ex eyedropper
map <S-f12> -ex devtools

command! webide feedkeys! <S-f8>
command! browserconsole feedkeys! <C-S-J>
command! devtools execute "emenu Tools.Web Developer.Toggle Tools"
command! storageinspector execute "emenu Tools.Web Developer.Storage Inspector"
command! eyedropper -description "Eyedropper" -js openEyedropper();
" inspect current content document
command! dominspector feedkeys <C-S-I>
command! dominspector -js inspectDOMDocument(content.document);
command! dominspector dialog dominspector
command! dominspectorchrome -js inspectDOMDocument(document.URL)
command! browsertoolboxinit -js browserToolboxOn();
command! browsertoolboxperm -js browserToolboxPermissionBoxInit();
command! browsertoolbox browsertoolboxinit | browsertoolboxperm

" Toggle FF Developer command line
" <S-f2> requires <Esc> to enter normal mode after toggling off.
" <S-f2><Esc> cannot restore focus to command line once lost.
" <S-f2><Tab> is mostly fine, but has the drawback that when
"             restoring focus, it will select the current
"             tab-completion candidate, if one is visible.
:if (typeof DeveloperToolbar !== 'undefined')
    command! togglegcli -description "Toggle Developer Toolbar" -js toggleGCLI();
    map -modes base <A-x> -ex togglegcli
:else
    map -modes base -b <A-x> <S-f2><Tab>
:endif

js <<EOF
function toggleGCLI() {
    var bar = DeveloperToolbar;
    if (bar.visible) bar.hide();
    else bar.show(true);
}

var mozdevtools = {};
for (tool of Array.from(gDevTools._tools))
    mozdevtools[tool[0]] = tool[1];
window.mozdevtools = mozdevtools;

function browserToolboxOn() {
    window.browsertoolbox = new BrowserToolboxProcess();
}
function browserToolboxPermissionBoxInit() {
    // FIXME: xdotool call is not working
    // * adding a sleep 2 command before it stops the box from even being raised
    // * wrapping it in a window.setTimeout has no effect
    dactyl.execute('!wmctrl -F -a "Incoming Connection"');
    dactyl.execute('!xdotool key Tab');
}
EOF

" -----------------------------------------------------------------------------
" ,---------,
" | Firebug |
" '---------'
command! firebug :feedkeys! <C-f12>
command! firebugShow -js Firebug.showBar(true);
command! firebugHide -js Firebug.showBar(null);
command! firebugInspectElt -js fbInspectElt();

map -modes=base <C-\\> -js fbInspectElt();

js <<EOF
function fbInspectElt() {
    if (!Firebug.currentContext) Firebug.toggleBar(true);
    Firebug.Inspector.toggleInspecting(Firebug.currentContext);
}
EOF

" -------------------------------------------------------------------------------
" ,---------,
" | MozRepl |
" '---------'
" TODO: See http://hyperstruct.net/2008/10/12/metabrowsing-custom-interactors-for-mozrepl/ "

" If telnet session if broken, use another port "
set! extensions.mozrepl.initUrl='~/.mozreplrc'

js <<EOF
function mozReplGetPort() {
    return prefservice.getIntPref('extensions.mozrepl.port');
}
function mozReplSetPort(port) {
    return prefservice.setIntPref('extensions.mozrepl.port', port);
}
function mozReplToggle() {
    var svr = mozrepl.server;
    if (svr.isActive()) {
        svr.stop();
        utils.message("MozREPL server STOPPED");
    }
    else {
        svr.start(mozReplGetPort(), false);
        utils.message(`MozREPL server STARTED on port ${mozReplGetPort()}`);
    }
}
function mozReplShowStatus() {
    var svr = mozrepl.server;
    if (svr.isActive())
        utils.message(`MozREPL server is ON: port ${mozReplGetPort()}`);
    else
        utils.message("MozREPL server is OFF");
}
EOF

command! mozrepltoggle -js mozReplToggle();

map <ext>m<C-h> -description "(show bindings)" -js CommandExMode().open("showkeys <ext>m")
map <ext>m      -description "(show bindings)" -js CommandExMode().open("showkeys <ext>m")
map <ext>mm -description "MozREPL toggle" -js mozReplToggle();
map <ext>mp -description "MozREPL set port" -js mozrepl.changePort();
map <ext>mr -description "MozREPL reload" -js mozrepl.server.reload();
map <ext>ms -description "MozREPL server status" -js mozReplShowStatus();
map <ext>ma -description "MozREPL toggle autostart" -ex toggleconfig extensions.mozrepl.autoStart

" -------------------------------------------------------------------------------
" ,-----------------,
" | Jash JS Console |
" '-----------------'
command! jash -js jashToggle();

map <ext>j<C-h> -description "(show bindings)" -js CommandExMode().open("showkeys <ext>j")
map <ext>j      -description "(show bindings)" -js CommandExMode().open("showkeys <ext>j")
map <ext>jj -ex jash
map <ext>je -js jashEvalTab();
map <ext>js -js jashCssTab();
map <ext>jm -js jashMouseoverTab();
map <ext>ji -js jashInspectTab();
map <ext>jc -js jashClearTab();
map <ext>jh -js jashHelpTab();

js <<EOF
function jashRun() {
    var jashElt = content.document.createElement('script');
    jashElt.src = 'http://www.billyreisinger.com/jash/source/latest/Jash.js';
    content.document.body.appendChild(jashElt);
    //content.document.body.appendChild(document.createElement('script')).src='http://www.billyreisinger.com/jash/source/latest/Jash.js'
}

function jashHide() {
    var jashParent = content.document.getElementById('JashParent');
    jashParent.style.display = 'none';
}

function getJash() { return content.document.getElementById('JashParent'); }

function jashToggle() {
    var jashParent = content.document.getElementById('JashParent');
    if (jashParent) {
        jashParent.style.display = jashParent.style.display=='none' ? 'block' : 'none';
    } else {
        jashRun();
    }
}

function jashTabs() {
    var jashTabList = content.document.querySelectorAll('#JashBottomBar>.JashButton');
    var jashtabs = new Object();
    jashtabs.evaluate  = jashTabList[0];
    jashtabs.css       = jashTabList[1];
    jashtabs.mouseover = jashTabList[2];
    jashtabs.inspect   = jashTabList[3];
    jashtabs.clear     = jashTabList[4];
    jashtabs.help      = jashTabList[5];
    return jashtabs
}

function jashEvalTab()      { jashTabs().evaluate.click();  }
function jashCssTab()       { jashTabs().css.click();       }
function jashMouseoverTab() { jashTabs().mouseover.click(); }
function jashInspectTab()   { jashTabs().inspect.click();   }
function jashClearTab()     { jashTabs().clear.click();     }
function jashHelpTab()      { jashTabs().help.click();      }

EOF
" -----------------------------------------------------------------------------

" ,----------,
" | TileView |
" '----------'
js <<EOF

function viewTiledOn() {
    tileView.viewTiled = true;
    tileView.drawTiledLayout();
}

function viewTiledOff() {
    tileView.viewTiled = false;
    tileView.drawSelectedPanel();
}

function viewTiledToggle() {
    if (tileView.viewTiled)
        viewTiledOff();
    else
        viewTiledOn();
}

EOF

command! toggleViewTiled -js viewTiledToggle();
map <A-f1> -js viewTiledToggle()

" -----------------------------------------------------------------------------
" ,-----------------------,
" | Web Developer Toolbar |
" '-----------------------'
" Accessing features via Javascript requires v1.x.x. Version 2.x is a webextension "

map <ext>d<C-h> -description "(show bindings)" -js CommandExMode().open("<ext>d")
map <ext>d      -description "(show bindings)" -js CommandExMode().open("<ext>d")
map <ext>dwi -description "Show/hide element classes and ids" -ex toggledisplayclassid
map <ext>dwr -description "Show/hide ruler"                   -ex ruler
map <ext>dwt -description "Toggle Web Developer Toolbar"      -ex toolbartoggle Web Developer Toolbar
map <ext>dww -description "Web Developer Extension commands"
\    -js CommandExMode().open("emenu Tools.Web Developer Extension.")

command! magnifier
    \ -bang
    \ -description "Display magnifier (! toggles) (Web Developer Toolbar)"
    \ -js bang ? wdtToggleMagnifier() : WebDeveloper.PageMagnifier.createPageMagnifier();
command! magnifieroff
    \ -description "Turns off magnifier (Web Developer Toolbar)"
    \ -js WebDeveloper.PageMagnifier.removePageMagnifier();
command! magnifiersize
    \ -description "Sets magnifier size in pixels (Web Developer Toolbar)"
    \ -nargs=+
    \ -js wdtSetMagnifierSize(args[0], args[1])
command! magnifierzoom
    \ -description "Sets magnifier zoom level (Web Developer Toolbar)"
    \ -nargs=1
    \ -js wdtSetMagnification(args[0])
command! ruler
    \ -description "Toggle ruler (Web Developer Toolbar)"
    \ emenu Tools.Web Developer Extension.Miscellaneous.Display Ruler
command! stylesoff
    \ -description "Turns off styles via Web Developer 'Toggle all Stylesheets'"
    \ -js WebDeveloper.CSS.toggleAllStyleSheets(true, content.document);
command! styleson
    \ -description "Turns on styles previously disabled via Web Developer 'Toggle all Stylesheets'"
    \ -js WebDeveloper.CSS.toggleAllStyleSheets(false, content.document);
command! styleinfo
    \ -description "Show styles for selected element"
    \ :execute "emenu Tools.Web Developer Extension.CSS.Display Style Information"
command! togglestylesembedded
\    -js document.getElementById("web-developer-disable-embedded-styles-menu").click();
command! togglestyleslinked
\    -js document.getElementById("web-developer-disable-linked-style-sheets-menu").click();
command! togglestylesinline
\    -js document.getElementById("web-developer-disable-inline-styles-menu").click();
" note: toggle all styles has binding <Alt-Shift-A>
command! togglestylesall
\    -js document.getElementById("web-developer-disable-all-styles-menu").click();
command! togglestylesbrowser
\    -js document.getElementById("web-developer-disable-browser-default-styles-menu").click();
command! hidebackground
\    -js WebDeveloper.Images.hideBackgroundImages([content.document]);
command! toggledisplayclassid -description "Show/hide element classes and ids (Web Developer Toolbar)"
\    -js document.getElementById("web-developer-display-id-class-details-command").click();

 js <<EOF

function wdtToggleMagnifier() {
    if (document.getElementById("web-developer-page-magnifier-container").hidden)
        WebDeveloper.PageMagnifier.createPageMagnifier();
    else
        WebDeveloper.PageMagnifier.removePageMagnifier();
}

function wdtGetMagnification() {
    return parseFloat(WebDeveloper.Preferences.getExtensionStringPreference("magnification.level"));
}

function wdtSetMagnification(level) {
    // WebDeveloper.PageMagnifier.updateMagnificationLevel({ value: level });
    WebDeveloper.Preferences.setExtensionStringPreference("magnification.level", level);
}

function wdtSetMagnifierSize(w, h=w) {
    var magnifier = document.getElementById("web-developer-page-magnifier");
    magnifier.width = w;
    magnifier.height = h;
}

EOF

map zx -ex magnifier!

" -------------------------------------------------------------------------------
" ,--------------,
" | GreaseMonkey |
" '--------------'

set! extensions.greasemonkey.editor=/usr/local/bin/emacsclient
set! extensions.greasemonkey.fileIsGreaseable=true
set! extensions.greasemonkey.unmhtIsGreaseable=true
command! gmopenscriptsdirectory -js dactyl.execute("!dolphin "+GM_util.scriptDir().path)
command! gmscriptsdirectory -js dactyl.open(GM_util.scriptDir().path, {where:dactyl.NEW_TAB});
command! -bang gmnew -js dactyl.open('chrome://greasemonkey/content/newscript.xul', { where: bang ? 'here' : 'tab' });


" ,------------,
" | HackTheWeb |
" '------------'
command! hacktheweb -js hacktheweb.start();

" ===============================================================================
"                               _______________________
"                              |                       |
"                              | about:config SETTINGS |
"                              |_______________________|

set! general.autoScroll=true
" show previous session at start "
set! browser.startup.page=3
set! browser.urlbar.maxRichResults=25
set! devtools.chrome.enabled=true
set! devtools.debugger.remote-enabled=true
" enable webextensions on Mozilla pages (hidden setting) "
set! privacy.resistFingerprinting.block_mozAddonManager=true
" disable multiprocessing (Waterfox) "
:if isWaterfox
    set! browser.tabs.remote.autostart=false
:endif
" Downloads "
set! browser.download.lastDir.savePerSite=false
set! browser.download.folderList=2

command! toggleconfig
    \ -description "Toggle boolean about:config setting."
    \ -nargs=1
    \ -js dactyl.utils.togglePref(args[0]);

command! getboolpref
    \ -description "Show value of boolean about:config setting."
    \ -nargs=1
    \ -js utils.message(dactyl.utils.getBoolPref(args[0]));

command! getcharpref
    \ -description "Show value of string about:config setting."
    \ -nargs=1
    \ -js utils.message(dactyl.utils.getCharPref(args[0]));

command! getintpref
    \ -description "Show value of integer about:config setting."
    \ -nargs=1
    \ -js utils.message(dactyl.utils.getIntPref(args[0]));
command! getnsisupportsstringpref
    \ -description "Show value of nsISupportsString about:config setting."
    \ -nargs=1
    \ -js utils.message(prefroot.getComplexValue(args[0], Components.interfaces.nsISupportsString).data);

" enable/disable javascript "
command! acsetjs    :set! javascript.enabled=true
command! acunsetjs  :set! javascript.enabled=false
command! actogglejs toggleconfig javascript.enabled
command! acgetjs    getboolpref  javascript.enabled

" strict origin "
command! acsetstrictorigin    :set! security.fileuri.strict_origin_policy=true
command! acunsetstrictorigin  :set! security.fileuri.strict_origin_policy=false
command! actogglestrictorigin toggleconfig security.fileuri.strict_origin_policy
command! acgetstrictorigin    getboolpref  security.fileuri.strict_origin_policy

" enable CSP "
command! acsetcsp    :set! security.csp.enable=true
command! acunsetcsp  :set! security.csp.enable=false
command! actogglecsp toggleconfig security.csp.enable
command! acgetcsp    getboolpref  security.csp.enable

" enable CSP: strict dynamic "
command! acsetcspstrictdynamic    :set! security.csp.enableStrictDynamic=true
command! acunsetcspstrictdynamic  :set! security.csp.enableStrictDynamic=false
command! actogglecspstrictdynamic toggleconfig security.csp.enableStrictDynamic
command! acgetcspstrictdynamic    getboolpref  security.csp.enableStrictDynamic
command! accyclecsp -description "Cycle CSP preferences: respect/respect(except dynamic)/ignore"
\                   -js acCycleCSP();

js <<EOF
function acCycleCSP() {
    var csp       = prefroot.getBoolPref("security.csp.enable");
    var cspStrict = prefroot.getBoolPref("security.csp.enableStrictDynamic");
    switch([csp, cspStrict].toString()) {
      case "true,true":
          prefroot.setBoolPref("security.csp.enableStrictDynamic", false);
          break;
      case "true,false":
          prefroot.setBoolPref("security.csp.enable", false);
          break;
      case "false,false":
          prefroot.setBoolPref("security.csp.enable", true);
          prefroot.setBoolPref("security.csp.enableStrictDynamic", true);
          break;
    }
    utils.message(
        "security.csp.enable: " + utils.getBoolPref("security.csp.enable") + "\n" +
        "security.csp.enableStrictDynamic: " + utils.getBoolPref("security.csp.enableStrictDynamic"));
}
EOF

" Downloads "
command! acsetusedldir    :set! browser.download.useDownloadDir=true
command! acunsetusedldir  :set! browser.download.useDownloadDir=false
command! actoggleusedldir toggleconfig browser.download.useDownloadDir
command! acgetusedldir    getboolpref  browser.download.useDownloadDir

" OCSP stapling "
command! acsetocspstapling    :set! security.ssl.enable_ocsp_stapling=true
command! acunsetocspstapling  :set! security.ssl.enable_ocsp_stapling=false
command! actoggleocspstapling toggleconfig security.ssl.enable_ocsp_stapling
command! acgetocspstapling    getboolpref  security.ssl.enable_ocsp_stapling

" User Agent "
" Warning: breaks youtube if set "
"          breaks netflix if not set "
command! acsetuaoverride    set! general.useragent.override="Mozilla/5.0 (X11; Linux i686; rv:64.0) Gecko/20100101 Firefox/64.0"
command! acunsetuaoverride  set! general.useragent.override=''
command! acsetotheruaoverride -nargs=1 -js dactyl.execute(`set! general.useragent.override='${args[0]}'`);
command! actoggleuaoverride -js utils.toggleNsISupportStrPref("general.useragent.override", "Mozilla/5.0 (X11; Linux i686; rv:64.0) Gecko/20100101 Firefox/64.0");
command! acgetuaoverride    getnsisupportsstringpref general.useragent.override
command! acsetuseragent -nargs 1 -js prefroot.setCharPref("general.useragent.override", args[0]);

" Addon auto-updates "
command! acsetextupdate    :set! extensions.update.enabled=true
command! acunsetextupdate  :set! extensions.update.enabled=false
command! actoggleextupdate toggleconfig extensions.update.enabled
command! acgetextupdate    getboolpref  extensions.update.enabled

" Open related tab after current "
command! acsetrelatedtabaftercurrent    :set! browser.tabs.insertRelatedAfterCurrent=true
command! acunsetrelatedtabaftercurrent  :set! browser.tabs.insertRelatedAfterCurrent=false
command! actogglerelatedtabaftercurrent toggleconfig browser.tabs.insertRelatedAfterCurrent
command! acgetrelatedtabaftercurrent    getboolpref  browser.tabs.insertRelatedAfterCurrent

" Close window with last tab "
command! acsetclosewinwithlasttab     :set! browser.tabs.closeWindowWithLastTab=true
command! acunsetclosewinwithlasttab   :set! browser.tabs.closeWindowWithLastTab=false
command! actoggleclosewinwithlasttab  toggleconfig browser.tabs.closeWindowWithLastTab
command! acgetclosewinwithlasttab     getboolpref  browser.tabs.closeWindowWithLastTab

" Enable popup-blocker "
command! acsetenablepopupblocker     :set! dom.disable_open_during_load=true
command! acunsetenablepopupblocker   :set! dom.disable_open_during_load=false
command! actoggleenablepopupblocker  toggleconfig dom.disable_open_during_load
command! acgetenablepopupblocker     getboolpref  dom.disable_open_during_load

" Links opening in new windows "
" open_newwindow: divert links that would normally open in a new window "
"     1: divert to current tab and window "
"     2: don't divert "
"     3: divert to a new tab in the current window "
command! acsetopennewwin
    \ set! browser.link.open_newwindow=3 |
    \ set! extensions.dactyl.saved.browser.link.open_newwindow=3
command! acunsetopennewwin
    \ set! browser.link.open_newwindow=2 |
    \ set! extensions.dactyl.saved.browser.link.open_newwindow=2
command! actoggleopennewwin
    \ -js utils.toggleIntPrefBetween('browser.link.open_newwindow', 2, 3);
    \     utils.toggleIntPrefBetween('extensions.dactyl.saved.browser.link.open_newwindow', 2, 3);
command! acgetopennewwin getintpref extensions.dactyl.saved.browser.link.open_newwindow
" open_newwindow.restriction: "
"     0 divert all links, incl. HTML with target '_blank' and JS window.open() calls "
"     1 divert none "
"     2 divert links unless specifying how to display: "
"       excludes JS window.open() calls with the third parameter (features) specified "
command! acsetopennewwinrestriction
    \ set! browser.link.open_newwindow.restriction=2 |
    \ set! extensions.dactyl.saved.browser.link.open_newwindow.restriction=2
command! acunsetopennewwinrestriction
    \ set! browser.link.open_newwindow.restriction=0 |
    \ set! extensions.dactyl.saved.browser.link.open_newwindow.restriction=0
command! actoggleopennewwinrestriction
    \ -js utils.toggleIntPrefBetween('browser.link.open_newwindow.restriction', 0, 2);
    \     utils.toggleIntPrefBetween('extensions.dactyl.saved.browser.link.open_newwindow.restriction', 0, 2);
command! acgetopennewwinrestriction getintpref extensions.dactyl.saved.browser.link.open_newwindow.restriction

" Media Autoplay "
command! acsetautoplay    :set! media.autoplay.enabled=true
command! acunsetautoplay  :set! media.autoplay.enabled=false
command! actoggleautoplay toggleconfig media.autoplay.enabled
command! acgetautoplay    getboolpref  media.autoplay.enabled
command! acsetautoplayscripted    :set! media.autoplay.allowscripted=true
command! acunsetautoplayscripted  :set! media.autoplay.allowscripted=false
command! actoggleautoplayscripted toggleconfig media.autoplay.allowscripted
command! acgetautoplayscripted    getboolpref  media.autoplay.allowscripted

" Extensions Update "
"   Web Developer Toolbar"
set! extensions.{c45c406e-ab73-11d8-be73-000a95be3b12}.update.enabled=false

js <<EOF
function searchAddonsMozilla(sterm, where="tab") {
    var origPrevVal = prefroot.getBoolPref("security.csp.enable");
    prefroot.setBoolPref("security.csp.enable", false);
    window.setTimeout(()=>{
        dactyl.open(`https://addons.mozilla.org/en-US/firefox/search/?q=${sterm}&type=extension`,
                    { "where": where });
        prefroot.setBoolPref("security.csp.enable", origPrevVal);
    }, 2000);
}
EOF
command! addonssearch -description "Search Mozilla Addons site for extensions in new (!=current) tab"
\    -nargs=*
\    -bang
\    -js searchAddonsMozilla(args.join(" "), bang?"here":"tab");


" ============================================================================
"                                      _________
"                                     |         |
"                                     | CONTENT |
"                                     |_________|

" TODO: Write command to work on remote PDFs being viewed
"       - preferably by accessing file in cache
"       - otherwise by re-downloading

" PDF (local): view in Okular
command! oku -description "Open local file in Okular"
    \ execute `run okular "${decodeURIComponent(buffer.URL.substring(7))}"`

" Dump webpage text
command! dumptextw3m
    \ -description "Dump page text with w3m"
    \ -js dumpTextW3m(args[0]||undefined, args[1]||undefined, args[3]||undefined);
command! yanktextw3m
    \ -description "Extract page text with w3m and yank to clipboard"
    \ -js yankTextW3m(args[0]||undefined, args[1]||undefined);

js <<EOF

function yankTextW3m(columns=80, charset=null) {
    var url = buffer.URL;
    if (charset)
        dactyl.execute(`yank :!w3m -dump -cols ${columns} -o display_charset=${charset} ${url}`);
    else
        dactyl.execute(`yank :!w3m -dump -cols ${columns} ${url}`);
}

function dumpTextW3m(columns=80, charset=null, where=dactyl.NEW_TAB) {
    var url = buffer.URL;
    var urlname = urlLastComponent(url);
    var file = FileUtils.getFile("TmpD", [`${urlname}.txt`]);
    file.createUnique(Components.interfaces.nsIFile.NORMAL_FILE_TYPE, 0o666);
    var fname = file.path;
    if (charset)
        dactyl.execute(`!w3m -dump -cols ${columns} -o display_charset=${charset} ${url} > ${fname}`);
    else
        dactyl.execute(`!w3m -dump -cols ${columns} ${url} > ${fname}`);
    dactyl.open(`file://${fname}`, {where:where});
}

EOF


" =============================================================================
"                                   ____________
"                                  |            |
"                                  | EXTENSIONS |
"                                  |____________|

command! listextensions
    \ -description "List extensions and copy to clipboard."
    \ -js getExtensions();


map <ext>x<C-h> -js CommandExMode().open("showkeys <ext>x");
map <ext>x      -js CommandExMode().open("showkeys <ext>x");
map <ext>n<C-h> -js CommandExMode().open("showkeys <ext>n");
map <ext>n      -js CommandExMode().open("showkeys <ext>n");
map <ext>s<C-h> -js CommandExMode().open("showkeys <ext>s");
map <ext>s      -js CommandExMode().open("showkeys <ext>s");
map <ext>st -ex dialog customizetoolbar
map <ext>xe       -description "enable extension" :extenable<Space>
map <ext>xd       -description "disable extension" :extdisable<Space>
map <ext>xo       -description "extension options" :extoptions<Space>
map <ext>xr       -description "rehash extension" :extrehash<Space>
map <ext>x<Space> -description "toggle extension" :exttoggle<Space>
map <ext>t        -description "Tile Tabs: View Tiled" -js tileTabs.Tile();

" | Stay Open Menu | "
map <ext>om -description "Reinstall Stay Open Menu"
\    -ex open file:///opt/ff-addons/stay_open_menu-3.0.2-fx.xpi
" | uMatrix | "
map <ext>uu -description "Toggle uMatrix" -ex exttoggle uMatrix

js <<EOF
function addonToggle(id) {
    AddonManager.getAddonByID(id, function(addon) {
        if (addon) {
            addon.userDisabled = !addon.userDisabled;
        } else {
            dactyl.echoerr(`addon ${id} not found`);
            return;
        }
    });
}
window.addonToggle = addonToggle;

function addonEnable(id, enable=true) {
    AddonManager.getAddonByID(id, function(addon) {
        if (addon) {
            addon.userDisabled = enable;
        } else {
            dactyl.echoerr(`addon ${id} not found`);
            return;
        }
    });
}
window.addonEnable = addonEnable;

// getExtensions produces an array and passes it to an optional callback.
// By default, it prints the result list and copies it to clipboard.
function getExtensions(arrayCallback) {
    if (!arrayCallback) arrayCallback = yankArrayItems;
    AddonManager.getAddonsByTypes(["extension"], function(exts) {
        var result = [];
        for (let ext of exts)
            result.push(ext.name+': '+ext.id);
        arrayCallback.call(null, result);
    });
}
window.getExtensions = getExtensions;

// from https://developer.mozilla.org/en-US/docs/Archive/Add-ons/Code_snippets/Toolbar#Adding_button_by_default
/**
 * Installs the toolbar button with the given ID into the given
 * toolbar, if it is not already present in the document.
 *
 * @param {string} toolbarId The ID of the toolbar to install to.
 * @param {string} id The ID of the button to install.
 * @param {string} afterId The ID of the element to insert after. @optional
 */
function installButton(toolbarId, id, afterId) {
    if (!document.getElementById(id)) {
        var toolbar = document.getElementById(toolbarId);

        // If no afterId is given, then append the item to the toolbar
        var before = null;
        if (afterId) {
            let elem = document.getElementById(afterId);
            if (elem && elem.parentNode == toolbar)
                before = elem.nextElementSibling;
        }

        toolbar.insertItem(id, before);
        toolbar.setAttribute("currentset", toolbar.currentSet);
        document.persist(toolbar.id, "currentset");

        if (toolbarId == "addon-bar")
            toolbar.collapsed = false;
    }
}
window.installButton = installButton;

function navbarAddItem(itemID, afterID=null) {
    installButton('nav-bar', itemID, afterID);
}
window.navbarAddItem = navbarAddItem;

function navbarToggleItem(itemID, afterID=null) {
    var navbar = document.getElementById('nav-bar');
    if (navbar.currentSet.includes(itemID))
        navbarRemoveItem(itemID);
    else
        navbarAddItem(itemID, afterID);
}
window.navbarToggleItem = navbarToggleItem;

function navbarRemoveItem(itemID) {
    var navbar = document.getElementById('nav-bar');
    navbar.currentSet = navbar.currentSet.replace(','+itemID, '');
}
window.navbarRemoveItem = navbarRemoveItem;
EOF

" ,-------------,
" | DownThemAll |
" '-------------'

js <<EOF
var dta_id = "{DDC359D1-844A-42a7-9AA1-88A850A938A8}";
AddonManager.getAddonByID(dta_id, a=>{ window.dta = a; });
dta = window.dta;
EOF

command! dtamanager -description "Open DownThemAll manager"
    \ -js window.openDialog('chrome://dta/content/dta/manager.xul');
command! dta -description "DownThemAll"
    \ -js document.getElementById('dtaCtxDTA-direct').click();

" -------------------------------------------------------------------------------
" ,-------------,
" | Translation |
" '-------------'

" | gDict |
js var gdict_id='jid1-6OFSXFbACQthzQ@jetpack';
map <ext>lg -description "Toggle gDict" -js addonToggle(gdict_id);
" | SelectiveDict | "
js var selectivedict_id = '{b677191a-bb3f-49e6-9378-fa87e03799af}'
js window.selectivedict_id = selectivedict_id;
js addonEnable(selectivedict_id, true);
map <ext>l;s -description "Toggle SelectiveDict Active" -ex feedkeys <C-A-t>
map <ext>ls -description "Toggle SelectiveDict" -js addonToggle(selectivedict_id);

" ,----------,
" | PopJisyo |
" '----------'

command! popjisyo
    \ -bang
    \ -description "Add hints for Japanese via POPjisyo.com. With !, adds hints for English"
    \ -js bang ? popJisyoEtoJ() : popJisyo();

style -name=popjisyo
    \ www.popjisyo.com
    \ td.charDat2,td.charDat3 { display: none !important; }
command! popjisyochinesecolumns
    \ -description "toggle display of chinese data"
    \ styletoggle -name popjisyo

map <ext>lpp -ex popjisyo
map <ext>lpc -ex popjisyochinesecolumns

" ,-----------,
" | Rikaisama |
" '-----------'
" notes:
" CSS - chrome://rikaichan/skin/popup-blue.css
" keybindings: stored as ASCII codes in rcxConfig.kb* entries
" functions:
"   rcxData.convertKatakanaToHiragana(word)
"   rcxData.kanjiSearch(text)
"   rcxData.textSearch(text)
"   rcxData.wordSearch(text)
"   rcxData.translate(word, noKanji)
"   rcxMain.containsKanji(text)
"   rcxMain.htmlParser(aHTMLString)
"   rcxMain.lookupSearch(text)            // perform lookupbar search (results in popup)
"   rcxMain.showPopup(text)               // show text using Rikaisama popup

" Saved definitions/audio"
set! extensions.rikaisama.sfile=~/Documents/rikai-saved
set! extensions.rikaisama.audiodir=~/Documents/rikai-saved-audio

command! riklbaron -description "Rikaisama lookupbar on"
    \ -js rcxMain.lbToggle();
command! riklbaroff -description "Rikaisama lookupbar off"
    \ -js rcxMain.lbHide();
command! riklbartoggle -description "Rikaisama lookupbar toggle"
    \ -js rikLBToggle();
command! rikplayaudio -description "Rikaisama: play audio" -bang -js rcxMain.playJDicAudio(bang);
command! rikcopydef -description "Rikaisama: copy definition to clipboard"
    \ -js rcxMain.copyToClip();
command! rikcopy -description "Rikaisama: copy word to clipboard"
    \ -js rikCopyWordToClipboard();
command! rikstick -description "Rikaisama: make current popup sticky"
    \ -js rcxMain.allowOneTimeSuperSticky();
command! rikstickytoggle -description "Rikaisama: toggle sticky popups"
    \ -js rikStickyToggle();
command! riksetpos -description "Rikaisama: set popup position (normal, top, bottom)"
    \ -nargs=? -js rikSetPosition(args[0]||0);
command! rikepwing -description "Rikaisama: toggle epwing mode"
    \ -js rikEpwingToggle();
command! riksanseido -description "Rikaisama: toggle sanseido mode"
    \ -js rikSanseidoToggle();
command! rikprefs -description "Rikaisama: preferences"
    \ open chrome://rikaichan/content/options.xul
command! rikprefspopup -description "Rikaisama: preferences (popup)"
    \ emenu Tools.Extension Preferences.Rikaisama  22.9.3
" Preferences "
command! riksetmergedivs
\    -description "Rikaisama: set merged divs preference"
\    set! extensions.rikaisama.mergedivs=true
command! rikunsetmergedivs
\    -description "Rikaisama: unset merged divs preference"
\    set! extensions.rikaisama.mergedivs=false
command! riktogglemergedivs
\    -description "Rikaisama: toggle merged divs preference"
\    toggleconfig extensions.rikaisama.mergedivs
command! rikgetmergedivs
\    -description "Rikaisama: get merged divs preference" getboolpref
\    extensions.rikaisama.mergedivs

style -name=rikaisama-bigkanji *
\    #rikaichan-window>.w-kanji { font-size: 200% !important; }
\    #rikaichan-window .k-kanji { font-size: 400% !important; }
\    #rikaichan-window .k-abox-r,
\    #rikaichan-window .k-bbox-tb .k-bbox-0a,
\    #rikaichan-window .k-bbox-tb .k-bbox-1a { font-size: 120% !important; }
style -name=rikaisama-hugekanji *
\ #rikaichan-window>.w-kanji { font-size: 300% !important; }
\ #rikaichan-window .k-kanji { font-size: 600% !important; }
style -name=rikaisama-on-top * #rikaichan-window { z-index: 8888888888 !important; }
style -name=rikaisama-kanji-light *
\    #rikaichan-window>.w-kanji, #rikaichan-window .k-kanji {
\        font-family: "HiraMinPro-W3","Hiragino Mincho Pro W3","Hiragino Mincho Pro","ヒラギノ明朝 Pro W3",
\                     "游明朝",YuMincho,"HG明朝E","ＭＳ Ｐ明朝","MS PMincho","MS 明朝","MS Mincho",serif
\                     !important;
\    }
styledisable -name rikaisama-hugekanji

map <ext>r<C-h> -description "(show bindings: Rikaisama)" -js CommandExMode().open("showkeys <ext>r");
map <ext>r      -description "(show bindings: Rikaisama)" -js CommandExMode().open("showkeys <ext>r");
map <ext>rl -description "Rikai: Toggle Lookup Bar" -ex riklbartoggle
map <ext>ro -description "Rikai: Toggle Sanseido mode" -ex riksanseido
map <ext>rp -description "Rikai: Preferences (new tab)" -ex tab rikprefs
map <ext>rr -description "Rikai: Toggle sticky" -ex rikstickytoggle
map <ext>rs -description "Rikai: Append definition to save file"-js rcxMain.saveToFile()
map <ext>rt<C-h> -description "(show bindings: Rikaisama Toggles)"
\                -js CommandExMode().open("showkeys <ext>rt");
map <ext>rt      -description "(show bindings: Rikaisama Toggles)"
\                -js CommandExMode().open("showkeys <ext>rt");
map <ext>rtk -description "Rikai: Toggle large kanji" -ex styletoggle -name rikaisama-bigkanji
map <ext>rtK -description "Rikai: Toggle huge kanji"  -ex styletoggle -name rikaisama-hugekanji
map <ext>rtm -description "Rikai: Toggle merged divs" -ex riktogglemergedivs
map <ext>rto -description "Rikai: Toggle on top" -ex styletoggle -name rikaisama-on-top
map <ext>rts -description "Rikai: Toggle kanji style"  -ex styletoggle -name rikaisama-kanji-light

js <<EOF
function rikLBIsVisible() {
    var lbar = document.querySelector('#rikaichan-lbar');
    return lbar && !lbar.getAttribute('hidden');
}
function rikLBToggle() {
    if (rikLBIsVisible())
        rcxMain.lbHide();
    else
        rcxMain.lbToggle();
}
function rikStickyToggle() {
    var newval =  !rcxMain.sticky;
    rcxMain.sticky = newval;
    utils.message(`rikai: sticky = ${newval ? 'ON':'OFF'}`);
}
function rikStick() {
    rcxMain.allowOneTimeSuperSticky();
}
function rikSetPosition(pos=0) {
    switch (pos) {
        case 'normal':
            pos = 0;
            break;
        case 'top':
            pos = 1;
            break;
        case 'bottom':
            pos = 2;
            break;
    }
    rcxMain.altView = pos;
}
function rikPlayAudio() {
    rcxMain.playJDicAudio();
}
function rikCopyWordToClipboard() {
    dactyl.clipboardWrite(rcxMain.word);
}
function rikEpwingToggle() {
    if (rcxMain.epwingMode) {
        rcxMain.epwingMode = false;
        dactyl.utils.message("epwing mode off");
    } else {
        rcxMain.epwingMode = true;
        dactyl.utils.message("epwing mode on");
    }
}
function rikSanseidoToggle() {
    if (rcxMain.sanseidoMode) {
        rcxMain.sanseidoMode = false;
        dactyl.utils.message("sanseido mode off");
    } else {
        rcxMain.sanseidoMode = true;
        dactyl.utils.message("sanseido mode on");
    }
}
EOF

" ,--------------------------,
" | Bookmarks Toolbar Button |
" '--------------------------'
command! bookmarkstoolbarbuttontoggle -js bookmarksToolbarButtonToggle();

map <ext>ssb -ex bmarksbarbuttontogglestyle
map <ext>snb -js bookmarksToolbarButtonToggle();

js <<EOF

function bookmarksToolbarButtonToggle() {
    if (document.getElementById('reader-mode-button')) {
        navbarToggleItem("personal-bookmarks-menu-button", "reader-mode-button");
    }
    else if (document.getElementById('bookmarks-menu-button')) {
        navbarToggleItem("personal-bookmarks-menu-button", "bookmarks-menu-button");
    }
    else if (document.getElementById('urlbar-container')) {
        navbarToggleItem("personal-bookmarks-menu-button", "urlbar-container");
    }
    else {
        navbarToggleItem("personal-bookmarks-menu-button");
    }
    }
window.bookmarksToolbarButtonToggle = bookmarksToolbarButtonToggle;

EOF

style -name=bmarksbar-button
    \ *
    \ #personal-bookmarks-menu-button {
    \     -moz-image-region: rect(0px 24px 24px 0px);
    \     -moz-box-orient: horizontal !important;
    \ }
    \ toolbar[iconsize="small"] #personal-bookmarks-menu-button {
    \     -moz-image-region: rect(0px 16px 16px 0px);
    \     -moz-box-orient: horizontal !important;
    \ }
command! bmarksbarbuttontogglestyle styletoggle -name bmarksbar-button

" ,---------------------------------,
" | Wiktionary and Google Translate |
" '---------------------------------'
js <<EOF
if (typeof gd12 != 'undefined') {
    gd12.prefs.applyUserStyle();
    var gd12style_default = ".gDicClassPopup { background-color: white !important; border: 2px solid gray !important; }";

    gd12.prefs.myStyle = ".gDicClassPopup { background-color: #FFDDDD !important; border: 2px solid gray !important; }"
    gd12.prefs.applyUserStyle()
}
EOF

" -----------------------------------------------------------------------------
" ,-------, ,-----------,
" | Links | | <leader>l |
" '-------' '-----------'
map <leader>l<C-h>
\    -description "(show bindings: Links)"
\    -js CommandExMode().open("showkeys <leader>l")
map <leader>l
\    -description "(show bindings: Links)"
\    -js CommandExMode().open("showkeys <leader>l")

map <leader>la -description "Append links to end of page" -ex appendlinks
map <leader>lc -description "Count links" -ex countlinks
map <leader>ld -description "Choose links from page and download" -b :dlchooselinks<Space>
map <leader>lD -description "Download selected links" -b :dlselectionlinks<Space>
map <leader>lu -description "Append link destinations to end of page" -ex appendlinkurls
map <leader>ll -description "List all links in page" -ex listlinks
map <leader>ls -description "Open links in selection" -ex openselectionlinks
map <leader>lt -description "Append link text & destinations to end of page" -ex appendlinktextandurls
map <leader>lT -description "Append link destinations & text to end of page" -ex appendlinkurlsandtext
map <leader>lv -description "Open links in clipboard" -ex tabopencblinks

command! appendlinks
\     -description "Append links to end of page"
\     -js appendLinks();
command! appendlinkurls
\     -description "Append link destinations to end of page"
\     -js appendLinkUrls();
command! appendlinktextandurls
\     -description "Append link text & destinations to end of page"
\     -js appendLinkTextAndUrls();
command! appendlinkurlsandtext
\     -description "Append sorted link destinations & text to end of page"
\     -js appendLinkTextAndUrls(true, true);
" trigger listlinks keyword bookmarklet
command! listlinks
\     -description "List all links in page"
\     :open listalllinks
command! countlinks
\     -description "Count links"
\     -js utils.messageWithLineLimit('Number of anchor elements: ' + countSelector('a'));
command! listlinktext
\     -description "List the text of all links in page"
\     -js dactyl.execute(`open javascript:var newtab = window.open('', '_blank', 'scrollbars, resizable'); var s = '<html>\n<base target=_blank>\n<body>\n<pre>\n${getSelectorContent(":-moz-any-link").join("\\n")}\n</pre>\n</body>\n</html>\n'; newtab.document.writeln(s); void(0);`)
command! dlchooselinks
\    -description "Select links from page and download"
\    -nargs=?
\    -complete=dir
\    -js dlChoosePageLinks(args[0]);
command! tabopencblinks
\    -description "Open links in clipboard"
\    -js openCBLinks();
command! openselectionlinks
\    -description "Open links in selection"
\    -js openSelectionLinks();
command! dlselectionlinks
\    -description "Download links in selection. With ! save links in subdirectory."
\    -bang -nargs=?
\    -complete=dir
\    -js bang? dlSelectionLinks(null, true) : dlSelectionLinks();
command! yankselectionlinks
\    -description "Yank links in selection"
\    -js utils.cbWriteWithMessageLimit(getSelectionLinks().join("\n"));

js <<EOF
function appendLinks () {
    tmpStr = '';
    d = content.document;
    s = d.getElementsByTagName('A');
    la = new Array(s.length);
    lc=0;
    for(i = 0;i<s.length;i++)
        if(s[i].innerText != '' && s[i].innerText!= ' ') {
            lc++;
            la[lc] = s[i];
        }
    for(i = 1; i<=lc; i++)
        tmpStr += `<a href=${la[i].href}> ${la[i].href} </a><br>`;
    d.body.insertAdjacentHTML(
        'beforeEnd',
        `<br style = clear:both;><div><hr>Link Footnotes:<hr>${tmpStr}</div><hr>`
    );
}

function appendLinkUrls () {
    tmpStr = '';
    d = content.document;
    s = d.getElementsByTagName('A');
    la = new Array(s.length);
    lc=0;
    for(i = 0;i<s.length;i++)
        if(s[i].innerText != '' && s[i].innerText!= ' ') {
            lc++;
            la[lc] = s[i];
        }
    for(i = 1; i<=lc; i++)
        tmpStr += la[i].href + '<br>';
    d.body.insertAdjacentHTML(
        'beforeEnd',
        `<br style = clear:both;><div><hr>Link Footnotes:<hr><p>${tmpStr}</div><hr>`
    );
}

function appendLinkTextAndUrls (urlFirst=null, sort=null) {
    var lines = [];
    var linesStr = "";
    var d = content.document;
    var s = d.getElementsByTagName('A');
    var la = new Array(s.length);
    var lc=0;
    for(i = 0;i<s.length;i++)
        if(s[i].innerText != '' && s[i].innerText!= ' ') {
            lc++;
            la[lc] = s[i];
        }
    for(i = 1; i<=lc; i++)
        if (urlFirst)
            lines.push(la[i].href + " ⸻ " + la[i].innerText);
        else
            lines.push(la[i].innerText + " ⸻ " + la[i].href);
    if (sort)
        linesStr = lines.sort().join("<br>");
    else
        linesStr = lines.join("<br>");
    d.body.insertAdjacentHTML(
        'beforeEnd',
        `<br style = clear:both;><div><hr>Link Footnotes:<hr><p>${linesStr}</div><hr>`
    );
}

function dlLinks(links, dir=null, subdir=null) {
    home = env.get("HOME");
    dir = dir || `${home}/Downloads`;
    var newdir;
    if (subdir) {
        var title = subdir==true ? buffer.title : subdir;
        newdir = `${dir}/${title}`;
        dactyl.execute(`!mkdir -p "${newdir}"`);
    } else {
        newdir = dir;
    }
    s = '';
    for (var l of links) {
        var title = l.parentElement.parentElement.getAttribute('data-title');
        s += l.href + " ";
    }
    dactyl.execute(`!zsh -c 'cd "${newdir}"; for x in ${s}; do wget $x; done;'`);
}
window.dlLinks = dlLinks;

function dlChooseLinks(links, dir=null, title=null) {
    home = env.get("HOME");
    dir = dir || `${home}/Downloads`;
    var title = title || "downloads";
    var newdir = `${dir}/${title}`;
    if (title)
        dactyl.execute(`!mkdir -p "${newdir}"`);
    if (links.length < 160) {
        s = '';
        for (var l of links) {
            var title = l.parentElement.parentElement.getAttribute('data-title');
            s += l.href + "\\\\n";
        }
        dactyl.execute(`!roxterm -e zsh -c 'cd "${newdir}"; echo -e "${s}" | iselect -ma -kj:KEY_DOWN -kk:KEY_UP | while read -r x || [[ -n $x ]]; do wget $x; done; $SHELL'`);
    } else {
        var tempfile = io.system("mktemp").output;
        for (var l of links) {
            // var title = l.parentElement.parentElement.getAttribute('data-title');
            dactyl.execute(`!echo "${l.href}\\\\n" >> ${tempfile}`)
        }
        dactyl.execute(`!roxterm -e zsh -c 'cd "${newdir}"; cat ${tempfile} | iselect -ma -kj:KEY_DOWN -kk:KEY_UP | while read -r x || [[ -n $x ]]; do wget $x; done; $SHELL'`);
    }
}
window.dlChooseLinks = dlChooseLinks;

function dlChoosePageLinks(dir=null) { dlChooseLinks(content.document.links, dir, buffer.title) }

function openCBLinks() {
    var s = dactyl.clipboardRead();
    var links = s.split("\n").filter(s=>s.trim());
    openListLinks(links);
}

function openListLinks(links, opts={where: dactyl.NEW_TAB}) {
    links.forEach(link=>dactyl.open(link, opts));
}

function getSelectionLinks() { return Array.from(getSelectionDOM().links); }

function openSelectionLinks() { getSelectionLinks().forEach(l=>openOrSelectTab(l, count?"here":"tab")); }

function dlSelectionLinks(dir=null, subdir=null) { return dlLinks(getSelectionLinks(), dir, subdir); }
EOF

" -------------------------------------------------------------------------------
" ,----------------,
" | Image Commands |
" '----------------'
map <leader>i
\    -description "(show bindings: Misc/Image Operations)"
\    -js CommandExMode().open("showkeys <leader>i");
map <leader>i<C-h>
\    -description "(show bindings: Misc/Image Operations)"
\    -js CommandExMode().open("showkeys <leader>i");
map <leader>ia -description "Add image ALT text to TITLE tag" -ex imgsalttotitle
map <leader>ii -description "View or follow image" -js hints.show("ἱ");

" -------------------------------------------------------------------------------
" ,---------------,
" | Text Encoding |
" '---------------'
"command! encuni :execute "emenu View.Text Encoding.Unicode"
"command! encjis :execute "emenu View.Text Encoding.Japanese (Shift_JIS)"
command! encuni :emenu View.Text Encoding.Unicode
command! encjis :emenu View.Text Encoding.Japanese (Shift_JIS)
command! enceuc :emenu View.Text Encoding.Japanese (EUC-JP)

map <leader>xe<C-h>
\    -description "(show bindings: Text Encodings)"
\    -js CommandExMode().open("showkeys <leader>xe")
map <leader>xe
\    -description "(show bindings: Text Encodings)"
\    -js CommandExMode().open("showkeys <leader>xe")
map <leader>xeu -ex emenu View.Text Encoding.Unicode

" -------------------------------------------------------------------------------
" ,----------------,
" | Table Commands |
" '----------------'
map <leader>x<C-h>
\    -description "(show bindings: Misc/Tables)"
\    -js CommandExMode().open("showkeys <leader>x")
map <leader>x
\    -description "(show bindings: Misc/Tables)"
\    -js CommandExMode().open("showkeys <leader>x")
map <leader>xt<C-h> -js CommandExMode().open("showkeys <leader>xt")
map <leader>xt      -js CommandExMode().open("showkeys <leader>xt")

map <leader>xt, -ex table2csv
map <leader>xtw -ex tablewiden
map <leader>xtW -ex tablewrap
map <leader>xtd :tableDeleteColumns<Space>
map <leader>xtc
    \ -description "Copy table columns"
    \ :copytablecols<Space>
map <leader>xtC
    \ -description "Copy table columns (omit rows with too few columns)"
    \ :copytablecols-strict<Space>
map <leader>xt/
    \ -description "Filter Table Rows with function (arguments are the contents of each cell as strings)"
    \ :filtertablerows<Space>

" Table2CSV
" table2csv JS from https://snipt.net/whiskybar/ (via http://marklets.com/CSV from HTML tables.aspx)
command! table2csv
    \ -description "Convert table contents to CSV in box under table"
    \ :open javascript:(function(){$('table').each(function(){var%20$table=$(this);$('<textarea>').css('width',$table.width()).css('height','400px').html($.map($table.find('tr'),function(tr){return%20$.map($(tr).find('th,%20td'),function(e){return'"'+$(e).text().replace('"','""').replace('\n','%20')+'"'}).join(',')}).join('&#13;&#10;')).insertAfter($table);})})()
command! yanktablecsvarea
    \ -description "Yank the contents of table N's CSV. Use after :table2csv"
    \ -nargs=1
    \ -js yankTableCSVArea(Number(args[0])-1);

command! filtertablerows
    \ -description "Filter Table Rows with function (arguments are the contents of each cell as strings)"
    \ -complete javascript
    \ -nargs=1
    \ -js dactylArgsSet(args); hints.show('Ⓣ');

command! copytablecols
    \ -description "Copy specified columns from table chosen by HINT"
    \ -nargs=*
    \ -js dactylArgsSet(args); hints.show('ŧ');

command! copytablecols-strict
    \ -description "Copy specified columns from table chosen by HINT (omit rows with too few columns)"
    \ -nargs=*
    \ -js dactylArgsSet(args); hints.show('Ŧ');

js <<EOF
function yankTableCSVArea(n) {
    var tareas = content.document.querySelectorAll('table+textarea');
    var contents = tareas[n].textContent;
    utils.cbWriteWithMessageLimit(contents);
}
EOF

" Widen table

style -name=table-widen
    \ file://*
    \ body { max-width: 250em !important; }
command! tablewiden -description "widen table" styletoggle -name table-widen

style -name=table-wrap
    \ file://*
    \ td:first-of-type { white-space: pre-wrap !important; }
command! tablewrap -description "wrap text in table cells" styletoggle -name table-wrap

command! tableDeleteColumns
    \ -description "Delete given columns from all tables."
    \ -nargs=*
    \ -js tableDeleteCols(args.map(parseInt));

js <<EOF

function tableDeleteCols(cols) {
    var tables = content.document.getElementsByTagName('table');
    for (var t of Array.from(tables))
        for (var r of Array.from(t.rows))
            for (var i of cols) {
                var cell = r.children[i];
                if (cell) cell.remove();
            }
}

function tableFilterRows(table, filter) {
    /* first row is column headings */
    /* filter takes one argument for each column */
    var rows = Array.from(table.rows).slice(1);
    for (var row of rows) {
        var cells = Array.from(row.cells);
        var cellsText = cells.map(c=>c.innerText);
        if (!filter.apply(null, cellsText))
            row.remove();
    }
}

function tableToCSV(table) {
    var output = "";
    for (row of table.rows) {
        var cells = Array.from(row.cells);
        var cellstrs = cells.map(cell=>`"${cell.innerText}"`);
        output += cellstrs.join(", ") + "\n";
    }
    return output;
}

function CopyTableAsCSV(table) {
    var csv = tableToCSV(table);
    utils.cbWriteWithMessageLimit(csv);
}

function CopyTableAsCSVbySelector(sel) {
    var table = content.document.querySelector(sel);
    var csv = tableToCSV(table);
    utils.cbWriteWithMessageLimit(csv);
}

function extractTableColumns(table, columns, strict=false) {
    var output = "";
    var rows = Array.from(table.rows).slice(1);
    for (var row of rows) {
        var cells = Array.from(row.cells);
        if (strict && cells.length < Math.max.apply(null, columns))
            continue;
        function processCols(i) {
            var cellValue = cells[i-1] && cells[i-1].innerText.trim();
            if ( typeof(cellValue)=="string" &&
                 cellValue.startsWith('"') &&
                 cellValue.endsWith('"') )
                cellValue = cellValue.slice(1, -1).trim();
            return cellValue;
        }
        var colstrs = Array.from(columns).map(processCols);
        output += colstrs.join("\t") + "\n";
    }
    return output;
}
window.extractTableColumns = extractTableColumns;

function copySpecifiedTableColumns(table, strict=false) {
    var extracted = extractTableColumns(table, window._dactylargs, strict);
    var result = extracted.replace(/\n\s*\n/mg, '\n');
    utils.cbWriteWithMessageLimit(result);
}

EOF


" -------------------------------------------------------------------------------

command! activator -description "Lightbend (Typesafe) Activator"
     \ :!/opt/activator-dist/bin/activator && firefox http://127.0.0.1:8888/home &


" =============================================================================
"                              _________________________
"                             |                         |
"                             | COMMAND IMPLEMENTATIONS |
"                             |_________________________|
"  ______________________________________________________________________________________
" /                                                                                      \
" | JAVASCRIPT                                                                           |
" | *  js ... code operates in chrome window namespace                                   |
" | *  :open javascript:(function(){ ... })() code operates in document window namespace |
" | note: FF's browser console <C-S-J> can be used to try out code in the chrome window  |
" |       (although some Pentadactyl variables aren't available)                         |
" |                                                                                      |
" | settings:                                                                            |
" |   dom.event.contextmenu.enabled                                                      |
" |   dom.disable_window_flip (allow window raising/lowering)                            |
" |   dom.disable_window_move_resize                                                     |
" |                                                                                      |
" \______________________________________________________________________________________/

" Function stub for opening a site and filling in a text field
" function (s) {
"     var newtab = gBrowser.addTab('');
"     gBrowser.selectedTab = newtab;
"     var tb = gBrowser.getBrowserForTab(newtab);
"     tb.addEventListener("DOMContentLoaded", function () {
"         var box = content.document.getElementById('')
"         box.value=s;
"         // box.focus();
"     });
" }

js <<EOF

var openAllLinksInCB = function () {
    var a = window.readFromClipboard().split(/[ \t\n]+/);
    for (i = 1; i < a.length; ++i) {
        dactyl.open(a[i], {where:dactyl.NEW_TAB});
    };
}

undob = function() {
    var currT = gBrowser.selectedTab;
    var altT = tabs.alternate;
    var ssService = Components.interfaces.nsISessionStore;
    var ssClass = Components.classes['@mozilla.org/browser/sessionstore;1']
    var ss = ssClass.getService(ssService);
    var closedTabs = JSON.parse(ss.getClosedTabData(window));
    var ct0 = closedTabs[0];
    ss.undoCloseTab(window, ct0);
    gBrowser.selectedTab = altT;
    gBrowser.selectedTab = currT;
}

" Create adjacent duplicate tab and go back in the browser history "
backt = function () {
    var dupT = tabs.cloneTab(tabs.getTab(), true);
    var dupTB = gBrowser.getBrowserForTab(dupT);
    var backtListener = function () {
        gBrowser.goBack();
        dupTB.removeEventListener("DOMContentLoaded", backtListener);
    };
    dupTB.addEventListener("DOMContentLoaded", backtListener);
}

" Create adjacent duplicate tab and go forward in the browser history "
forwardt = function() {
    var dupT = tabs.cloneTab(tabs.getTab(), true);
    var dupTB = gBrowser.getBrowserForTab(dupT);
    var forwardtListener = function () {
        gBrowser.goForward();
        dupTB.removeEventListener("DOMContentLoaded", forwardtListener);
    };
    dupTB.addEventListener("DOMContentLoaded", forwardtListener);
}

" Create adjacent duplicate tab to right "
tabCopyRight = function() {
    var currT = gBrowser.selectedTab;
    var dupT = gBrowser.duplicateTab(currT);
    gBrowser.selectedTab = dupT;
}
" ...basically equivalent to tabCopyRight, but without waiting for the new tab to load. "
tabCopyLeftBg = function() {
    var currT = gBrowser.selectedTab;
    var dupT = gBrowser.duplicateTab(currT);
    getBrowser().moveTabForward();
}

function toggleUrl (x, y, x_canon, y_canon) {
    " General purpose URL toggle function: swaps x and y in URL "
    " If an argument is a regex, then canonical strings corresponding "
    " to x and y must be provided to be used in replacement."
    " Note: x is checked first, then y if x fails. "
    " So if one of the search expressions may be a substring of the other,"
    " the larger must be passed as the first argument x."
    if (x_canon === undefined) x_canon = x;
    if (y_canon === undefined) y_canon = y;
    var url = content.location.href;
    var newurl;
    if (url.search(x) >= 0)
        newurl = url.replace(x, y_canon);
    else if (url.search(y) >= 0)
        newurl = url.replace(y, x_canon);
    if (newurl) {
        dactyl.open(newurl);
        return newurl;
    }
}
window.toggleUrl = toggleUrl;

function toggleQueryComponent(url, query, altQuery=null) {
    var newurl;
    var qRegexFinal = RegExp("[?&]"+query+"$");
    var qRegexNonfinal = RegExp(query+"[&#]");
    var qAltRegexFinal = RegExp("[?&]"+altQuery+"$");
    var qAltRegexNonfinal = RegExp(altQuery+"[&#]");
    if (url.match(qRegexFinal))
        newurl = url.replace(qRegexFinal, "");
    else if (url.match(qRegexNonfinal))
        newurl = url.replace(qRegexNonfinal, "");
    else if (altQuery && url.match(qAltRegexFinal))
        newurl = url.replace(qAltRegexFinal, query);
    else if (altQuery && url.match(qAltRegexNonfinal))
        newurl = url.replace(qAltRegexNonfinal, query);
    else if (url.match(/[?]/))
        newurl = url + "&" + query;
    else
        newurl = url + "?" + query;
    return newurl;
}
window.toggleQueryComponent = toggleQueryComponent;
function urlToggleQuery(query, altQuery=null) {
    var url = buffer.URL;
    content.window.location = toggleQueryComponent(url, query, altQuery);
}
window.urlToggleQuery = urlToggleQuery;

viewPageSource = function() {
    var loc = content.location;
    if (loc.protocol === 'view-source:')
        loc.href = loc.href.substring(12);
    else
        loc.href = 'view-source:' + loc.href;
}

function imgToDataUri(img) {
    var canvas = content.document.createElement("canvas");
    canvas.width = img.width;
    canvas.height = img.height;
    var ctx = canvas.getContext("2d");
    ctx.drawImage(img, 0, 0);
    var dataUri = canvas.toDataURL("image/png");
    // data only, return dataUri.replace(/^data:image\/(png|jpg);base64,/, "");
    return dataUri;
}
dactyl.utils.imgToDataUri = imgToDataUri;

popJisyoUrl = 'http://www.popjisyo.com/WebHint/AddHint.aspx?r=e';

function popJisyo(url) {
    if (!url)
        url = content.location.href;
    content.location.href = `${popJisyoUrl}&d=7&u=${encodeURIComponent(url)}`;
    var tb = gBrowser.selectedBrowser;
    function popJisyoRemoveCruft () {
        hideSelectors('#Table1', '#Table2', '.pqpControlBar');
        removeFirstSelector('hr');
        "TODO: removal not working?";
        tb.removeEventListener(popJisyoRemoveCruft);
    }
    tb.addEventListener('DOMContentLoaded', popJisyoRemoveCruft);
}

function popJisyoEtoJ(url) {
    if (!url)
        url = content.location.href;
    content.location.href = `${popJisyoUrl}&d=1&u=${encodeURIComponent(url)}`;
    var tb = gBrowser.selectedBrowser;
    function popJisyoRemoveCruft () {
        hideSelectors('#Table1', '#Table2', '.pqpControlBar');
        removeFirstSelector('hr');
        tb.removeEventListener(popJisyoRemoveCruft);
    }
    tb.addEventListener('DOMContentLoaded', popJisyoRemoveCruft);
}

function toggleHTTPS () {
    var url = content.location.href;
    var newurl;
    var sc_http  = "http://";
    var sc_https = "https://";
    if (url.indexOf(sc_http) == 0)
        newurl = url.replace(sc_http, sc_https);
    else if (url.indexOf(sc_https) == 0)
        newurl = url.replace(sc_https, sc_http);
    dactyl.open(newurl);
}

function filenameOrURL(s) {
    var text=decodeURIComponent(s.replace(/^file:\/\//,'').replace(/[?#].*/,''));
    return text;
}

function getFilenameOrURL(url=buffer.URL) {
    var text=decodeURIComponent(url.replace(/^file:\/\//,'').replace(/[?#].*/,''));
    return text;
}

function getFilenameOrUrlAsFile(url=buffer.URL) {
    var url = decodeURIComponent(url);
    if (url.match(/^https?:/)) {
        var tempf = io.system('tempfile').output;
        io.system(`curl "${url}" > ${tempf};`);
        return tempf;
    } else if (url.match(/^file:/)) {
        return url.replace(/^file:\/\//,'');
    } else if (url.match(/^[/~]/)) {
        return url;
    } else {
        utils.message('protocol not supported');
    }
}

function openUrlInEmacs(url=buffer.URL) {
    var file = getFilenameOrUrlAsFile(url);
    io.system(`emacsclient "${file}"`);
    utils.message(file);
}

function toggleFooter() {
    var footers=content.document.body.getElementsByTagName("footer");
    for (i=footers.length-1; i>=0; --i) {
        if (footers[i].style.display=="none")
            footers[i].style.display="";
        else footers[i].style.display="none";
    }
}

function removeCruft() {
    var elts = [];
    var toarray = Array.prototype.slice;
    var doc = content.document;
    var coll = doc.getElementsByTagName("header");
    if (coll) elts = elts.concat(toarray.call(coll));
    var coll = doc.getElementsByClassName("header");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("header");
    if (coll) elts.push(item);
    var coll = doc.getElementsByTagName("aside");
    if (coll) elts = elts.concat(toarray.call(coll));
    var coll = doc.getElementsByClassName("aside");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("aside");
    if (coll) elts.push(item);
    var coll = doc.getElementsByTagName("footer");
    if (coll) elts = elts.concat(toarray.call(coll));
    var coll = doc.getElementsByClassName("footer");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("footer");
    if (coll) elts.push(item);
    var coll = doc.getElementsByTagName("form");
    if (coll) elts = elts.concat(toarray.call(coll));
    var coll = doc.getElementsByClassName("topbar");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("topbar");
    if (coll) elts.push(item);
    var coll = doc.getElementsByClassName("sidebar");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("sidebar");
    if (coll) elts.push(item);
    var coll = doc.getElementsByClassName("comments");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("comments");
    var item = doc.getElementById("feed-link");
    if (coll) elts.push(item);
    if (coll) elts.push(item);
    for (i=elts.length-1; i>=0; --i) {
        if (elts[i])
            elts[i].remove();
    }
}

function removeIFrames() {
    var iframes = Array.from(content.document.getElementsByTagName('iframe'));
    iframes.forEach(f=>f.parentNode.removeChild(f));
}

function pwHash() {
    var newtab = gBrowser.addTab('file:///opt/webapps/password-hasher.html');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        var box = content.document.getElementById('master-key')
        box.value=user.mymasterpw;
        clickSelector("summary");
        var sitefield = content.document.getElementById('site-tag')
        sitefield.focus();
    });
}

function pwHashGen(s, fromtab) {
    var newtab = gBrowser.addTab('file:///opt/webapps/password-hasher.html');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        var box = content.document.getElementById('master-key')
        box.value=user.mymasterpw;
        var siteEntryBox = content.document.getElementById("site-tag");
        var noSpecial = content.document.getElementById("noSpecial");
        noSpecial.click();
        var shortPWButton = content.document.getElementById("hash-word").nextElementSibling;
        siteEntryBox.value = s;
        shortPWButton = content.document.getElementsByTagName("details")[0].getElementsByTagName("button")[0];
        shortPWButton.click();
        var pw = content.document.getElementById("hash-word").value;
        utils.yankWithMsg(pw);
        if (fromtab!==undefined)
            gBrowser.selectedTab = fromtab;
    });
}
window.pwHashGen = pwHashGen;

function pwHashDomain(s, fromtab) {
    var domain = s.replace(/^\w+:\/\//,"").replace(/\/.*/,"").replace(/www\./,"").replace(/signin\./,"").replace(/reg\./,"");
    var decodedDomain = decodeURIComponent(domain);
    pwHashGen(decodedDomain, fromtab);
}

function pwHashGenerateShortPassword(s) {
    var siteEntryBox = content.document.getElementById("site-tag");
    var shortPWButton = content.document.getElementById("hash-word").nextElementSibling;
    siteEntryBox.value = s;
    shortPWButton = click();
}

function prefsuffSearch(s) {
             var newtab = gBrowser.addTab('http://www.macroevolution.net/site-search.html')   ;
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        var entrybox = content.document.getElementsByTagName('input')[0];
        entrybox.click();
        entrybox.value = s;
        var srchBtn = content.document.getElementsByClassName('gsc-search-button gsc-search-button-v2')[0];
        srchBtn.click();
    });

}

function convertMdUrlToOrg(url) {
    if (typeof(url) == 'undefined' || !url)
        url = content.location.href;
    var regex = /\.md$|.md(?=#)/;
    var newurl = url.replace(regex, '.org');
    if (newurl !== url)
       dactyl.open(newurl);
}

function convertLastSlashToHash(url) {
    if (typeof(url) == 'undefined' || !url)
        url = content.location.href;
    var regex = /(.*)(\/)/;
    var newurl = url.replace(regex, '$1#');
    dactyl.open(newurl);
}

function wiktionaryWordToIndexPage (word)
{
    word = word.toLowerCase();
    word = word.replace(/^-*/, '');
    var page, id;

    // patched method Number.inRange
    var wordord = "".charCodeAt.bind(word);

    if (S.isAlphaAt(word, 0))    // word starts with letter
    {
        page = word[0];
        // letters split into 2 pages by second letter (a-m and n-z)
        if ("abcdmnprst".includes(word[0]))
            if (wordord(1).inRange(97, 110))          // a-m
                page += "1";
            else if (wordord(1).inRange(110, 123))    // n-z
                page += "2";

        id = word[0];
        if (S.isAlphaAt(word, 1))
            id += word[1];
    }
    else    // word starts with digit or symbol
    {
        page = "0";
        if (word.charCodeAt(1).inRange(48, 58))
            id = word(1);
        else
            id = "Symbols";
    }

    return page + "#" + id;
}

function searchKanjiDamage(s) {
    var newtab = gBrowser.addTab('http://www.kanjidamage.com');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        var box = content.document.getElementById('q')
        box.value=s;
        box.form.submit();
    });
}

function setBody(elt) {
    var body = content.document.body;
    for (i = body.children.length-1; i>=0; --i)
        body.children[i].remove();
    body.appendChild(elt);
}

function setBodyById(eltId) { setBody(content.document.getElementById(eltId)); }

function imgsAddAltTextToTitle() {
    var imgs = content.document.getElementsByTagName('img');
    var img, alt, title;
    for (i=0; i<imgs.length; ++i) {
        img = imgs[i];
        alt = img.getAttribute('alt') || '';
        title = img.getAttribute('title') || '';
        if (alt !== '') {
            if (title === '')
                img.setAttribute('title', alt);
            else
                img.setAttribute('title', title + "\nALT TEXT:\n" + alt);
        }
    }
}

function rubular(regex, test) {
    var newtab = gBrowser.addTab('http://rubular.com/');
    var tb = gBrowser.getBrowserForTab(newtab);
    function rubularCB() {
        var regexfield = content.document.getElementById("regex");
        var testfield = content.document.getElementById("test");
        regexfield.value = regex;
        testfield.value = test;
        tb.removeEventListener("DOMContentLoaded", rubularCB);
    }
    tb.addEventListener("DOMContentLoaded", rubularCB);
}

EOF

" =============================================================================
"                                       _______
"                                      |       |
"                                      | HINTS |
"                                      |_______|

set ht=a,:-moz-any-link,area,button,iframe,input:not([type=hidden]):not([disabled]),label[for],select,textarea,[onclick],[onmouseover],[onmousedown],[onmouseup],[oncommand],[tabindex],[role=link],[role=button],[contenteditable=true],a[class^=vote],a[class^=speed],svg,div.ita-hwt-candidate,.preference>li,div.toggle-product-line

" Show extended hints modes
command! listhintmodes :echo hints.modes

set eht=[asOTvVWy]:'a',':-moz-any-link','area[href]','img[src]','iframe[src]'
set eht+=[iI]:img
set eht+=[A]:'[id]','a[name]'
set eht+=[f]:body
set eht+=[F]:body,code,div,html,p,pre,span
set eht+=[S]:'input:not([type=hidden])',textarea,button,select
" set eht=[iI]:img,[asOTvVWy]:'a',':-moz-any-link','area[href]','img[src]','iframe[src]',[A]:'[id]','a[name]',[f]:body,[F]:body,code,div,html,p,pre,span,[S]:'input:not([type=hidden])',textarea,button,select
js hints.addMode('m','mouseover',utils.simulateMouseover);

set eht+='[ ]':a,img,':-moz-any-link'
js <<EOF
hints.addMode(
    ' ', 'Click in new tab',
    e=>{
        altT = tabs.alternate;
        tabCopyLeftBg();
        e.click();
        tabSelectLeft();
    }
);
EOF

set eht+=[d]:'a',':-moz-any-link','area[href]','img[src]','iframe[src]'
js <<EOF
hints.addMode(
    'd',
    'Yank hint description and save from command line',
    e => {
        editor.setRegister(null, e.textContent, true);
        buffer.saveLink(e, false);
    }
);
EOF

" Search for link text "
set eht+=[pP]:'a',':-moz-any-link','area[href]','img[src]','iframe[src]'
js function search(s, opts={}) { dactyl.open('http://www.google.com/search?q='+s, opts); }
js hints.addMode('p','Search for link text', e=>search(e.innerText, {where: 'tab'}))
js hints.addMode('P','Search for link text', e=>search(e.innerText, {where: 'here'}))

" remove structural elements
set eht+=[x]:div,iframe,header,footer,aside,form,'input:not([type=hidden])',textarea,img,ul,ol
js hints.addMode('x','Remove element', e=>e.remove());
" remove headings, paragraphs, items "
set eht+=[X]:h1,h2,h3,h4,h5,h6,p,tr,li,pre
js hints.addMode('X','Remove element', e=>e.remove());
set eht+=[0]:div,iframe
js hints.addMode('0','make div invisible', utils.undisplay);

" replace ;t with function for ;b (open in background)
js hints.addMode("t", "Follow hint in a background tab", elem => buffer.followLink(elem, dactyl.NEW_BACKGROUND_TAB))
set eht+=[e]:'a',':-moz-any-link'
js hints.addMode('e', 'open in emacs', elem => dactyl.execute('!emacsclient "' + filenameOrURL(elem.href) + '"'));
" Show node (popup)"
set eht+=[`]:'a',':-moz-any-link',div,iframe,header,footer,aside,form,table,h1,h2,h3,h4,p,ul,ol,dl,img,textarea,pre,code,'input:not([type=hidden])'
js hints.addMode('`','show node (popup)', e => alert(e.innerHTML || e));
" Get node "
set eht+=[1]:'a',':-moz-any-link',div,iframe,header,footer,aside,form,table,h1,h2,h3,h4,p,ul,ol,dl,img,textarea,pre,code,'input:not([type=hidden])'
js hints.addMode('1','get node', e => dactyl.stored_node=e);
" Get selectors (uses Stylish functions) "
set eht+=[2]:'a',':-moz-any-link',div,iframe,header,footer,aside,form,table,h1,h2,h3,h4,p,ul,ol,dl,img,textarea,pre,code,'input:not([type=hidden])'
js hints.addMode('2','get selectors', e => dactyl.stored_result = stylishCommon.generateSelectors(e));

" inspect in Firebug
set eht+=[\.]:'a',':-moz-any-link',div,iframe,header,footer,aside,form,table,h1,h2,h3,h4,p,ul,ol,dl,img,textarea,pre,code,'input:not([type=hidden])'
js hints.addMode('\.','inspect in Firebug', e => Firebug.Inspector.inspectFromContextMenu(e));
" open link with wayback
set eht+=[\]:'a',':-moz-any-link'
js hints.addMode('\\', 'wayback open link in new tab', elem=>{ dactyl.open(`http://web.archive.org/web/${elem.href}`, {where:dactyl.NEW_TAB}) })

" svg: FIXME
runtime! js/libs/svg-pan-zoom.min.js
set eht+=[G]:svg
js hints.addMode('G','pan & zoom SVG',alert);
" openseadragon: image zoom and pan "
set eht+=[m]:img
js hints.addMode('m','pan & zoom img', elem=>{ dactyl.open(`http://openseadragon.github.io/openseadragonizer/?img=${elem.src.replace(/(\?|#).*/,'')}&encoded=true`, { where: dactyl.NEW_TAB }) });

" kanji "
set eht+=[kK]:div.concept_light-representation>span.text
js <<EOF
hints.addMode(
    'k','open kanji details in new tab',
    e => dactyl.open(dec(`http://jisho.org/search/${e.textContent.trim()}%2523kanji`), {where:'tab'}));
hints.addMode(
    'K','open kanji details',
    e => dactyl.open(dec(`http://jisho.org/search/${e.textContent.trim()}%2523kanji`), {where:'here'}));
EOF

" --------------- "
" Non-Ascii Hints "
" --------------- "
" These can actually be triggered normally (eg. via ;ä) if the character is entered using the compose key, IME, etc. "
" However, they are intended to be activated by another binding using hints.open().                                  "
" eg.  map <binding> -js hints.open('ä')                                                                             "

" Completion list divider [HACK] - separates ascii from non-ascii hints (uses dummy hint modes) "
js hints.addMode('', '', e=>utils.message(e));
js hints.addMode('', '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━',
\                e=>utils.message(e));
js hints.addMode(' ', '', e=>utils.message(e));           "no-break space 00A0"

" ======= "
" General "
" ======= "
set eht+=[🄿]:div,section,ol,ul,table,frame,iframe,img,h1,h2,h3,h4,input,'xpath:div/p'
js hints.addMode('🄿','lmnpop',elem => { lmnpop(elem); });

" =======
" Images
" =======
set eht+=[ἱ]:img
js hints.addMode('ἱ', 'View/follow image', elem => dactyl.open(getImageUrl(elem)));

" Background Images "
set eht+=[ι]:a,div,span,header,footer,aside,p,h1,h2
js <<EOF
hints.addMode(
    'ι','view background-image [SLOW!!]',
    e => {
        var bi = getStyleProperty(e, "background-image");
        var url = bi.match(/url\("(.*)"\)/)[1];
        dactyl.open(url);
    },
    e => getBackgroundImages().includes(e)
);
EOF

" =====                                                          "
" Kanji                                                          "
" =====                                                          "
" .w-kanji             -- rikaisama                              "
" .furigana+span.text  -- jisho result term with kanji           "
" .furigana+.unlinked  -- jisho term in examples with kanji      "
" .character.literal>a -- jisho kanji link on right              "
" .break-unit          -- jisho 'other forms'                    "
" .ja-text             -- japanese.stackexchange kanji/kana term "
" .t_nihongo_kanji     -- wikia span class                       "
" #japanese-name       -- wikia with support GM script           "
set eht+=[字カ]:'.w-kanji,.furigana+span.text,.furigana+.unlinked,.character.literal>a,rb,.ja-text,.break-unit,.t_nihongo_kanji,span[lang=ja],#japanese-name'
js hints.addMode('字', 'copy kanji', elem=>utils.yankWithMsg(elem.innerText));
js hints.addMode('カ', 'send kanji to callback stored in _dactylargs', e=>window._dactylargs[0](e.innerText));

" copy link url to dactylresult "
set eht+=[ȧ]:'a',':-moz-any-link','area[href]','img[src]','iframe[src]'
js hints.addMode("ȧ", "Copy href to dactylresult", e=>{ window.dactylresult = e.href; });

" bold links: mode ä "
set eht+=[ä]:a>strong,a>b
js hints.addMode("ä", "Follow bold link", elem => buffer.followLink(elem, dactyl.CURRENT_TAB));

" open in chrome "
set eht+=[🄒]:'a',':-moz-any-link',div,iframe,header,footer,aside,form,table,h1,h2,h3,h4,p,ul,ol,dl,img,textarea,pre,code,'input:not([type=hidden])'
js hints.addMode("🄒", "Open link in Chrome", e => dactyl.execute('ochromeurl '+e.href));

" === SITE-SPECIFIC === "
" JSBin: "
"    ï - menus"
" coursera: "
"    ẖ - jump to match in transcript "
" fasttech: "
"    🅵 - move to wish list "
" about:newtab "
"    ņ - follow link "
"    Ņ - follow link (background tab) "
"    ɳ - click button "

" Copy text "
set eht+=[ÿ]:h1,h2,h3,h4,h5,h6,p,tr,pre,ul,ol,li
js hints.addMode("ÿ", "Copy paragraph", elem => utils.yankWithMsg(elem.innerText));

" Translate text "
" ( .ReviewContent, .ProsConsContent - fasttech reviews ) "
" ( .info - banggood reviews ) "
set eht+=[ţ]:h1,h2,h3,h4,h5,h6,p,li,tr,dd,pre,.ReviewContent,.ProsConsContent
js hints.addMode("ţ", "Translate paragraph", elem => googleTranslateText(elem.innerText));
set eht+=[Ţ]:div,code,pre,table,input,.ReviewContent,.ProsConsContent,.info
js hints.addMode("Ţ", "Translate element", elem => googleTranslateText(elem.innerText));
set eht+=[ʈ]:h1,h2,h3,h4,h5,h6,p,li,tr,dd,pre,.ReviewContent,.ProsConsContent
js hints.addMode("ʈ", "Insert translation", googleInsertTranslationForElement);
set eht+=[Ʈ]:div,code,pre,table,input,.ReviewContent,.ProsConsContent,.info
js hints.addMode("Ʈ", "Insert translation (div)", googleInsertTranslationForElement);

" Copy Table Columns "
set eht+=[ŧ]:table
set eht+=[Ŧ]:table
js hints.addMode("ŧ", "Copy Table Columns", copySpecifiedTableColumns);
" - ignore rows with too few cells "
js hints.addMode("Ŧ", "Copy Table Columns", e=>copySpecifiedTableColumns(e, true));
" Filter Table Rows "
set eht+=[Ⓣ]:table
js hints.addMode("Ⓣ", "Filter Table Rows", e=>tableFilterRows(e, eval(window._dactylargs[0])));

" Copy post "
" .post - wetcanvas.com "
" .answer - stackexchange sites "
set eht+=Π:.post,.answer
js <<EOF
function copyTextContent(e) {
   var t = e.textContent.trim().replace(/(\s*\n\s*)(\s*\n\s*)+/g, "\n\n");
    utils.cbWriteWithMessageLimit(t);
}

hints.addMode(
    "Π",
    "Yank post",
    e => copyTextContent(e)
);
EOF

" Inches to Cm "
js <<EOF
function convertInchesToCm(elt) {
    elt.innerText = subCmForInches(elt.innerText);
}
window.convertInchesToCm = convertInchesToCm;
EOF
set eht+=[”]:h1,h2,h3,h4,h5,h6,p,li,td,dd,pre,.ReviewContent,.ProsConsContent
js hints.addMode("”", "Convert Inches to centimeters", convertInchesToCm);

map <yank_desc> ;Y

" -----------------------------------------------------------------------------
" ,----------,
" | hinttags |
" '----------'
"
set hinttags+='svg'
" Add hints for anchor elements whose class attribute starts with "vote":
set hinttags+=a[class^='vote']
set hinttags+=a[class^='speed']

" -----------------------------------------------------------------------------
" ,------------------,
" | extendedhinttags |
" '------------------'
"
" FIXME: can't activate context menu on 'body' hint
":set eht+=[c]:body,'a',':-moz-any-link',area,button,iframe,input:not([type=hidden]),label[for],select,textarea,[onclick],[onmouseover],[onmousedown],[onmouseup],[oncommand],[tabindex],[role=link],[role=button],[contenteditable=true]

" -----------------------------------------------------------------------------
" ,-------------------,
" | Styling for hints |
" '-------------------'
"
set hintkeys="jkl;fdsahgnvurieow"
"
highlight Hint
    \ font-family: "Droid Sans Mono Slashed";
    \ line-height: 10pt;
    \ text-shadow: 1px 1px 1px #888;
    \ padding: 3px 3px 3px;
    \ font-size: 12pt;
    \ font-weight: bold;
    \ text-transform: uppercase;
    \ color: rgb(91, 58, 26);
    \ background-color: rgba(255, 255, 255, 0.45) !important;
    \ border-radius: 5px;
" HintImage: ?
highlight HintImage
    \ background-color: rgba(255, 0, 255, 1) !important;
    \ border-radius: 5px;
" HintElem: styling for elements when hinted
highlight HintElem
    \ border-radius: 2px;
" HintActive: styling for active element when hinted
highlight -a HintActive
    \ background-color: rgba(255, 255, 255, 0.1) !important;
    \ color: blue !important;
    \ border-style: dashed;
    \ border-color: rgba(255, 0, 0, 0.4);
    \ border-width: 1px;
    \ border-radius: 2px;
" Hint[Active]: styling for hint on active element
highlight -a Hint[Active]
    \ background-color: rgba(255, 255, 0, 0.4) !important;
    \ color: rgb(91, 58, 26);
    \ border-style: solid;
    \ border-color: rgb(91, 58, 26);


" =============================================================================
"                                   _______________
"                                  |               |
"                                  | SITE SPECIFIC |
"                                  |_______________|

" -----------------------------------------------------------------------------
" ,----------,
" | about: * |
" '----------'
group about -locations=chrome:*,about:addons,about:config,about:cache,about:debugging,about:downloads,about:performance,about:plugins,about:support

map j        -b <C-v><Down>
map k        -b <C-v><Up>
"
map J        -b <C-v><PageDown>
map K        -b <C-v><PageUp>
map <C-d>    -b <C-v><PageDown>
map <C-u>    -b <C-v><PageUp>
map gg       -b <C-v><Home>
map G        -b <C-v><End>
map <Return> -b <C-v><Return>

group user

" ,--------,
" | places |
" '--------'
group places -locations=chrome://browser/content/places/places.xul
map <site>f<C-h> -description "(show bindings)" -js CommandExMode().open("showkeys <site>f")
map <site>f      -description "(show bindings)" -js CommandExMode().open("showkeys <site>f")
map <site>s<C-h> -description "(show bindings)" -js CommandExMode().open("showkeys <site>s")
map <site>s      -description "(show bindings)" -js CommandExMode().open("showkeys <site>s")

map <site>b   -description "Open in background tab"  -js placesOpenInBackground();
map <site>c   -description "Focus Left Panel"        <Escape>gi<Tab>
map <site>f/  -description "Focus search input"      -js placesFocusSearch();
map <site>fn  -description "Focus name input"        -js placesFocusName();
map <site>fl  -description "Focus location input"    -js placesFocusLocation();
map <site>ft  -description "Focus tags input"        -js placesFocusTags();
map <site>fk  -description "Focus keyword input"     -js placesFocusKeyword();
map <site>fd  -description "Focus description input" -js placesFocusDescription();
map <site>i   -description "Toggle info box"         -js placesToggleInfobox();
map <site>oh  -description "Open history"            gi<Tab><C-v><Home><Right><Right><Up><Up><Right><Right>
map <site>so  -description "Sort by none"            -js placesSortByNone();
map <site>sn  -description "Sort by name"            -js placesSortByName();
map <site>sk  -description "Sort by keyword"         -js placesSortByKeyword();
map <site>st  -description "Sort by tags"            -js placesSortByTags();
map <site>sl  -description "Sort by location"        -js placesSortByLocation();
map <site>sa  -description "Sort by date added"      -js placesSortByDateAdded();
map <site>sp  -description "Sort by path"            -js placesSortByPath();
map <site>sm  -description "Sort by last modified"   -js placesSortByLastModified();
map <site>v   -description "Focus Right Panel"       <Escape>gi<Tab><Tab>
map <site>y   -description "Yank Location"           -js placesCopyLocation();
map H -b <C-v><Left>
map L -b <C-v><Right>

js <<EOF

function placesGetLocation() {
    var placesView = content.document.getElementById('placesView');
    var url = placesView.querySelector('#editBMPanel_locationField').value;
    return url;
}
window.placesGetLocation = placesGetLocation;

function placesCopyLocation() {
    utils.yankWithMsg(placesGetLocation());
}

function placesOpenInBackground() {
    var url = placesGetLocation();
    " for some reason, dactyl.open(url, {where: dactyl.NEW_BACKGROUND_TAB}) isn't working "
    dactyl.execute('background tabopen ' + placesGetLocation());
}

function placesToggleInfobox() {
    content.document.getElementById('infoBoxExpander').click();
}

function placesFocusName() {
    content.document.getElementById('editBMPanel_namePicker').focus();
}

function placesFocusSearch() {
    content.document.getElementById('searchFilter').focus();
}
function placesFocusLocation() {
    content.document.getElementById('editBMPanel_locationField').focus();
}
function placesFocusTags() {
    content.document.getElementById('editBMPanel_tagsField').focus();
}
function placesFocusKeyword() {
    content.document.getElementById('editBMPanel_keywordField').focus();
}
function placesFocusDescription() {
    content.document.getElementById('editBMPanel_descriptionField').focus();
}

function placesSortByNone() {
    content.document.getElementById('viewUnsorted').click();
}
function placesSortByName() {
    content.document.getElementById('placesContentTitle').click();
}
function placesSortByKeyword() {
    content.document.getElementById('placesContentKeyword').click();
}
function placesSortByTags() {
    content.document.getElementById('placesContentTags').click();
}
function placesSortByLocation() {
    content.document.getElementById('placesContentUrl').click();
}
function placesSortByDateAdded() {
    content.document.getElementById('placesContentDateAdded').click();
}
function placesSortByPath() {
    content.document.getElementById('placesContentParentFolderPath').click();
}
function placesSortByLastModified() {
    content.document.getElementById('placesContentLastModified').click();
}

EOF


group user


" -------------------------------------------------------------------------------
" ,--------------,
" | About:addons |
" '--------------'
group aboutaddons -locations=about:addons

js <<EOF

function addonsGet() {
    var getAddonsButton = content.document.getElementById("category-discover");
    getAddonsButton.click();
}

function addonsClickCategory(category) {
    var getButton = content.document.getElementById(category);
    getButton.click();
}

EOF

command! addonsget        -js addonsClickCategory("category-discover");
command! addonsextension  -js addonsClickCategory("category-extension");
command! addonsuserscript -js addonsClickCategory("category-greasemonkey-user-script");
command! addonsuserstyle  -js addonsClickCategory("category-userstyle");
command! addonsappearance -js addonsClickCategory("category-theme");
command! addonsplugin     -js addonsClickCategory("category-plugin");
command! addonsservice    -js addonsClickCategory("category-service");
map <site>a -js addonsClickCategory("category-discover");
map <site>e -js addonsClickCategory("category-extension");
map <site>u -js addonsClickCategory("category-greasemonkey-user-script");
map <site>U -js addonsClickCategory("category-userstyle");
map <site>t -js addonsClickCategory("category-theme");
map <site>p -js addonsClickCategory("category-plugin");
map <site>s -js addonsClickCategory("category-service");

group user

" -------------------------------------------------------------------------------
" ,--------------,
" | about:newtab |
" '--------------'
group aboutnewtab -locations=about:newtab

" === hint modes === "
" links "
set eht+=ņ:.newtab-link
js hints.addMode("ņ", "Follow link", e=>e.click());
set eht+=Ņ:.newtab-link
js hints.addMode("Ņ", "Follow link in background tab", elem => buffer.followLink(elem, dactyl.BACKGROUND_TAB));
" buttons "
set eht+=ɳ:.newtab-control
js hints.addMode("ɳ", "Click new tab control", e=>e.click());

:if isPalemoon
    style -name=newtabstyle about:newtab
    \     .newtab-title {
    \         background: #eeeeff !important;
    \         border: solid #42428D 1px;
    \         border-radius: 15px;
    \         margin: 5px;
    \         text-align: center;
    \     }
    \     div.newtab-cell, div.newtab-site, a.newtab-link, span.newtab-thumbnail {
    \         border: 1px solid #;
    \         border-radius: 18px !important;
    \     }
    \     a {
    \         border-radius: 18px !important;
    \     }
    styleenable about:newtab newtabstyle
:endif

:if isWaterfox
    style -name=newtabstyle about:newtab
    \     span.newtab-title {
    \         color: #005500 !important;
    \     }
    styleenable about:newtab newtabstyle
:endif

style -name=newtab-selectionstyle about:newtab
\     a:focus {
\         border: solid #7B4F7B 3px !important; border-radius: 3px !important; font-weight: bold !important;
\     }
styleenable about:newtab newtab-selectionstyle

map f -description "Follow link" -js hints.show('ņ');
map F -description "Follow link in background tab" -js hints.show('Ņ');
map gf -description "Follow multiple links in background tabs" g;Ņ
map <site>b -description "Toggle selection border"  -ex styletoggle -name newtab-selectionstyle
map <site>c -description "Click control buttons (pin, remove)" -js hints.show('ɳ');
map <site>s -description "Toggle custom styles"
\    -ex styletoggle -group aboutnewtab -name newtabstyle |
\        styletoggle -group aboutnewtab -name newtab-selectionstyle

group user
" -------------------------------------------------------------------------------
" ,-------------------,
" | about:preferences |
" '-------------------'
group aboutpreferences -locations=about:preferences,about:preferences#*

map <site>z <pass-all-keys>

command! aprefsgeneral      -js clickSelector("#category-general");
command! aprefssearch       -js clickSelector("#category-search");
command! aprefscontent      -js clickSelector("#category-content");
command! aprefsapplications -js clickSelector("#category-application");
command! aprefsprivacy      -js clickSelector("#category-privacy");
command! aprefssecurity     -js clickSelector("#category-security");
command! aprefssync         -js clickSelector("#category-sync");
command! aprefsadvanced     -js clickSelector("#category-advanced");
map <site>g -ex aprefsgeneral
map <site>/ -ex aprefssearch
map <site>c -ex aprefscontent
map <site>a -ex aprefsapplications
map <site>p -ex aprefsprivacy
map <site>s -ex aprefssecurity
map <site>y -ex aprefssync
map <site>v -ex aprefsadvanced

group user

" -------------------------------------------------------------------------------
" ,--------------------,
" | Addons.Mozilla.org |
" '--------------------'
group ffaddons -locations=addons.mozilla.org

map <site>a
\ -description "Show Download Anyway buttons"
\ -js Array.from(content.document.getElementsByClassName('download-anyway')).map(e=>e.style.display="block");
map <site>c -description "Download XPI" -js ffaddonDlToDir();
map <site>i -description "Install XPI" -js ffaddonInstall();
map <site>v -description "Show all versions" -js clickSelector('.AddonMoreInfo-version-history-link');
map <site>b -description "Show beta versions" -js clickSelector('..AddonMoreInfo-beta-versions-link');

js <<EOF
function ffaddonDlToDir(dir="/opt/ff-addons/") {
    var btn = content.document.querySelector('.InstallButton-button');
    var url = btn.getAttribute('href');
    dactyl.execute(`!(cd ${dir} && wget '${url}')`);
}

function ffaddonInstall(dir="/opt/ff-addons/") {
    var btn = content.document.querySelector('.InstallButton-button');
    var url = btn.getAttribute('href');
    dactyl.execute(`open ${url}`);
}
EOF

group user

" -------------------------------------------------------------------------------
" ,-------------------,
" | AlternativeTo.net |
" '-------------------'
group altnet -locations=alternativeto.net

js <<EOF
function altnetGetAlternatives() { return Array.from(content.document.querySelectorAll('.app-list-item h3>a')); }
function altnetCompletions() {
    return altnetGetAlternatives().map(
        e => [ decodeURIComponent(S.padEnd(e.innerText, 60, "…") + e.href.replace(/[^#]+#/, "")), "" ]
    );
}
function altnetGetOfficialWebsite(altnetPageURL) {
    return io.system(`curl -s ${altnetPageURL} | pup ".icon-official-website attr{href}"`).output;
}
function altnetcleanup() {
    removeSelectors('iframe', 'ins');
}
EOF

" === hint modes === "
set eht+=α:'.app-list-item h3>a'
js <<EOF
hints.addMode(
    "α",
    "Open official website [HINTS]",
    e => dactyl.open(altnetGetOfficialWebsite(e.href), {where: dactyl.NEW_TAB})
);
EOF

command! altnetcleanup -description "Remove cruft" removeselector iframe ins
command! altnetopen -description "Open application page"
\   -nargs=1
\   -complete custom,' (context) => {context.completions = altnetCompletions()}'
\   -js content.window.location = args[0].replace(/.*…+/, '');
command! altnettabopen -description "Open (or switch to) application page in another tab"
\   -nargs=1
\   -complete custom,' (context) => {context.completions = altnetCompletions()}'
\   -count -js openOrSelectTab(altnetGetOfficialWebsite(args[0].replace(/.*…+/, "")), count?"here":"tab");
command! altnetyankofficialwebsite -description "Yank URL of official website for application"
\   -nargs=1
\   -complete custom,' (context) => {context.completions = altnetCompletions()}'
\   -js utils.cbWrite(altnetGetOfficialWebsite(args[0].replace(/.*…+/, "")));

map <site>c  -description "Goto Official Website"
\            -js content.document.querySelector('.icon-official-website').click();
map <site>f  -description "Open official website [HINTS]" -js hints.show("α");
map <site>o  -description "Open (or switch to) application page in another tab" -b :altnettabopen<Space>
map <site>O  -description "Open application page" -b :altnetopen<Space>
map <site>to -description "Toggle open source" -js urlToggleQuery("license=opensource");
map <site>tl -description "Toggle Linux" -js urlToggleQuery("platform=linux");
map <site>yo -description "Yank URL of official website for application" -b :altnetyankofficialwebsite<Space>
map <site>z  -description "Remove cruft" -ex altnetcleanup

group user

" -------------------------------------------------------------------------------
" ,------------,
" | Amazon.com |
" '------------'
group amazon -locations=amazon.com,amazon.com.au,amazon.co.uk

js <<EOF
function amazonGetUrlParts(url) {
    url = url || buffer.URL;
    var regex = /https:\/\/([^./]+\.)*amazon\.com(\.[^./]+)?(\/.*)?/;
    return url.match(regex);
}
function amazonGetPrefix(url) {
    url = url || buffer.URL;
    var parts = S.arrayWithEmptyStringDefault(amazonGetUrlParts());
    return `https://${parts[1]}amazon.com${parts[2]}`;
}
function amazonNextPage() {
    var l = content.document.getElementById("pagnNextLink");
    if (l) l.click();
    else dactyl.execute("feedkeys <pass-next-key-builtin>]]");
}
function amazonPreviousPage() {
    var l = content.document.getElementById("pagnPrevLink");
    if (l) l.click();
    else dactyl.execute("feedkeys <pass-next-key-builtin>[[");
}
function amazonIsAU(url) {
    url = url || buffer.URL;
    return amazonGetUrlParts(url)[2] == ".au";
}
function amazonWishlistUrl(url) {
    if (amazonIsAU(url))
        return "https://www.amazon.com.au/hz/wishlist/ls/92B2XGWP5PC9?sort=default";
    else
        return "https://smile.amazon.com/gp/registry/wishlist/16ODAURM1G5HA/ref=nav_wishlist_lists_1";
}

function amazonGo() {
    url = buffer.URL;
    var elt;
    if (url.match(/https:\/\/[^.]+\.amazon\.com(\.[^.]+)?\/gp\/cart\//)) {
        getSelectorWithMatchingAttribute("input.a-button-input", "name", "proceedToCheckout")[0].click();
    } else if (
        (elt = content.document.querySelector("#buybox-see-all-buying-choices-announce")) ||
        (elt = content.document.querySelector("#add-to-cart-button"))
    ) elt.click();
}

function amazonGotoUSReviews() {
    if (buffer.URL.match(/amazon.com\//))
        var link = content.document.getElementById("dp-summary-see-all-reviews");
    else {
        var link = getFirstSelectorWithMatchingAttribute("a", "data-hook", "cmps-expand-link") ||
                   getFirstSelectorWithMatchingAttribute("a", "data-hook", "cmps-collapse-link");
    }
    if (link) {
        link.click();
        return link.href;
    }
}

function amazonCount() {
    if (buffer.URL.match(/\/gp\/cart\//)) {
        var form = content.document.getElementById('activeCartViewForm');
        var entries = Array.from(form.querySelectorAll('.a-dropdown-prompt'));
        var quantities = entries.map(e=>parseInt(e.innerText));
        return quantities.reduce((n,c)=>n+c);
    } else if (buffer.URL.match(/\/gp\/buy\//)) {
        var div = content.document.getElementById('spc-orders');
        var entries = Array.from(div.querySelectorAll('input'));
        var filtered = entries.filter(e=>e.name="groupcount" && e.type == "number");
        var quantities = filtered.map(e=>parseInt(e.value));
        return quantities.reduce((n,c)=>n+c);
    }
}

EOF

map <site>c
\    -description "Click button: Add to cart, See all buying options, Proceed to checkout"
\    -js amazonGo();
map <site>i -description "(Show bindings: Images)"  -js CommandExMode().open("showkeys <site>i")
map <site>iv
\    -description "View image"
\    -js openOrSelectTab(getFirstSelector(".imageElement").src, count?"tab":"here");
map <site>n -description "Count items" -js utils.message("Number of items: " + amazonCount());
map <site>o  -js CommandExMode().open("showkeys <site>o")
map <site>oc
\    -description "Goto cart"
\    -js openOrSelectTab(amazonGetPrefix()+"/gp/cart/view.html/ref=nav_cart", count?"tab":"here", null, true);
map <site>oi
\    -description "Scroll to Product Information"
\    -js content.document.getElementById('prodDetails').scrollIntoView();
map <site>ok
\    -description "Scroll to Related Products"
\    -js clickSelectorByText('.a-carousel-heading','Customers who viewed this item also viewed');
map <site>ol
\    -description "Goto lists"
\    -js openOrSelectTab(amazonGetPrefix()+"/gp/registry/wishlist/ref=cm_wl_your_lists", count?"tab":"here");
map <site>oo
\    -description "Goto orders"
\    -js openOrSelectTab(amazonGetPrefix()+"/gp/css/order-history/ref=nav_nav_orders_first", count?"tab":"here");
map <site>or -description "Goto reviews" -js content.document.getElementById("customerReviews").scrollIntoView();
map <site>oR
\    -description "Goto reviews - all"
\    -js ( content.document.getElementById("dp-summary-see-all-reviews") ||
\          getSelectorWithMatchingAttribute("a", "data-hook", "cmps-expand-link")[0] ).click();
map <site>o;r
\    -description "Goto US reviews"
\    -js amazonGotoUSReviews();
map <site>ow
\    -description "Goto wish list"
\    -js openOrSelectTab(amazonWishlistUrl(), count?"tab":"here");
map <site>o!
\    -description "Goto contact form"
\    -js openOrSelectTab(amazonGetPrefix()+"/gp/help/customer/contact-us/ref=cu_surl", count?"tab":"here");
map <site>ta
\    -description "Toggle Australian site"
\    -js toggleUrl('www.amazon.com.au', /(www|smile)\.amazon\.com/, 'www.amazon.com.au', 'smile.amazon.com');
map <site>tg -description "Toggle 'Amazon Global' checkbox" -js amazonGetCheckbox(/amazon global/i).click();
map <site>tn -description "Toggle 'new' checkbox" -js amazonGetCheckbox(/new/i).click();
map <site>to -description "Toggle 'Include out of stock' checkbox"
\    -js amazonGetCheckbox(/include out of stock/i).click();
map <site>tp -description "Toggle 'prime' checkbox" -js amazonGetCheckbox(/prime/i).click();
map <site>ts -description "Toggle 'Ship to Australia' checkbox"
\    -js amazonGetCheckbox(/ship to australia/i).click();
map <site>t4 -description "Toggle 4+-stars"
\    -js clickSelector(".a-star-medium-4");
map <site>w -description "Wish list"
\    -js clickSelector("#add-to-wishlist-button-submit");
map <site>yy -description "Yank title" -js utils.cbWrite(getFirstSelector("#productTitle").textContent.trim());
map <site><esc> -description "Close popup"
\    -js clickSelector(".a-button-close");

map [[ -js clickSelectorByText("a", "← *Previous");
map ]] -js clickSelectorByText("a", "Next *→");

group user

" -------------------------------------------------------------------------------
" ,-------------------,
" | AnimatedKnots.com |
" '-------------------'
group animatedknots -locations=animatedknots.com

set passkeys+='https?://animatedknots.com/.*':'<left><right>'

command! aknotadjust -js animKnotsAdjustments();
autocmd DOMload animatedknots.com :aknotadjust

map <site>c -ex aknotadjust
map <site>h -js animKnotsShowInstructions();

js <<EOF

function animKnotsGoToFrame(n) {
    dactyl.open(`javascript:picMouseOver(${n})`);
}

function animKnotsRemoveAds() {
    removeSelectors('.tl-ad-tag');
}

function animKnotsShowInstructions() {
    var instructDiv = content.document.querySelector('#TheKnotDescription');
    var instructions = instructDiv.innerText;
    alert(instructions);
}

function animKnotsHideInstructions() { hideSelectors('#TheKnotDescription', 'div.tablecenter.Cell6'); }

function animKnotsRemoveAds() {
    "Remove large ad"
    removeSelectors('.borderstopbottom', '#ad_unit', '.tl-ad-tag');
    "Remove banner ad iframes"
    removeSelectors('iframe');
}

function animKnotsMakeHeaderScrollable() {
    var header = content.document.querySelector('body>div:first-of-type');
    header.style.position = 'static';
    var divider = content.document.querySelector('body>div:first-of-type>hr:first-of-type');
    divider.style.position = 'static';
}

function animKnotsAdjustments() {
    animKnotsMakeHeaderScrollable();
    animKnotsHideInstructions();
    animKnotsRemoveAds();
}

EOF


group user

" -------------------------------------------------------------------------------
" ,-------,
" | AniDB |
" '-------'

group anidb -locations=anidb.net

js <<EOF
function anidbRemoveNonEnglishGroups() {
    var groupTable = content.document.querySelector("#grouplist");
    var langCells = Array.from(groupTable.querySelectorAll(".languages"));
    var langCellsNonEnglish = langCells.filter(td=>!td.textContent.match(/en/));
    langCellsNonEnglish.forEach(td=>td.parentElement.remove());
}
EOF

map <site>gg
\    -description "Groups: jump to table"
\    -js content.document.querySelector(".g_section.groups").scrollIntoView();
map <site>ge
\    -description "Groups: Remove non-english rows"
\    -js anidbRemoveNonEnglishGroups();

group user

" -----------------------------------------------------------------------------
" ,-----------------,
" | AnimeLyrics.com |
" '-----------------'
group animelyrics -locations=animelyrics.com

" Go to "Print view with kanji" if it exists, or else "Print view"
map <site>P -b <C-v>'Print<Space>view<f3><CR>

group user

" -----------------------------------------------------------------------------
" ,-------------,
" | Archive.org |
" '-------------'

js <<EOF
function waybackToggle(opts={}) {
    var url = content.location.href.toLowerCase();
    var waybackRegex = /https?:\/\/web\.archive\.org\/web\/(\d+)(id_)?\/(.*)/;
    var match = waybackRegex.exec(url);
    if (match) {
        dactyl.open(match[3], opts);
    }
    else {
        dactyl.open(`http://web.archive.org/web/${url}`, opts);
    }
}
EOF

command! waybacktoggle
    \ -bang
    \ -description "Toggle web page and archive.org copy"
    \ -js bang ? waybackToggle({where: dactyl.NEW_TAB}) : waybackToggle()
map <app>w -ex waybacktoggle

" ===== GROUP START =====

group wayback -locations=web.archive.org

map <site>t -ex waybacktoggletoolbar
map <site>T -js waybackToggleToolbarUrl();

" Wayback Toolbar Go To Previous Capture:
" ( Searches for a year (starting with '20' using FF link search,
"   then tabs backwards twice to land on back link and activates )
map <site>b -b <C-v>'20<S-Tab><S-Tab><CR>
map <site>b -js waybackPrevious();
map <site>f -js waybackNext();

command! waybacktoggletoolbar
    \ -bang
    \ -description "Hides/shows Wayback Machine toolbar. With [!], toggles between regular and no-toolbar URLs"
    \ -js bang ? waybackToggleToolbarUrl() : waybackToggleToolbar();

js <<EOF

function waybackToggleToolbar() {
    var url = content.location.href
    var waybackRegex = /(https?:\/\/web\.archive\.org\/web\/\d+)(id_)?(\/.*)/;
    var match = waybackRegex.exec(url);
    if (match[2]) {
        dactyl.open(match[1] + match[3]);
    }
    else {
        var toolbar = content.document.getElementById("wm-ipp");
        if (toolbar.style.display == "none")
            toolbar.style.display = "block";
        else
            toolbar.style.display = "none";
    }
}

function waybackToggleToolbarUrl() {
    var url = content.location.href
    var waybackRegex = /(https?:\/\/web\.archive\.org\/web\/\d+)(id_)?(\/.*)/;
    var match = waybackRegex.exec(url);
    if (match[2]) {
        dactyl.open(match[1] + match[3]);
    }
    else {
        dactyl.open(match[1] + "id_" + match[3]);
    }
}

// FIXME
function waybackPrevious() {
    var link = content.document.querySelector('.b>a');
    dactyl.open(link.href, { where: 'here' });
}

function waybackNext() {
    var link = content.document.querySelector('.f>a');
    dactyl.open(link.href, { where: 'here' });
}

EOF

group user

"" -------------------------------------------------------------------------------
" ,----------------,
" | ArchLinux Wiki |
" '----------------'
group archwiki -locations=wiki.archlinux.org
autocmd! -group archwiki

map <site>c -description "Remove cruft" -js archwikiTidy();
map <site>s -description "Save file in directory" -js archwikiSavePageInDir();

js <<EOF
function archwikiTidy() {
    isolateSelector('#content');
    dactyl.execute('cssapply ".mw-body { margin-left: 0 !important; }"');
}
function archwikiSavePageInDir() {
    var name = `${buffer.title} (${getDate()})`;
    window._dactylargs = [name];
    dactyl.execute('feedkeys :saveindir<Space>');
}
EOF

group user

" -------------------------------------------------------------------------------
" ,--------------,
" | BangGood.com |
" '--------------'
group banggood -locations=banggood.com

" .preference>li allows hints for the selection boxes on the settings page "
set hinttags=:-moz-any-link,area,button,iframe,input:not([type=hidden]):not([disabled]),label[for],select,textarea,[onclick],[onmouseover],[onmousedown],[onmouseup],[oncommand],[tabindex],[role=link],[role=button],[contenteditable=true],svg,a[class^=vote],a[class^=speed],div.ita-hwt-candidate,.preference>li

" === hint modes === "
set eht+=🅱:div.item_box.attr>a
js hints.addMode("🅱", "Select attribute", e=> e.click());
map <site>a -description "Select attribute" ;🅱
map <site>A -description "Select attribute" g;🅱

js <<EOF

function bgToggleReviews() {
    var url = buffer.URL;
    var product_regex  = /https:\/\/www.banggood.com\/(.*)-p-(\d+)\.html([?#].*)?/;
    var reviews_regex  = /https:\/\/www.banggood.com\/(.*)-reviews-p(\d+)\.html([?#].*)?/;
    var q_index_regex  = /https:\/\/www.banggood.com\/(.*)-qc-p(\d+)\.html([?#].*)?/;
    var p_matches = url.match(product_regex);
    var r_matches = url.match(reviews_regex);
    var qi_matches = url.match(q_index_regex);
    if (r_matches)
        newurl = `https://www.banggood.com/${r_matches[1]}-p-${r_matches[2]}.html`;
    else if (qi_matches)
        newurl = `https://www.banggood.com/${qi_matches[1]}-p-${qi_matches[2]}.html`;
    else if (p_matches)
        newurl = `https://www.banggood.com/${p_matches[1]}-reviews-p${p_matches[2]}.html`;
    else return;
    dactyl.open(newurl);
}

function bgNextPage(n=1) {
    if (n<=0) return;
    var doc = content.document;
    var nextbutton = doc.querySelector('.page_num a .arrow_d').parentElement;
    if (nextbutton) {
        nextbutton.click();
        bgNextPage(n-1);
    } else utils.message('selector not found');
}

function bgPreviousPage(n=1) {
    if (n<=0) return;
    var doc = content.document;
    var nextbutton = doc.querySelector('.page_num a .arrow_c').parentElement;
    if (nextbutton) {
        nextbutton.click();
        bgNextPage(n-1);
    } else utils.message('selector not found');
}

function bgNextPageByURL(n=1) {
    n = n || 1;
    var url = buffer.URL;
    var search_regex = /https:\/\/www.banggood.com\/search\/([^/]+)\/([a-zA-Z0-9-]*)(_p-(\d+))?\.html/;
    var search_matches = url.match(search_regex);
    var review_regex = /https:\/\/www.banggood.com\/(.*)-reviews-p(\d+)\.html(\?page=(\d+))?$/;
    var review_matches = url.match(review_regex);
    if (search_matches) {
        var searchterm = search_matches[1];
        var searchparams = search_matches[2];
        var page_expr = search_matches[3];
        var p = page_expr ? parseInt(search_matches[4]) : 1;
        dactyl.open(`https://www.banggood.com/search/${searchterm}/${searchparams}_p-${p+n}.html`);
    } else if (review_matches) {
        var itemname = review_matches[1];
        var itemnumber = review_matches[2];
        var page_expr = review_matches[3];
        var p = page_expr ? parseInt(review_matches[4]) : 1;
        dactyl.open(`https://www.banggood.com/${itemname}-reviews-p${itemnumber}.html?page=${p+n}`);
    }
}

function bgPreviousPageByURL(n=1) {
    n = n || 1;
    var url = buffer.URL;
    var search_regex = /https:\/\/www.banggood.com\/search\/([^/]+)\/([a-zA-Z0-9-]*)(_p-(\d+))?\.html/;
    var search_matches = url.match(search_regex);
    var review_regex = /https:\/\/www.banggood.com\/(.*)-reviews-p(\d+)\.html(\?page=(\d+))?$/;
    var review_matches = url.match(review_regex);
    if (search_matches) {
        var searchterm = search_matches[1];
        var searchparams = search_matches[2];
        var page_expr = search_matches[3];
        var p = page_expr ? parseInt(search_matches[4]) : 1;
        dactyl.open(`https://www.banggood.com/search/${searchterm}/${searchparams}_p-${p+n}.html`);
        if (p-n <= 1)
            dactyl.open(`https://www.banggood.com/search/${searchterm}/${searchparams}.html`);
        else
            dactyl.open(`https://www.banggood.com/search/${searchterm}/${searchparams}_p-${p-n}.html`);
    } else if (review_matches) {
        var itemname = review_matches[1];
        var itemnumber = review_matches[2];
        var page_expr = review_matches[3];
        var p = page_expr ? parseInt(review_matches[4]) : 1;
        if (p-n <= 1)
            dactyl.open(`https://www.banggood.com/${itemname}-reviews-p${itemnumber}.html`);
        else
            dactyl.open(`https://www.banggood.com/${itemname}-reviews-p${itemnumber}.html?page=${p-n}`);
    }
}

function bgNumEntries(n=3) {
    var div = content.document.getElementsByClassName('order_show_page')[0];
    var buttons = Array.from(div.getElementsByTagName('a'));
    buttons[n-1].click();
}

function bgTogglePhotoZoom() {
    if (content.document.getElementsByClassName('module').length)
        content.document.querySelector('.good_photo_zoom>.close').click();
    else
        content.document.querySelector('.good_photo img').click();
}

function bgGetProductPhotoList() {
    var doc = content.document;
    if (content.document.getElementsByClassName('module').length) {
        return Array.from(doc.querySelectorAll('.good_photo_zoom_list>ul>li'));
    } else {
        return Array.from(doc.querySelectorAll('.good_photo_min>ul>li'));
    }
}

function bgGetNthProductPhoto(n) { return bgGetProductPhotoList()[n]; }
function bgGetNthProductPhotoRef(n) {
    return bgGetProductPhotoList()[n].firstChild.getAttribute('ref');
}
function bgGetNthProductPhotoBigRef(n) {
    return bgGetProductPhotoList()[n].firstChild.getAttribute('big');
}

function bgSelectNthProductPhoto(n) {
    var mainPhoto = content.document.querySelector('.good_photo_max img');
    mainPhoto.setAttribute('src', bgGetNthProductPhotoBigRef(n));
}

function bgAddToWishlist() { content.document.querySelector('.add_wish_btn').click(); }

function bgCloseModal() { content.document.querySelector('.module').remove(); }

EOF

command! bgnextpage -nargs=? -js bgNextPage(args[0]||1);
command! bgpreviouspage -nargs=? -js bgPreviousPage(args[0]||1);
command! bgnextpagebyurl -nargs=? -js bgNextPageByURL(args[0]||1);
command! bgpreviouspagebyurl -nargs=? -js bgPreviousPageByURL(args[0]||1);
command! bgselectproductphoto -nargs=1 -js bgSelectNthProductPhoto(args[0]);

map ]] -count -ex bgnextpage <count>
map [[ -count -ex bgpreviouspage <count>
map <site><Space> -description "Toggle reviews" -js bgToggleReviews();
map <site>c -description "Toggle photo zoom" -js bgTogglePhotoZoom();
map <site>e -description "Maximum entries per page" -js bgNumEntries();
map <site>w -description "Add to wish list" -js bgAddToWishlist();
map <site>x -description "Close modal" -js bgCloseModal();

map <site>oa -description "View account"
\    -count -ex openorselect https://www.banggood.com/index.php?com=account <count>
map <site>oc -description "View cart"
\    -count -ex openorselect https://www.banggood.com/shopping_cart_new.php <count>
map <site>og -description "View account/giftcards"
\    -count -ex openorselect https://www.banggood.com/index.php?com=account&t=giftcard <count>
map <site>ok
\    -description "(show bindings: Goto/Recommended Products)"
\    -js CommandExMode().open("showkeys <site>ok")
map <site>ok<C-h>
\    -description "(show bindings: Goto/Recommended Products)"
\    -js CommandExMode().open("showkeys <site>ok")
map <site>okb
\    -description "Goto Also Bought Products"
\    -js content.document.querySelector('.AlsoBought').scrollIntoView();
map <site>okr
\    -description "Goto Related Products"
\    -js content.document.querySelector('.HotProducts').scrollIntoView();
map <site>okv
\    -description "Goto Also Viewed Products"
\    -js content.document.querySelector('.AlsoView').scrollIntoView();
map <site>oo -description "View account/orders"
\    -count -ex openorselect https://www.banggood.com/index.php?com=account&t=ordersList&pageSize=90 <count>
map <site>ow -description "View account/wishlist"
\    -count -ex openorselect https://www.banggood.com/index.php?com=account&t=wishlist&pageSize=90 <count>

map <site>1 -description "View first photo"   -js bgSelectNthProductPhoto(0);
map <site>2 -description "View second photo"  -js bgSelectNthProductPhoto(1);
map <site>3 -description "View third photo"   -js bgSelectNthProductPhoto(2);
map <site>4 -description "View fourth photo"  -js bgSelectNthProductPhoto(3);
map <site>5 -description "View fifth photo"   -js bgSelectNthProductPhoto(4);
map <site>6 -description "View sixth photo"   -js bgSelectNthProductPhoto(5);
map <site>7 -description "View seventh photo" -js bgSelectNthProductPhoto(6);

group user

" -------------------------------------------------------------------------------
" ,---------,
" | Bato.to |
" '---------'
group batoto -locations=www.bato.to

js <<EOF
function batoDecorateLinks() {
    var reader=content.document.getElementById('reader');
    var imgs=Array.from(reader.getElementsByTagName('img'));
    var np=imgs.filter(e=>e.title=='Next Page')[0];
    np.setAttribute('alt', '>>');
    var pp=imgs.filter(e=>e.title=='Previous Page')[0];
    pp.setAttribute('alt', '<<');
}

function batoGetImgURL() {
    var img = content.document.querySelector("#comic_page");
    return img.src;
}

function batoGetImgURLandNumPages() {
    return `${batoGetImgURL()} ${batoGetNumPages()}`;
}

function batoGoToPage(n, where=dactyl.CURRENT_TAB) {
    if (!n) n = 1;
    var pageselect = content.document.querySelector("#page_select");
    var currentpage = pageselect.value;
    var pages = pageselect.children;
    dactyl.open(pages[n-1].value, { where: where });
}

function batoNextPage() {
    var reader=content.document.getElementById('reader');
    var links=Array.from(reader.getElementsByTagName('a'));
    var link = links.filter(l=>l.firstChild.title=='Next Page')[0];
    link.click();
}

function batoPreviousPage() {
    var reader=content.document.getElementById('reader');
    var links=Array.from(reader.getElementsByTagName('a'));
    var link = links.filter(l=>l.firstChild.title=='Previous Page')[0];
    link.click();
}

function batoGetNumPages() {
    var menu = content.document.getElementById('page_select');
    return menu.children.length;
}

function batoGetNextChapterUrl() {
    var reader = content.document.getElementById('reader');
    var selectelts = Array.from(reader.getElementsByTagName('select'));
    var chselect = selectelts.filter(e=>e.name == 'chapter_select')[0];
    var currenturl = chselect.value;
    var chapters = chselect.children;
    for (var i=chapters.length-1; i>=0; --i)
        if (chapters[i].value == currenturl) {
            var nextch = chapters[i-1];
            return nextch ? nextch.value : null;
        }
}

function batoGoToChapterIndex(n, where=dactyl.CURRENT_TAB) {
    "Go to nth chapter listed (bottom to top)"
    if (!n) n = 1;
    var reader = content.document.getElementById('reader');
    var selectelts = Array.from(reader.getElementsByTagName('select'));
    var chselect = selectelts.filter(e=>e.name == 'chapter_select')[0];
    var currentch = chselect.value;
    var chapters = chselect.children;
    var N = chapters.length;
    var idx = N - n;
    dactyl.open(chapters[idx].value, { where: where });
}

function batoGetPreviousChapterUrl() {
    var reader = content.document.getElementById('reader');
    var selectelts = Array.from(reader.getElementsByTagName('select'));
    var chselect = selectelts.filter(e=>e.name == 'chapter_select')[0];
    var currenturl = chselect.value;
    var chapters = chselect.children;
    for (var i=chapters.length-1; i>=0; --i)
        if (chapters[i].value == currenturl) {
            var previousch = chapters[i+1];
            return previousch ? previousch.value : null;
        }
}

function batoNextChapter(where=dactyl.CURRENT_TAB) {
    var nextch = batoGetNextChapterUrl();
    dactyl.open(nextch, { where: where })
}

function batoPreviousChapter(where=dactyl.CURRENT_TAB) {
    var previousch = batoGetPreviousChapterUrl();
    dactyl.open(previousch, { where: where })
}

EOF

command! batodecoratelinks -js batoDecorateLinks();
command! batoyankimgurl -js utils.yankWithMsg(batoGetImgURL());
command! batonumpages -js utils.message(batoGetNumPages());
command! batoyankinfo -js utils.yankWithMsg(batoGetImgURLandNumPages());
command! batonextpage -js batoNextPage();
command! batopreviouspage -js batoPreviousPage();
command! -bang batonextchapter -js batoNextChapter(bang?'tab':'here');
command! -bang batopreviouschapter -js batoPreviousChapter(bang?'tab':'here');
command! -nargs ? -bang batogotopage -js batoGoToPage(args[0], bang?'tab':'here');
command! -nargs ? -bang batogotochapterindex -js batoGoToChapterIndex(args[0], bang?'tab':'here');

map <site># -ex batonumpages
map <site>y -ex batoyankimgurl
map <site>i -ex batoyankinfo
map <site>d -ex batodecoratelinks
map <site>, -ex batopreviouspage
map <site>. -ex batonextpage
map <site>n -ex batonextchapter
map <site>p -ex batopreviouschapter
map <site>g :batogotopage<Space>
map <site>c :batogotochapterindex<Space>

group user

" -------------------------------------------------------------------------------
" ,---------------,
" | BitBucket.org |
" '---------------'
group bitbucket -locations=bitbucket.org

js var bbusername = 'tpracy';

map <site>og
    \ -description "open snippets"
    \ -js dactyl.open('https://bitbucket.org/dashboard/snippets', 'here');
map <site>oi
    \ -description "open issues"
    \ -js dactyl.open('https://bitbucket.org/dashboard/issues', 'here');
map <site>or
    \ -description "open my repositories"
    \ -js dactyl.open('https://bitbucket.org/dashboard/repositories?owner=tpracy', 'here');
map <site>oR
    \ -description "open repositories"
    \ -js dactyl.open('https://bitbucket.org/dashboard/repositories', 'here');

map <site>tg
    \ -description "open snippets (new tab)"
    \ -js dactyl.open('https://bitbucket.org/dashboard/snippets', 'tab');
map <site>ti
    \ -description "open issues (new tab)"
    \ -js dactyl.open('https://bitbucket.org/dashboard/issues', 'tab');
map <site>tr
    \ -description "open my repositories (new tab)"
    \ -js dactyl.open('https://bitbucket.org/dashboard/repositories?owner='+bbusername, 'tab');
map <site>tR
    \ -description "open repositories (new tab)"
    \ -js dactyl.open('https://bitbucket.org/dashboard/repositories', 'tab');

map <site>yg -description "yank git repos link" -js bbCopyRepoLinkGit();
map <site>yy -description "yank https repos link" -js bbCopyRepoLinkHttps();

js <<EOF

function bbCopyRepoLinkHttps() {
    var auibutton = content.document.querySelector('.clone-url .aui-button');
    utils.yankWithMsg(auibutton.getAttribute('data-primary-https'));
}
function bbCopyRepoLinkGit() {
    var auibutton = content.document.querySelector('.clone-url .aui-button');
    utils.yankWithMsg(auibutton.getAttribute('data-primary-ssh'));
}

EOF

group user

" -----------------------------------------------------------------------------
" ,--------,
" | BookZZ |
" '--------'
group bookzz -locations=bookzz.org

map <site>z -ex loginAndSearch

command! loginAndSearch
    \ -description "Sign in and repeat search for ID in input field"
    \ -js loginAndSearch(getSearchField());
map <app>z
    \ -description "Sign in and repeat search for ID in input field"
    \ -js loginAndSearch(getSearchField());

js <<EOF

var signinurl = "http://singlelogin.org/";

function loginAndSearch() {
    var searchId = content.document.getElementsByTagName("input")[0].value;
    var curT = gBrowser.selectedTab;
    var curTB = gBrowser.getBrowserForTab(curT);
    function searchForId() {
        var searchFields = content.document.getElementsByTagName("input");
        searchFields[0].value = searchId;
        searchFields[1].click();
        curTB.removeEventListener("DOMContentLoaded", searchForId);
    }
    curTB.loadURI(signinurl);
    curTB.addEventListener("DOMContentLoaded", searchForId);
}

EOF

group user

" ,-----------------,
" | Carrie-Lewis.com |
" '-----------------'
group carrielewis -locations=carrie-lewis.com

map <site>c -description "Remove cruft" -ex removecruft

command! removecruft -description "Remove cruft" -js carrielewisRemoveCruft();

js <<EOF
function carrielewisRemoveCruft() {
    isolateSelector("#content");
    removeSelectors("aside", ".sharedaddy", ".jp-relatedposts", "footer", "#respond", ".post-navigation");
}
EOF

group user

" -----------------------------------------------------------------------------
" ,----------,
" | Coursera |
" '----------'
group coursera -locations=www.coursera.org

set passkeys+='https://class.coursera.org/.*/lecture/.*':'hp-+fc<up><down><left><right>'

js <<EOF

function courseraTogglePaused() {
    var vid = content.document.getElementById('c-video_html5_api');
    if (!vid) return;
    if (vid.paused) vid.play(); else vid.pause();
}
function courseraRateDec() {
    var buttons = content.document.getElementsByClassName('c-playback-rate-button');
    var ratedec = buttons[0];
    ratedec.click();
}
function courseraRateInc() {
    var buttons = content.document.getElementsByClassName('c-playback-rate-button');
    var rateinc = buttons[1];
    rateinc.click();
}
function courseraRate(r) {
    var vid = content.document.getElementById('c-video_html5_api');
    vid.playbackRate = r;
    dactyl.utils.message(`rate: ${vid.playbackRate.toFixed(1)}`);
}
function courseraVolume(vol) {
    var vid = content.document.getElementById('c-video_html5_api');
    vid.volume = vol;
    dactyl.utils.message(`volume: ${vid.volume.toFixed(3)}`);
}
function courseraVolumeDec() {
    var vid = content.document.getElementById('c-video_html5_api');
    if (vid.volume <= 0.15) vid.volume /= 2;
    else vid.volume = vid.volume - 0.1;
    dactyl.utils.message(`volume: ${vid.volume.toFixed(3)}`);
}
function courseraVolumeInc() {
    var vid = content.document.getElementById('c-video_html5_api');
    vid.volume = Math.min(1, vid.volume + 0.1);
    dactyl.utils.message(`volume: ${vid.volume.toFixed(3)}`);
}
function courseraJumpTo(s) {
    var vid = content.document.getElementById('c-video_html5_api');
    vid.currentTime = s;
    dactyl.utils.message(`time: ${vid.currentTime.toFixed(2)}`);
}
function courseraJumpBackward(delta) {
    var vid = content.document.getElementById('c-video_html5_api');
    vid.currentTime = vid.currentTime - delta;
    dactyl.utils.message(`time: ${vid.currentTime.toFixed(2)}`);
}
function courseraJumpForward(delta) {
    var vid = content.document.getElementById('c-video_html5_api');
    vid.currentTime = vid.currentTime + delta;
    dactyl.utils.message(`time: ${vid.currentTime.toFixed(2)}`);
}
function courseraDisplay() {
    var vid = content.document.getElementById('c-video_html5_api');
    dactyl.utils.message(`time:\t${vid.currentTime.toFixed(2)}\nvolume:\t${vid.volume.toFixed(3)}\nrate:\t${vid.playbackRate.toFixed(1)}`);
}
function courseraScrollToNextHighlighted() {
    var hilited = Array.from(content.document.querySelectorAll('.highlighted'));
    "jump to first match below viewport; if none, jump back to first match"
    var i = Math.max(0, hilited.findIndex(e => e.getBoundingClientRect().y > content.window.innerHeight));
    "scroll the element into view at bottom of page (since navbar obscures top)"
    hilited[i].scrollIntoView(false);
    return i;
}

EOF

" ,-----------------,
" | Coursera: hints |
" '-----------------'
" coursera: jump to match in transcript: mode ẖ "
set eht+=[ẖ]:.highlighted
js hints.addMode("ẖ", "Jump to match in transcript", elem => elem.click());

map <site>f
    \ -description "Hints mode: jump to match in transcript"
    \ -js hints.show("ẖ");

" ,---------------------------------,
" | Coursera: commands and bindings |
" '---------------------------------'
command! -nargs=1 courseravolume -js courseraVolume(args[0]);
command! -nargs=1 courserarate -js courseraRate(args[0]);
command! -nargs=1 courserajump -js courseraJumpTo(args[0]);
command! courseradisplay -js courseraDisplay();
map <Space> -js courseraTogglePaused();
map <Return> -js courseraTogglePaused();
map <site>c -js courseraTogglePaused();
map <site><A-h> -js courseraJumpBackward(1);
map <site><A-l> -js courseraJumpForward(1);
map <site>h -js courseraJumpBackward(5);
map <site>l -js courseraJumpForward(5);
map <site>H -js courseraJumpBackward(25);
map <site>L -js courseraJumpForward(25);
map <site>r :courserarate<Space>
map <site>v -count -ex js courseraVolume(parseInt(<count>)/10);
map <site>V :courseravolume<Space>
map <site>, -js courseraRateDec();
map <site>. -js courseraRateInc();
map <site>j -js courseraVolumeInc();
map <site>k -js courseraVolumeDec();
map <site>? -js courseraDisplay();
map <site><Tab> -js courseraScrollToNextHighlighted();
"Arrow Keys"
map <S-Left> -js courseraJumpBackward(2);
map <S-Right> -js courseraJumpForward(2);
map <Left> -js courseraJumpBackward(5);
map <Right> -js courseraJumpForward(5);
map <A-Left> -js courseraJumpBackward(20);
map <A-Right> -js courseraJumpForward(20);
map <C-Left> -js courseraJumpBackward(60);
map <C-Right> -js courseraJumpForward(60);
map <C-Up> -js courseraVolumeInc();
map <C-Down> -js courseraVolumeDec();

group user

" -------------------------------------------------------------------------------
" ,-------------,
" | Crunchyroll |
" '-------------'
group crunchyroll -locations=crunchyroll.com

js <<EOF

function crDL() {
    var title = content.document.querySelector("#source_showview h1").innerText;
    var links = content.document.querySelector(".portrait-grid").getElementsByClassName("block-link");
    var urls = Array.from(links).map(l=>l.href);
    var aposescape = ["'", '"', "'", '"', "'"].join('');
    dirname = title.replace("'", aposescape);
    dactyl.execute(`!mkdir -p ~/anime/'${dirname}'`);
    var dlcmd = `cd ~/anime/'${dirname}';`;
    for (url of urls) {
        dlcmd += 'youtube-dl -ci --write-sub --sub-format ass/srt/best --sub-lang enUS ' +
                 '--xattrs -o "%(title)s-%(id)s.%(ext)s" ' +
                 `'${url}'; `;
    }
    dactyl.execute(`!${dlcmd}: &`);
}

EOF

map <site>da -description "Download all videos (with youtube-dl)" -js crDL();

command! crdl -js crDL();

group user

" -------------------------------------------------------------------------------
" ,-----------------,
" | Chrome Webstore |
" '-----------------'

js <<EOF
function chromeGetExtensionDirById(id, profileDir='') {
    var base = `${homedir}/.config/google-chrome`;
    var profileDir = profileDir.trim();
    var prof = profileDir ? `"${profileDir}"` : '*';
    var dirs = io.system(`for d in ${base}/${prof}/Extensions/${id}; do echo "$d"; done`).output;
    return dirs.split('\n')[0];
}
EOF

command! chromeopenextensiondir
    \ -nargs=+
    \ -js dactyl.execute(`!dolphin '${chromeGetExtensionDirById(args[0], args[1])}'`)

" ===== GROUP START =====

group chromestore -locations=chrome.google.com/webstore/

map <site>c  -description "Open in Chrome (default profile)" -ex ochrome
map <site>yn -description "Yank extension name"              -js utils.yankWithMsg(chromeGetExtensionNameAndId()[0]);
map <site>yy -description "Yank extension ID"                -js utils.yankWithMsg(chromeGetExtensionNameAndId()[1]);

js <<EOF

function chromeGetExtensionNameAndId(url=buffer.URL) {
    var regex = /[^:]+:\/\/chrome.google.com\/webstore\/detail\/([^/]+)\/([^/#?]+)(\/.*)?/;
    var match = buffer.URL.match(regex);
    var name = match && match[1];
    var id = match && match[2];
    return [name, id];
}

EOF

group user

" -------------------------------------------------------------------------------
" ,----------------------,
" | Dactyl Resource URLs |
" '----------------------'
group dactylres -locations=resource://dactyl*

map <site>e -description "Open my fork in Emacsclient" -js dactylresOpenMyForkInEmacsclient();
map <site>E -description "Open in Emacsclient" -js dactylresOpenInEmacsclient();

js <<EOF
function dactylresGetRelativeFilePath() {
    var modulesMatch = buffer.URL.match('^resource://dactyl/(.*)$');
    var otherMatch = buffer.URL.match('^resource://dactyl-([^/]+)/(.*)$');
    if (modulesMatch) {
        return `common/modules/${modulesMatch[1]}`;
    } else if (otherMatch) {
        return `common/${otherMatch[1]}/${otherMatch[2]}`;
    }
}
function dactylresOpenInEmacsclient() {
    var path = getHomeDir() + 'source/git-repos/dactyl/' + dactylresGetRelativeFilePath();
    dactyl.execute(`!emacsclient ${path}`);
}
function dactylresOpenMyForkInEmacsclient() {
    var path = getHomeDir() + 'repos/dactyl/' + dactylresGetRelativeFilePath();
    dactyl.execute(`!emacsclient ${path}`);
}
EOF

group user

" -------------------------------------------------------------------------------
" ,------------,
" | DeviantArt |
" '------------'
group deviantart -locations=deviantart.com

js <<EOF
EOF

map <site>* -description "Star/Unstar"
\           -js content.document.querySelector('#gmi-ResourceViewFavouriteButton').click()

group user


" -------------------------------------------------------------------------------
" ,------,
" | eBay |
" '------'
group ebay -locations=ebay.com,ebay.com.*

js <<EOF

function ebayToAU() {
    var url = content.location.href.toLowerCase();
    var ebayRegex = /https?:\/\/www.ebay.com(\.\w\w)?\/(.*)/;
    var matches = url.match(ebayRegex);
    if (matches[1] != '.au')
        dactyl.open("https://www.ebay.com.au/" + matches[2])
}

function ebayRemoveByTitle(regex) {
    var results = Array.from(content.document.getElementsByClassName('lvresult'));
    var toRemove = results.filter(
        div=>div.getElementsByClassName('lvtitle')[0].innerText.match(regex)
    );
    toRemove.forEach(div=>div.remove());
}

function ebayFilterByTitle(regex) {
    var results = Array.from(content.document.getElementsByClassName('lvresult'));
    var toRemove = results.filter(
        div=>!div.getElementsByClassName('lvtitle')[0].innerText.match(regex)
    );
    toRemove.forEach(div=>div.remove());
}

function ebayWatch() {
    var addBtn = content.document.querySelector('.vi-atw-txt');
    var rmvBtn = content.document.querySelector('.vi-rmw-txt');
    (addBtn||rmvBtn).click();
}

function ebayGo() {
    url = buffer.URL;
    if (url.match(/https:\/\/www.ebay.com.au\/itm\//)) {
        clickSelectorByText(".btn", "Add to cart");
    } else if (url.match(/https:\/\/cart.ebay.com.au/)) {
        clickSelectorByText(".btn", "Go to checkout");
    } else if (url.match(/https:\/\/pay.ebay.com.au/)) {
        openOrSelectTab("https://cart.ebay.com.au", "here", null, true, true);
    }
}

function ebayGetStoreUrl() {
    "If current seller, return URL for store (else other items), else return URL for Saved Sellers."
    var thisSeller = getFirstSelector("#storeSeller>div>a") ||
                         getFirstSelectorByText("a", "Visit store") ||
                         getFirstSelectorByText("a", "See other items");
    if (thisSeller) return thisSeller.href;
    else return "https://www.ebay.com.au/myb/SavedSellers";
}

function ebayCount() {
    var qtyBoxes = Array.from(content.document.querySelectorAll(".js-item-quantity-select"));
    if (qtyBoxes.length) {
        var quantities = qtyBoxes.map(e=>Number(e.value));
        return quantities.reduce((n,s)=>n+s);
    } else {
        var countSpan = getSelectorByText("span>span", /Items \(\d+\)/)[0];
        return parseInt(countSpan.innerText.match(/Items \((\d+)\)/)[1]);
    }
}

ebayResultPageRegex = /&_pgn=(\d+)/;

function ebayGetResultPageNumber() {
    var match = buffer.URL.match(ebayResultPageRegex);
    if (match) return match[1];
    else return 1;
}

function ebayOpenResultPageNumber(n, where="here") {
    var match = buffer.URL.match(ebayResultPageRegex);
    var pageQuery = `&_pgn=${n}`;
    var newurl = match ? buffer.URL.replace(ebayResultPageRegex, pageQuery) : buffer.URL+pageQuery;
    dactyl.open(newurl, {where: where});
}

EOF

command! ebayremovebytitle
    \ -description "Remove entries whose titles matches a smart-case regex."
    \ -nargs=1
    \ -js ebayRemoveByTitle(stringToSmartCaseRegExp(args[0]));

command! ebayfilterbytitle
    \ -description "Remove entries whose titles fail to match a smart-case regex."
    \ -nargs=1
    \ -js ebayFilterByTitle(stringToSmartCaseRegExp(args[0]));

command! ebayresultpageN
\    -description "Goto page N of the search results"
\    -nargs=1
\    -bang
\    -js ebayOpenResultPageNumber(args[0], bang?"tab":"here");

map <site>a -description "Go to Australian site" -js ebayToAU();
map <site>c -description "Click button (Add to cart/Go to checkout)" -js ebayGo();
map <site>n -description "Count items" -js utils.message("Number of items: " + ebayCount());
map <site>o -js CommandExMode().open("showkeys <site>o")
map <site>oa -description "Goto Account Page"
\    -js openOrSelectTab("https://my.ebay.com.au/ws/eBayISAPI.dll?MyEbay&CurrentPage=MyeBayMyAccounts", count?"tab":"here", null, true);
map <site>oc -description "Goto Cart"
\    -js openOrSelectTab("https://cart.ebay.com.au", count?"tab":"here", null, true);
map <site>of -description "Leave feedback"
\    -js openOrSelectTab("https://www.ebay.com.au/fdbk/leave_feedback", count?"tab":"here");
map <site>ok -description "Goto Similar Items"
\    -js getSelectorByText('h2','Similar items you may be interested in')[0].scrollIntoView();
map <site>om -description "Goto Inbox"
\    -js openOrSelectTab("https://mesg.ebay.com.au/mesgweb/ViewMessages/0", count?"tab":"here");
map <site>oo -description "Goto Orders (Purchase history)"
\    -js openOrSelectTab(
\            "https://www.ebay.com.au/myb/PurchaseHistory#PurchaseHistoryOrdersContainer?ipp=100&Period=2",
\            count?"tab":"here");
map <site>os -description "Goto My Saved Sellers"
\    -js openOrSelectTab("https://www.ebay.com.au/myb/SavedSellers", count?"tab":"here", null, true);
map <site>ov -description "Goto seller's store"
\    -js openOrSelectTab(ebayGetStoreUrl(), count?"tab":"here");
map <site>ow -description "Goto watch list"
\    -js openOrSelectTab("https://www.ebay.com.au/myb/WatchList", count?"tab":"here");
map <site>oy -description "Goto My eBay"
\    -js openOrSelectTab("https://www.ebay.com.au/myb/Summary", count?"tab":"here");
map <site>w -description "Watch/Unwatch"
\    -js ebayWatch();
map <site><Esc> -description "Click close button" -js clickSelector(".clzBtn"), clickSelector(".oly-c");

group user

" -----------------------------------------------------------------------------
" ,-----,
" | EdX |
" '-----'
group edx -locations=edx.org
autocmd! -group edx

command! edx :runtime! config/edx.penta
autocmd DOMload courses.edx.org :edx

" if syllabus won't stay open "
command! edxshowsyllabus -js edxShowSyllabus();

command! edxtogglesyllabus -js edxToggleSyllabus();
map <site>l -js edxToggleSyllabus();

js <<EOF
function edxShowSyllabus() {
    var syllabusDiv = content.document.getElementsByClassName("toggled-content")[0];
    syllabusDiv.style="height: 1500px;";
}
function edxToggleSyllabus() {
    var showLink = content.document.getElementsByClassName("show-content-cta")[0];
    var hideLink = content.document.getElementsByClassName("hide-content-cta")[0];
    var link = showLink.classList.contains("hidden") ? hideLink : showLink;
    link.click();
}
EOF

group user

" -------------------------------------------------------------------------------
" ,--------------,
" | Fasttech.com |
" '--------------'
group fasttech -locations=fasttech.com
map <site>o<C-h> -js CommandExMode().open("showkeys <site>o")
map <site>o      -js CommandExMode().open("showkeys <site>o")
map <site>t<C-h> -js CommandExMode().open("showkeys <site>t")
map <site>t      -js CommandExMode().open("showkeys <site>t")

" === hint modes === "
set eht+=🅵:.dropit
js hints.addMode("🅵", "Move to wish list", e=> e.querySelector('a+ul a').click());
map <site>w -description "Move to wish list" -js hints.show('🅵');
set eht+=🄵:td.MediumLabel
js hints.addMode("🄵", "Copy Gift Card", e=> utils.yankWithMsg(e.innerText.trim()));
map <site>g
    \ -description "Copy Gift Card"
    \ -js if (buffer.URL.match(/giftcertificates/)) hints.show('🄵');
    \     else dactyl.open('https://www.fasttech.com/account/giftcertificates', 'tab');

js <<EOF
function fasttechToggleReviews () {
    var url = buffer.URL;
    var product_regex  = /https:\/\/www.fasttech.com\/p(roducts?)?\/(.*\/)?([^/]+)/;
    var product_prefix = 'https://www.fasttech.com/p/';
    var reviews_regex = /https:\/\/www.fasttech.com\/reviews\/([^/]+)/;
    var reviews_prefix = 'https://www.fasttech.com/reviews/';
    var p_matches = url.match(product_regex);
    var r_matches = url.match(reviews_regex);
    if (r_matches)
        newurl = product_prefix + r_matches[1];
    else if (p_matches)
        newurl = reviews_prefix + p_matches[3];
    else return;
    dactyl.open(newurl);
}

function fasttechToggleChat() {
    var hiddenDiv = content.document.querySelector('div.olark-hidden.olark-size-md');
    if (hiddenDiv)
        content.document.querySelector('.olark-launch-button').click();
    else
        content.document.querySelector('.olark-top-bar-button').click();
}

function fasttechApplyGiftCertificate(gc) {
    var expandLink = content.document.querySelector('#GCExpand');
    if (expandLink) expandLink.click();
    window.setTimeout(
        ()=>{content.document.querySelector('#content_GiftCertificateCode').value=gc;},
        500
    );
}
EOF

map <site>ag -description "Apply Gift Certificate from clipboard"
    \        -js fasttechApplyGiftCertificate(dactyl.clipboardRead());
map <site>c  -description "Toggle reviews" -js fasttechToggleReviews();
map <site>h  -description "Toggle chat" -js fasttechToggleChat()
map <site>oc  -description "View cart"
\    -count -js openOrSelectTab(" https://www.fasttech.com/shoppingcart", count?"tab":"here")
map <site>oa  -description "View account/"
\    -count -js openOrSelectTab(" https://www.fasttech.com/account", count?"tab":"here")
map <site>oo -description "View account/orders"
\    -count -js openOrSelectTab(" https://www.fasttech.com/account/orders", count?"tab":"here")
map <site>og -description "View account/giftcertificates"
\    -count -js openOrSelectTab(" https://www.fasttech.com/account/giftcertificates", count?"tab":"here")
map <site>ot  -description "View tickets"
\    -count -js openOrSelectTab(" https://support.fasttech.com/tickets", count?"tab":"here")
map <site>ow  -description "View account/wishlists"
\    -count -js openOrSelectTab(" https://www.fasttech.com/account/wishlists", count?"tab":"here")

style -name=fasttech-post-separator https://www.fasttech.com/*
    \ .ForumHeader { border-top: solid 1px #AAA !important; }
styleenable https://www.fasttech.com/* fasttech-post-separator

group user

" -------------------------------------------------------------------------------
" ,------------,
" | Figurosity |
" '------------'
group figurosity -locations=figurosity.com

js <<EOF
EOF

map <site>oi
\    -description "View image"
\    -js openOrSelectTab(getSelectors("#image-holder>img")[0].src, count?"tab":"here");
map <site>y
\    -description "Copy image source"
\    -js utils.cbWrite(getSelectors("#image-holder>img")[0].src);

group user


" -----------------------------------------------------------------------------
" ,-------------------,
" | Files/Directories |
" '-------------------'
group local -locations=file://*

map <site>e -description "Open in emacsclient"
\           -count
\           -js dactyl.execute(`!emacsclient${count?" -c":""} ${buffer.URL.replace("file://", "")}`);
map <site>yy -description "Yank file location" -js utils.cbWrite(buffer.URL.replace("file://", ""));
map <site>yf -description "Yank link location" -js hints.show("Λ");
map <site>v -description "Open in gvim"
\           -js io.system(`gvim ${buffer.URL.replace("file://", "")}`);
map <site>x -description "Execute link with xdg-open" -js hints.show("ƛ");


" -----
" hints
" -----
set eht+=[Λ]:'a',':-moz-any-link'
js hints.addMode("Λ", "Yank local path", e=>{ utils.cbWrite(localGetLinkPath(e)); });
set eht+=[ƛ]:'a',':-moz-any-link'
js hints.addMode("ƛ", "Execute link with xdg-open", e=> dactyl.execute("xopen '" + localGetLinkPath(e) + "'"));

js <<EOF
function localBaseURL() { return buffer.URL.replace("file://", ""); }
function localGetLinkPath(l) { return decodeURIComponent(l.href).replace("file://", ""); }

EOF

group user

" -------------------------------------------------------------------------------
" ,--------------,
" | GearBest.com |
" '--------------'
group gb -locations=gearbest.com

js <<EOF

function gbToggleReviews() {
    var reviewRegex = /(.*)\/review.html(\?page=\d+)?$/;
    var productRegex = /(.*\/pp_\d+).html$/;
    var url = buffer.URL;
    var matches;
    if (matches = url.match(reviewRegex))
        dactyl.open(matches[1]+".html");
    else if (matches = url.match(productRegex))
        dactyl.open(matches[1]+"/review.html?page=1");
}

EOF

map <site>c -js gbToggleReviews();

group user

" -------------------------------------------------------------------------------
" ,----------------,
" | GetComics.Info |
" '----------------'
" =====GETCOMICS.INFO=====
group gci -locations=getcomics.info

js <<EOF
function gciNextPageURL() {
    var url = buffer.URL.spec;
    var regex = /getcomics.info\/page\/(\d+)/;
    var match = url.match(regex);
    if (match) {
        var replstr = `getcomics.info/page/${Number(match[1])+1}`;
        return url.replace(regex, replstr);
    } else
        return url.replace('getcomics.info', 'getcomics.info/page/2');
}

function gciPreviousPageURL() {
    var url = buffer.URL.spec;
    var regex = /getcomics.info\/page\/(\d+)/;
    var match = url.match(regex);
    if (match && match[1] > 1) {
        var replstr = `getcomics.info/page/${Number(match[1])-1}`;
        return url.replace(regex, replstr);
    } else
        return url;
}
EOF

map ]] -js dactyl.open(gciNextPageURL());
map [[ -js dactyl.open(gciPreviousPageURL());

map <site>c -description "Download" -js content.document.querySelector('.aio-red').click();

" =====GETCOMICS.GQ=====
group gcgq -locations=getcomics.gq,getcomics.ga

map <site>c -description "Get Link" -js content.document.querySelector('.button.green').click();

" =====SAFELINKCONVERTER.COM=====
group gclinkconvert -locations=decrypt2.safelinkconverter.com

map <site>c -description "Convert Link" -js gcConvertLink();
map <site>d -description "Close tabs" -js gcClose();

command! gcclose -js closeTabsLeftWhileMatching(/(getcomics.g.|shorte.st|sh.st|viid.me|safelinkconverter.com)\//, 3);

js <<EOF
function gcConvertLinkOrClose() {
    var URLsRegex = /(getcomics.g.|shorte.st|sh.st|viid.me|cllkme.com|safelinkconverter.com)\//;
    var redirect = content.document.querySelector('.redirect_url div');
    if (redirect.innerText.match(/three.comicfiles.ru/)) {
        closeTabsLeftWhileMatching(URLsRegex, 3);
        utils.message("three")
    }
    else {
        redirect.click();
    }
}

function gcConvertLink() {
    var redirect = content.document.querySelector('.redirect_url div');
    redirect.click();
}

function gcClose() {
    var URLsRegex = /(getcomics.g.|shorte.st|sh.st|viid.me|cllkme.com|safelinkconverter.com)\//;
    closeTabsLeftWhileMatching(URLsRegex, 3);
}
EOF

" =====SHORTE.ST=====
group shortest -locations=shorte.st,viid.me,sh.st,cllkme.com,clkmein.com

map <site>c -description "Click link or close temp tabs" -js shortestClickOrClose();
map <site>d -description "Close temp tabs" -js shortestClose();

js <<EOF
function shortestClickOrClose() {
    var URLsRegex = /(getcomics.g.|shorte.st|sh.st|viid.me|cllkme.com|safelinkconverter.com)\//;
    if (content.document.alreadyClicked)
        closeTabsLeftWhileMatching(URLsRegex, 3);
    else {
        shortestClick();
        content.document.alreadyClicked = true;
    }
}
function shortestClick() {
    dactyl.open("javascript:app.skipClickNotify.redirectToTargetUrl();");
    void(0);
}
function shortestClose() {
    var URLsRegex = /(getcomics.g.|shorte.st|sh.st|viid.me|cllkme.com|safelinkconverter.com)\//;
    closeTabsLeftWhileMatching(URLsRegex, 3);
}
EOF

group user

" -----------------------------------------------------------------------------
" ,------------,
" | Github.com |
" '------------'

js var ghusername = 'troyp';

js function ghTabopenRepo (s) { dactyl.tabopen(`https://github.com/${s}`); }
command! ghtabopenrepo -nargs=1 -js ghTabopenRepo(args[0]);

" ===== GROUP START =====
group github -locations=github.com,githubusercontent.com,rawgit.com,patch-diff.githubusercontent.com,github.io

map <site>c        -description "Click README.md" -js ghClickReadme();
map <site>dd       -description "Download diff file" -b :ghdldiff<Space>
map <site>dp       -description "Download patch file" -b :ghdlpatch<Space>
map <site>f        -description "Fork repo" -js ghFork();
map <site>g        -description "(show bindings)" -js CommandExMode().open("showkeys <site>g")
map <site>g<C-h>   -description "(show bindings)" -js CommandExMode().open("showkeys <site>g")
map <site>gc       -description "(show bindings)" -js CommandExMode().open("showkeys <site>gc")
map <site>gc<C-h>  -description "(show bindings)" -js CommandExMode().open("showkeys <site>gc")
map <site>gch      -description "Clone repo via HTTPS" -b :ghclonehttps<Space>
map <site>gcc      -description "Clone repo to ~/source/git-repos or ~/repos" -js ghCloneRepoToMyDir();
map <site>gcs      -description "Clone repo via SSH" -b :ghclonessh<Space>
map <site>h        -description "Toggle HTML view" -ex ghtogglehtmlview
map <site>ir       -description "List user's repos in mow" -ex ghlistrepos
map <site>l        -description "Show line(s) in source file" -b :ghgotolines<Space>
map <site>m<C-h>   -description "(show bindings)" -js CommandExMode().open("showkeys <site>m")
map <site>m        -description "(show bindings)" -js CommandExMode().open("showkeys <site>m")
map <site>mg       -count -description "My gists"
\                  -js openOrSelectTab('https://gist.github.com/'+ghusername, count?"tab":"here");
map <site>mG       -count -description "My starred gists"
\                  -count
\                  -js openOrSelectTab(`https://gist.github.com/${ghusername}/starred`, count?"tab":"here");
map <site>mm       -description "My comments"
\                  -count
\                  -js openOrSelectTab("https://github.com/search?utf8=✓&q=+is:issue+commenter:troyp",
\                                      count?"tab":"here");
map <site>mo       -description "My profile" -count -js dactyl.open('https://github.com/'+ghusername, 'here');
map <site>mr       -description "My repositories"
\                  -count
\                  -js openOrSelectTab(`https://github.com/${ghusername}?tab=repositories`, count?"tab":"here");
map <site>ms       -description "My stars"
\                  -count
\                  -js openOrSelectTab(`https://github.com/${ghusername}?tab=stars`, count?"tab":"here");
map <site>o<C-h>   -description "(show bindings)" -js CommandExMode().open("showkeys <site>o")
map <site>og       -description "Open gists"
\                  -js openOrSelectTab('https://gist.github.com/'+ghGetUser(), count?"here":"tab");
map <site>o        -description "(show bindings)" -js CommandExMode().open("showkeys <site>o")
map <site>oc       -description "Open commits"
\                  -count -js openOrSelectTab(`https://github.com/${ghGetUserAndRepo().join('/')}/commits`,
\                                             count?"tab":"here");
map <site>od       -description "Open PR patch"
\                  -count -js openOrSelectTab(`${ghprGetPatchURL()}`, count?"tab":"here");
map <site>oD       -description "Open PR diff"
\                  -count -js openOrSelectTab(`${ghprGetDiffURL()}`, count?"tab":"here");
map <site>oh       -description "Open help" -count -js ghOpenHelp(count?"here":"tab");
map <site>oi       -description "Open issues"
\                  -count -js openOrSelectTab(`https://github.com/${ghGetUserAndRepo().join('/')}/issues`,
\                                             count?"tab":"here");
map <site>oI       -description "Open issues.csv"
\                  -count
\                  -js openOrSelectTab(`https://api.github.com/repos/${ghGetUserAndRepo().join('/')}/issues`,
\                                      count?"tab":"here");
map <site>om       -description "User's comments"
\                  -count
\                  -js openOrSelectTab("https://github.com/search?utf8=✓&q=+is:issue+commenter:"+ghGetUser(),
\                                      count?"tab":"here");
map <site>oo       -description "Open profile (overview)"
\                  -count
\                  -js openOrSelectTab(`https://github.com/${ghGetUser()}`, count?"tab":"here");
map <site>op       -description "Open PRs"
\                  -count -js openOrSelectTab(`https://github.com/${ghGetUserAndRepo().join('/')}/pulls`,
\                                             count?"tab":"here");
map <site>oP       -description "Permanent link" -js openOrSelectTab(ghGetPermalink(), count?"tab":"here");
map <site>or       -description "Open repositories"
\                  -count -js openOrSelectTab(`https://github.com/${ghGetUser()}?tab=repositories`,
\                                             count?"tab":"here");
map <site>ot       -description "Open repo top level"
\                  -count -js ghGotoRepoRootLevel(count);
map <site>ow       -description "Open wiki" -js openOrSelectTab(ghGetWikiURL(), count?"tab":"here");
map <site>o<       -description "Open pull request URL" -js openOrSelectTab(ghGetPRURL(), count?"tab":"here");
map <site>r        -description "Open raw file (hints)" -js hints.show("🄶");
map <site>R        -description "Open raw file (new tab) (hints)" -js hints.show("🅶");
map <site>sr       -description "Save raw file (hints)" -js hints.show("ⓖ");
map <site>sR       -description "save this README to /opt/doc/" -ex ghsavethisreadmetodoc
map <site>xg       -description "Cleanup Gist" -ex ghgistcleanup
map <site>xG       -description "Cleanup Gist (keep comments)" -ex ghgistcleanup!
map <site>y        -description "(show bindings)" -js CommandExMode().open("showkeys <site>y")
map <site>y<C-h>   -description "(show bindings)" -js CommandExMode().open("showkeys <site>y")
map <site>yg       -description "Yank git repo link" -js ghCopyRepoLinkGit();
map <site>yh       -description "Yank https repo link" -js ghCopyRepoLinkHttps();
map <site>yn       -description "Yank repo name" -js ghCopyRepoName();
map <site>yr       -description "Yank raw file URL" -js hints.show("Ⓖ");
map <site>ys       -description "Yank SHA" -js hints.show("🄪");
map <site>yR       -description "Yank repo name with URL" -js ghCopyRepoNameWithURL();
map <site>yu       -description "Yank user/repo name" -js ghCopyUserAndRepo();
map <site>yU       -description "Yank user name" -js ghCopyUser();
map <site>yw       -description "Yank wiki git URL" -js ghCopyWikiGitURL();
map <site>yy       -description "Yank SSH repo link" -js ghCopyRepoLinkSSH();
map <site>y<       -description "Yank pull request URL" -js utils.yankWithMsg(ghGetPRURL());
map <site>*        -description "Star/Unstar repo" -js ghStar();
map <site>/ -ex ghfilefinder

command! ghtogglehtmlview
     \ -description "Toggle between HTML file and rendered view"
     \ -js ghToggleHTMLView();

command! ghgotolines -nargs=+ -js ghGotoLines(args);

command! ghlistrepos -js var u = ghGetUser(); dactyl.execute(`!python3 -c "import requests; list(map(lambda repo: print(repo['name']), requests.get('https://api.github.com/users/${u}/repos').json()))"`)

command! ghfilefinder -js ghFileFinder();

command! ghdldiff -description "Download diff corresponding to PR (use with git apply)"
\    -nargs 1
\    -complete dir
\    -js dactyl.execute(`! cd ${args[0]}; wget ${ghprGetDiffURL()}`);
command! ghdlpatch -description "Download patch corresponding to PR (use with git am)"
\    -nargs 1
\    -complete dir
\    -js dactyl.execute(`! cd ${args[0]}; wget ${ghprGetPatchURL()}`);

command! ghsavethisreadmetodoc
    \ -description "Download README for current repo to /opt/doc/"
    \ -bang
    \ -js ghSaveThisReadmeToDoc(bang);

command! ghclonehttps
\    -description "Clone repo via HTTPS"
\    -nargs 1
\    -complete dir
\    -js ghClone(args[0], 'https');
command! ghclonessh
\    -description "Clone repo via SSH"
\    -nargs 1
\    -complete dir
\    -js ghClone(args[0], 'ssh');

command! ghgistcleanup
\    -description "Cleanup Gist page. With !, remove comments"
\    -bang
\    -js ghGistCleanup(!bang);

" === hint modes === "
set eht+=🄶:'a',':-moz-any-link','area[href]','img[src]','iframe[src]'
js hints.addMode("🄶", "open raw file", e=>dactyl.open(e.href+'?raw=true', where='here'));
set eht+=🅶:'a',':-moz-any-link','area[href]','img[src]','iframe[src]'
js hints.addMode("🅶", "open raw file (new tab)", e=>dactyl.open(e.href+'?raw=true', where='tab'));
set eht+=ⓖ:'a',':-moz-any-link','area[href]','img[src]','iframe[src]'
js hints.addMode("ⓖ", "download raw file", e=>savePageDialog(ghConvertUrlToRaw(e.href)));
set eht+=Ⓖ:'a',':-moz-any-link','area[href]','img[src]','iframe[src]'
js hints.addMode("Ⓖ", "copy raw file url", e=>utils.yankWithMsg(ghConvertUrlToRaw(e.href), where='tab'));
set eht+=🄪:'.js-zeroclipboard','.sha'
js hints.addMode("🄪", "copy SHA", e=>ghYankSHA(e));

js <<EOF

function ghGetRepoUser() { return ghGetUserAndRepo()[0]; }
function ghGetAccountUser() { return content.document.querySelector('.avatar').getAttribute('alt').slice(1); }
function ghGetUser() { return (ghGetUserAndRepo() && ghGetUserAndRepo()[0]) || ghGetAccountUser(); }

function ghToggleHTMLView() {
    var url = buffer.URL.toLowerCase();
    var newurl;
    if (url.includes("https://github.com")) {
        var rx = /https:\/\/github.com\/([^/\s]+\/[^/\s]+)\/blob(\/.*)/;
        var match = rx.exec(url);
        newurl = `https://rawgit.com/${match[1]}${match[2]}`;
    }
    else {
        if (url.includes("https://raw.githubusercontent.com"))
            url = url.replace("raw.githubusercontent", "rawgit");
        if (url.includes("https://rawgit.com")) {
            var rx = /https:\/\/rawgit.com\/([^/\s]+\/[^/\s]+)(\/.*)/;
            var match = rx.exec(url);
            newurl = `https://github.com/${match[1]}/blob${match[2]}`;
        }
    }
    dactyl.open(newurl);
}

function ghGotoLines(args) {
    var loc = content.location;
    var url = loc.href.replace(/#.*$/, '');
    var frag = `#L${args[0]}`;
    if (args.length > 1) frag += `-L${args[1]}`;
    loc.href = url + frag;
}

function ghCopyRepoLinkHttps() {
    dactyl.utils.yankWithMsg(ghGetCloneUrl("https"));
}
function ghCopyRepoLinkSSH() {
    dactyl.utils.yankWithMsg(ghGetCloneUrl("ssh"));
}
function ghCopyRepoLinkGit() {
    dactyl.utils.yankWithMsg(ghGetCloneUrl("git"));
}
function ghGetUserAndRepo(useronly=false) {
    // var url = ghGetCloneUrl("https");
    if (buffer.URL.match(/https:\/\/github.com\/search/))
        return [null, null];
    var regex = /[^:]+:\/\/(gist.)?github.com\/([^/]+)\/?([^/#?]+)?(\/.*)?/;
    var match = buffer.URL.match(regex);
    if (match) {
        var user = match[2]!="new" && match[2];
        var repo = match[3];
    } else {
        " github.io "
        var regex_io = /[^:]+:\/\/([^/]+).github.io\/([^/]+)\/?/;
        match = buffer.URL.match(regex_io);
        var user = match && match[1];
        var repo = match && match[2];
    }
    if (user=="settings") user = ghGetAccountUser();
    if (useronly) return user;
    else return [user, repo];
}
function ghGetUrlComponents(url=buffer.URL) {
    var regex = /[^:]+:\/\/github.com\/([^/]+)\/([^/#?]+)(\/.*)?/;
    var match = url.match(regex);
    var user = match[1];
    var repo = match[2];
    var relpath = match[3];
    return [user, repo, relpath];
}
function ghGetWikiURL() {
    [user, repo] = ghGetUserAndRepo();
    return `https://github.com/${user}/${repo}/wiki`;
}

function ghGetWikiGitURL() {
    [user, repo] = ghGetUserAndRepo();
    return `https://github.com/${user}/${repo}.wiki.git`;
}

function ghprGetPatchURL() {
    var url = buffer.URL
    var regex = /https:\/\/github.com\/([^/]+)\/([^/]+)\/pull\/(\d+)/;
    var match = url.match(regex);
    if (match) {
        return `https://github.com/${match[1]}/${match[2]}/pull/${match[3]}.patch`;
    } else {
        var patchRegex = /https:\/\/patch-diff.githubusercontent.com\/raw\/[^/]+\/[^/]+\/pull\/\d+.diff/;
        var patchMatch = url.match(patchRegex);
        if (patchMatch) return url.replace(/\.diff$/, ".patch");
        else return url;
    }
}

function ghprGetDiffURL() {
    var url = buffer.URL
    var regex = /https:\/\/github.com\/([^/]+)\/([^/]+)\/pull\/(\d+)/;
    var match = url.match(regex);
    if (match) {
        return `https://github.com/${match[1]}/${match[2]}/pull/${match[3]}.diff`;
    } else {
        var patchRegex = /https:\/\/patch-diff.githubusercontent.com\/raw\/[^/]+\/[^/]+\/pull\/\d+.patch/;
        var patchMatch = url.match(patchRegex);
        if (patchMatch) return url.replace(/\.patch$/, ".diff");
        else return url;
    }
}

function ghCopyUserAndRepo() { dactyl.utils.yankWithMsg(ghGetUserAndRepo().join("/")); }

function ghCopyUser() {
    user = ghGetUserAndRepo(true);
    dactyl.utils.yankWithMsg(user);
}

function ghCopyRepoNameWithURL() {
    repo = ghGetUserAndRepo()[1];
    var url = buffer.URL;
    dactyl.utils.yankWithMsg(`${repo} (${url})`);
}

function ghCopyWikiGitURL() { dactyl.utils.yankWithMsg(ghGetWikiGitURL()); }

function ghDownloadReadmeToDoc(repo, name, ext, overwrite) {
    var overwrite = overwrite ? 't' : '';    // to be interpolated into shell script
    var rawurl = `https://raw.githubusercontent.com/${repo}/master/README.${ext}`;
    var filename = `/opt/doc/${name}-README.${ext}`;
    dactyl.execute(`! if [[ -e ${filename} ]] && [[ -z '${overwrite}' ]]; then kdialog --error "${filename} already exists"; else curl ${rawurl} > ${filename}; fi`);
}
function ghSaveThisReadmeToDoc(overwrite) {
    var matches = buffer.URL.match(/github.com\/([^/]+\/([^/]+))\/blob\/master\/README\.(.+)/);
    if (matches) {
        var repo = matches[1];
        var name = matches[2];
        var ext = matches[3];
        ghDownloadReadmeToDoc(repo, name, ext, overwrite);
    }
}

function ghClickReadme() {
    var links = content.document.getElementsByTagName( 'a' );
    for ( var i = 0; i < links.length; i++ ) {
        if ( links[i].textContent.includes('README.') )
            links[i].click();
    }
}

function ghGetCloneUrl(urltype) {
    var [user,repo]= ghGetUserAndRepo();
    var sshlink =   user && repo && `git@github.com:${user}/${repo}.git`;
    var httpslink = user && repo && `https://github.com/${user}/${repo}.git`;
    var gitlink =   user && repo && `git://github.com/${user}/${repo}.git`;
    switch (urltype) {
        case "ssh":   return sshlink;
        case "https": return httpslink;
        case "git":   return gitlink;
    }
}

function ghClone(dir, urltype) {
    var url = ghGetCloneUrl(urltype);
    dactyl.execute(`!cd ${dir} && git clone ${url}`);
}

function ghCloneRepoToMyDir() {
    var [user, repo] = ghGetUserAndRepo();
    if (user == ghusername)
        ghClone('~/repos', 'ssh');
    else
        ghClone('~/source/git-repos', 'https');
}

function ghFileFinder(where=dactyl.CURRENT_TAB) {
    [user, repo] = ghGetUserAndRepo();
    var ffurl = `https://github.com/${user}/${repo}/find/master`;
    dactyl.open(ffurl, {where:where});
}

function ghGetPermalink() {
    return content.document.querySelector('.js-permalink-shortcut').href;
}

function ghOpenHelp(where='here') {
    dactyl.open('https://help.github.com/', where);
    window.setTimeout(()=>dactyl.execute('normal gi'), 1200);
}

function ghConvertUrlToRaw(url) {
    [user, repo, relpath] = ghGetUrlComponents(url);
    raw_relpath = relpath.replace(/^\/(blob|tree)\//, '/');
    var rawurl = `https://raw.githubusercontent.com/${user}/${repo}${raw_relpath}`
    return rawurl;
}

function ghGetPRURL() {
    var forkBranch = content.document.querySelector('.commit-ref.head-ref').title;
    var [userRepo,branch] = forkBranch.split(":");
    var [user,repo] = userRepo.split("/");
    var url = `https://github.com/${user}/${repo}/tree/${branch}`
    return url;
    // var regex = /[^:]+:\/\/github.com\/([^/]+)\/?([^/#?]+)?(\/.*)?/;
}

function ghYankSHA(elt) {
    if (elt.classList.contains('js-zeroclipboard'))
        utils.yankWithMsg(elt.getAttribute('data-clipboard-text'));
    else
        utils.yankWithMsg(elt.textContent.trim());
}

function ghFork() {
    var button = getSelectorWithMatchingAttribute('button', 'title', /^fork/i)[0];
    button.click();
}

function ghStar() {
    var starBtn = content.document.querySelector('form.unstarred>button');
    var unstarBtn = content.document.querySelector('form.starred>button');
    var starred_p = ghStarInfo()[0]=="Unstar";
    if (starred_p)
        unstarBtn.click();
    else
        starBtn.click();
}

function ghStarInfo() {
    var starContainer = content.document.querySelector('.starring-container');
    var data = starContainer.innerText.split("\n");
    var starred_p = data[0].trim();
    var n = parseInt(data[1].replace(/,/g, ""));
    return [starred_p, n];
}

function ghGistCleanup(keepComments=true, keepAvatars=null) {
    if (!keepComments) {
        isolateSelectors(".file", ".js-discussion");
        removeSelectors(".discussion-timeline-actions");
    } else {
        isolateSelectors(".file");
    }

    if (!keepAvatars) removeSelectors("img.avatar");
}

function ghGotoRepoRootLevel(count) {
    var url = `https://github.com/${ghGetUserAndRepo().join('/')}`;
    var regex = "^" + url + "$";
    openOrSelectTab(url, count?"tab":"here", regex);
}

EOF

" ,-----------------,
" | Help.Github.com |
" '-----------------'
group githubhelp -locations=help.github.com

map <site>c  -description "Click README.md" -js ghhelpTidy();

js <<EOF
function ghhelpTidy() {
    isolateSelectors(".article");
    removeSelectors(".support-footer");
    var newstyle = content.document.createElement("style");
    newstyle.innerText = ".article { margin: 0 60px; }"
    content.document.head.appendChild(newstyle);
}
EOF


group user

" -------------------------------------------------------------------------------
" ,-------,
" | Gmail |
" '-------'
" For the old-style GMail interface. "

group gmail -locations='https://www.google.com/gmail/*','mail.google.com'

js <<EOF

function gmailFilterScreen () {
    var filterlink = content.document.getElementsByTagName("tr")[2].getElementsByTagName("a")[1];
    if (filterlink.innerHTML === "Create&nbsp;a&nbsp;filter") {
        filterlink.click();
    }
}

function gmailFilterFillFrom (from) {
    var fromField = content.document.getElementsByName("cf1_from")[0];
    fromField.value=from;
    var nextStep = content.document.getElementsByName("nvp_bu_nxsb")[0];
    nextStep.click();
}

function gmailFilterFillToLabel (label) {
    var skipInputBox = content.document.getElementById("cf2_ar");
    var applyLabelBox = content.document.getElementById("cf2_cat");
    var alsoApplyBox = content.document.getElementsByName("irf")[0];
    var chooseLabelDropdown = content.document.getElementsByName("cf2_sel")[0];
    skipInputBox.checked = true;
    applyLabelBox.checked = true;
    alsoApplyBox.checked = true;
    chooseLabelDropdown.value = label;
    var createFilter = content.document.getElementsByName("nvp_bu_cftb")[0];
    createFilter.click();
    if (chooseLabelDropdown.value === label) {
        return value;
    } else {
        return null;
    }
}

function gmailFilterMailFrom (from, label) {
    // TODO: add callbacks
    var curT = gBrowser.selectedTab;
    var curTB = gBrowser.getBrowserForTab(curT);
    function doFillFrom() {
        curTB.removeEventListener("DOMContentLoaded", doFillFrom);
        function doFillLabel() {
            gmailFilterFillToLabel(label);
            curTB.removeEventListener("DOMContentLoaded", doFillLabel);
        }
        curTB.addEventListener("DOMContentLoaded", doFillLabel);
        gmailFilterFillFrom(from);
    }
    curTB.addEventListener("DOMContentLoaded", doFillFrom);
    gmailFilterScreen();
}

function gmailCheckAll() {
    for (elt of content.document.querySelectorAll('td input'))
        if (elt.type == "checkbox")
            elt.checked = true;
}

function gmailUncheckAll() {
    for (elt of content.document.querySelectorAll('td input'))
        if (elt.type == "checkbox")
            elt.checked = false;
}

function gmailToggleAllCheckboxes() {
    for (elt of content.document.querySelectorAll('td input'))
        if (elt.type == "checkbox")
            elt.checked = !elt.checked;
}

function gmailSelectedAction(act=null) {
    // for search results page (green)
    // TODO: generalize for inbox page (blue)
    switch (act) {
        case 'archive': act = 'arch';  break;
        case 'read':    act = 'rd';  break;
        case 'unread':  act = 'ur';  break;
        case 'star':    act = 'st';  break;
        case 'unstar':  act = 'xst'; break;
    }
    var actselect = content.document.querySelector('input + select');
    if (act !== null)
        actselect.value = act;
    return actselect.value;
}

function gmailGo() {
    var gobutton = content.document.querySelector('td select + input');
    gobutton.click();
}

function gmailInboxArchive() {
    // archive in inbox & similar views
    var archbutton = content.document.querySelector('h2 + table input');
    if (archbutton.name === 'nvp_a_arch') {
        archbutton.click();
        return true;
    }
    else return false;
}

function gmailArchive() {
    var done = gmailInboxArchive();
    if (!done) {
        gmailSelectedAction('archive');
        gmailGo();
    }
}

function gmailToggleBasic() {
    var basicLink = getSelectorWithMatchingAttribute('input', 'value', 'Load basic HTML');
    if (basicLink.length) {
        basicLink[0].click();
        return "basic";
    } else {
        dactyl.open("https://mail.google.com/mail/u/0/#inbox");
        return "standard";
    }
}

EOF

map <site>= -ex gmailcheckall
map <site>- -ex gmailuncheckall
map <site><Return> -ex gmailtoggleallcheckboxes
map <site>A -ex gmailarchivechecked
map <site>o  -description "(show bindings: Goto)" -js CommandExMode().open("showkeys <site>o")
map <site>o8 -description "Goto Starred" -js clickSelectorByText("a", "Starred");
map <site>oc -description "Goto Contacts" -js clickSelectorByText("a", "Contacts");
map <site>od -description "Goto Drafts" -js clickSelectorByText("a", "Drafts");
map <site>of -description "Goto Create a filter" -js clickSelectorByText("a", /Create\sa\sfilter/);
map <site>oi -description "Goto Inbox" -js clickSelectorByText("a", "Inbox");
map <site>ol -description "Goto Edit labels" -js clickSelectorByText("a", "Edit labels");
map <site>on -description "Goto Compose New" -js clickSelectorByText("a", "Compose");
map <site>oo -description "Goto Search Options" -js clickSelectorByText("a", /search\soptions/);
map <site>os -description "Goto Sent Mail" -js clickSelectorByText("a", "Sent Mail");
map <site>ot -description "Goto Trash" -js clickSelectorByText("a", "Trash");
map <site>tb -description "Toggle basic/standard" -js gmailToggleBasic();

command! gmailcheckall
    \ -description "Check all checkboxes on page."
    \ -js gmailCheckAll();

command! gmailuncheckall
    \ -description "Uncheck all checkboxes on page."
    \ -js gmailUncheckAll();

command! gmailtoggleallcheckboxes
    \ -description "Toggle all checkboxes on page."
    \ -js gmailToggleAllCheckboxes();

command! gmailcreatefilter
    \ -description "Create a filter for mail from $1, archive to label $2"
    \ -nargs=1
    \ -js gmailFilterMailFrom(args[0], args[1]);

command! gmailcreatefiltertonewsletters
    \ -description "Create a filter for mail from $1, archive to label MISC/newsletter"
    \ -nargs=1
    \ -js gmailFilterMailFrom(args[0], "MISC/newsletter");

command! gmailarchivechecked -js gmailArchive();
command! -nargs=1 gmailactiononchecked  -js gmailSelectedAction(args[0]); gmailGo();
command! gmailmarkasread    gmailactiononchecked read
command! gmailmarkasunread  gmailactiononchecked unread
command! gmailstar          gmailactiononchecked star
command! gmailunstar        gmailactiononchecked unstar
command! -nargs=1 gmailaddlabel    -js gmailSelectedAction('ac_'+args[0]); gmailGo();
command! -nargs=1 gmailremovelabel -js gmailSelectedAction('rc_'+args[0]); gmailGo();

 group user

" -------------------------------------------------------------------------------
" ,---------,
" | GNU.org |
" '---------'
group gnu -locations=www.gnu.org/*
map <site>u -ex gnugoup

autocmd! -group gnu

command! gnugoup -js gnuGoUp();
js <<EOF
function gnuGoUp() {
    var links = Array.from(content.document.getElementsByTagName('a'));
    var uplink = links.filter(e=>e.accessKey=="u")[0];
    uplink.click();
}
EOF

group user

" -------------------------------------------------------------------------------
" ,-----------,
" | GoGoAnime |
" '-----------'
group gogoanime -locations=gogoanime.io

js <<EOF

function togglePlay() {
    var player = content.document.getElementById("my_video_1");
    var playButton = player.getElementsByClassName("vjs-play-control")[0];
    playButton.click();
}

function toggleFullscreen() {
    var player = content.document.getElementById("my_video_1");
    var fullscreenButton = player.getElementsByClassName("vjs-fullscreen-control")[0];
    fullscreenButton.click();
}

EOF

command! toggleplay -description "GoGoAnime.io: Toggle Play/Pause" -js togglePlay();
command! togglefullscreen -description "GoGoAnime.io: Toggle Fullscreen" -js toggleFullscreen();
map <Space> -ex toggleplay
map <C-f11> -ex togglefullscreen

group user

" -------------------------------------------------------------------------------
" ,--------,
" | Google |
" '--------'

" Google definitions
command! ggdef -nargs=1 -js googledef(args[0]);
map <leader>gd :ggdef<Space>

js <<EOF

function googledef (word) {
    "FIXME: event listener not working"
    var newtab = gBrowser.addTab(`https://www.google.com.au/search?q=define:${word}`);
    var tb = gBrowser.getBrowserForTab(newtab);
    var callback = function () {
        googleDefExpand();
        tb.removeEventListener("domloaded", callback, false);
    };
    tb.addEventListener("domloaded", callback, false);
    gBrowser.selectedTab = newtab;
}

EOF

" ===== GROUP START =====

group google -locations=https://www.google.com*

js <<EOF

" FIXME: completion drop-down remains open after search "
function googleSearchBox(s) {
    var isTextField = function(e) { return (e.getAttribute("type") == "text"); }
    var isSubmitButton = function(e) { return (e.getAttribute("type") == "submit"); }
    var inputElts = content.document.querySelectorAll("input,button");
    var searchbox = [].find.call(inputElts, isTextField);
    searchbox.value = s;
    var searchbutton = [].find.call(inputElts, isSubmitButton);
    searchbutton.click();
}

function googleRemoveQuotes() {
    var quotere = /"|'|%22/g;
    dactyl.open(buffer.URL.replace(quotere, ''),
                dactyl.CURRENT_TAB);
}

function googleDefExpand() {
    var div = content.document.getElementById('uid_0');
    var link = div.getElementsByClassName('xcae')[0];
    link.click();
};

function googleYankCiteURL() {
    hints.show("ɡ");
    window.setTimeout(
        ()=>utils.cbWrite(window._dactylresult),
        2000);
}

function googleGetImagesUrl() {
    var imgLinks = getSelectorByText("a", /^images$/i);
    return (imgLinks.length > 1) ? imgLinks[1].href : imgLinks[0].href;
}

EOF

command! searchbox -description "Enter string search box." -nargs="*" -js googleSearchBox(args.join(' '));

" -----
" hints
" -----
set eht+=[ɡ]:cite
js hints.addMode("ɡ", "Get result URL", e=>{ window._dactylresult=e.innerText.trim().replace(/ .*$/,''); });

map <site>y
\    -description "Yank URL [HINTS]"
\    -js googleYankCiteURL();

map <site>c  -description "Pagezipper: continuous paging" -ex pagezipper
map <site>d  -description "Google definitions: expand" -js googleDefExpand();
map <site>gl -description "restrict search to pages in a specific language" -b O&lr=lang_
map <site>gc -description "restrict search to pages originating in a specific country" -b O&cr=
map <site>oi -description "Goto images" -js openOrSelectTab(googleGetImagesUrl(), count?"tab":"here");
map <site>s  -description "Enter query in search box" -b :searchbox<Space>
map <site>\' -js googleRemoveQuotes();

group user

" -----------------------------------------------------------------------------
" ,------------------,
" | Google Translate |
" '------------------'

group gtrans -locations='.*://translate.google.com.*'

js <<EOF
function gtrGetSource() {
    var textarea = content.document.getElementById('source');
    return textarea.value;
}

function gtrTextBoxFontSize(fontsize) {
    var tarea = content.document.getElementById('source');
    tarea.style['font-size']=`${fontsize}pt`;
}

function gtrTextBoxToggleFontSize() {
    var tarea = content.document.getElementById('source');
    var oldsize = tarea.style['font-size'];
    if (isNaN(parseInt(oldsize)) || parseInt(oldsize)<16)
        tarea.style['font-size']=`16pt`;
    else
        tarea.style['font-size']=`12pt`;
}
EOF

command! gtryanksource
    \ -description "Copy contents of source area to clipboard"
    \ -js utils.yankWithMsg(gtrGetSource());
command! gtrfontsize
    \ -nargs=1
    \ -description "Set font size for textarea"
    \ -js gtrTextBoxFontSize(parseInt(args[0]));
command! gtrtogglefontsize
    \ -description "Toggle font size for textarea"
    \ -js gtrTextBoxToggleFontSize();

map <site>if -description "Toggle font size" -ex gtrtogglefontsize
map <site>iF -description "Set font size" :gtrfontsize<Space>
map <site>y  -description "Copy contents of source area to clipboard"   -ex gtryanksource

group user

" -----------------------------------------------------------------------------
" ,-----------------------------,
" | Google Translate (Japanese) |
" '-----------------------------'

" Note: Handwriting entry box:
" - S-Enter copies top candidate to input field.
" - Esc clears the box.

group gtransja -locations='.*://translate.google.com.*/#ja/en/.*','.*://translate.google.com.*/.*&sl=ja.*'
" group gtransja -locations='https://translate.google.com/#ja/en/*','https://translate.google.com.au/#ja/en/*','https://translate.google.com/#zh-CN/en/*','https://translate.google.com.au/#zh-CN/en/*'

set hinttags+="div.ita-hwt-candidate"

js <<EOF

var gtrImeShowHandWriteInput = function() {
    content.document.getElementsByClassName("ita-hwt-ime")[0].style = "left: 28px; top: 364px;"
}

var gtrImeHideHandWriteInput = function() {
    content.document.getElementsByClassName("ita-hwt-ime")[0].style = "-moz-user-select: none; left: 28px; top: 364px; display: none;"
}

var gtrImeIsVisibleHandWriteInput = function() {
    var hwBox = content.document.getElementsByClassName("ita-hwt-ime")[0];
    return ! hwBox.style.cssText.includes('display: none');
}

var gtrImeToggleHandWriteInput = function() {
    if (gtrImeIsVisibleHandWriteInput())
        gtrImeHideHandWriteInput();
    else
        gtrImeShowHandWriteInput();
}

function gtrImeGetCandidates() {
    var candidatesDiv = content.document.getElementsByClassName("ita-hwt-candidates")[0];
    return candidatesDiv.innerText;
}

function gtrImeGetCandidate(n=1) {
    var candidatesDiv = content.document.getElementsByClassName("ita-hwt-candidates")[0];
    var candidateDiv = candidatesDiv.children[n-1];
    return candidateDiv.innerText;
}

function gtrImeSelectCandidate(n=1) {
    var candidatesDiv = content.document.getElementsByClassName("ita-hwt-candidates")[0];
    var candidateDiv = candidatesDiv.children[n-1];
    return candidateDiv.click();
}

function gtrImeCopyCandidate(n=1) {
    var candidatesDiv = content.document.getElementsByClassName("ita-hwt-candidates")[0];
    var candidateDiv = candidatesDiv.children[n-1];
    dactyl.clipboardWrite(candidateDiv.innerText);
    return candidateDiv.innerText;
}

function gtrImeMoveHandWriteBox(h="365px") {
    var hwBox = content.document.getElementsByClassName("ita-hwt-ime")[0];
    hwBox.style.top = h;
}

function gtrImeSetWidth(w) {
    var hwBox = content.document.getElementsByClassName("ita-hwt-ime")[0];
    hwBox.style.width = w;
}

function gtrImeGetWidth() {
    var hwBox = content.document.getElementsByClassName("ita-hwt-ime")[0];
    return hwBox.style.width;
}

function gtrJishoSearchSource() {
    var src = gtrGetSource();
    var ss = src.split(/\s+/);
    jishoMultiSearch.apply(null, ss);
}

function gtrJishoKanjiSearchSource(where='tab') {
    var src = gtrGetSource();
    jishoKanjiSearch(src, where);
}

EOF

command! hwon
    \ -description "Show Handwritten Input box. With [!], toggle"
    \ -bang
    \ -js bang ? gtrImeToggleHandWriteInput() : gtrImeShowHandWriteInput();
command! hwoff
    \ -description "Hide Handwritten Input box"
    \ -js gtrImeHideHandWriteInput();
command! hwboxrepos
    \ -description "Reposition Handwritten Input box"
    \ -js gtrImeMoveHandWriteBox();
command! hwgetwidth
    \ -description "Show width of Handwritten input box"
    \ -js dactyl.utils.message(gtrImeGetWidth());
command! hwsetwidth
    \ -description "Set width of Handwritten Input box"
    \ -nargs=?
    \ -js gtrImeSetWidth((args[0] || "425") + "px");
command! hwtogglewidth
    \ -description "Toggle normal-width/wide IME box"
    \ -js if (gtrImeGetWidth() != "800px") gtrImeSetWidth("800px"); else gtrImeSetWidth("425px");
command! hwjishosearch
    \ -description "Search jisho for words in source"
    \ -js gtrJishoSearchSource();
command! hwjishokanjisearch
    \ -bang
    \ -description "Search jisho for kanji in source"
    \ -js gtrJishoKanjiSearchSource(bang?'here':'tab');

map <site>h        -description "HW input box: toggle" -js gtrImeToggleHandWriteInput()
map <site>k        -description "Open Jisho.org kanji page (new tab)"
    \ -js dactyl.open(`http://jisho.org/search/${gtrImeGetCandidate()}%23kanji`, {where:dactyl.NEW_TAB})
map <site>K        -description "Open Jisho.org kanji page (current tab)"
    \ -js dactyl.open(`http://jisho.org/search/${gtrImeGetCandidate()}%23kanji`)
map <site>l        -description "HW input box: reposition"                    -js gtrImeMoveHandWriteBox();
map <site>sk       -description "Search jisho for kanji in source (new tab)"  -ex hwjishokanjisearch
map <site>sK       -description "Search jisho for kanji in source (this tab)" -ex hwjishokanjisearch!
map <site>ss       -description "Search jisho for words in source"            -ex hwjishosearch
map <site>w        -description "HW input box: toggle width"                  -ex hwtogglewidth
map <SPACE><SPACE> -description "HW input box: show"                          -js gtrImeShowHandWriteInput();
map <site><C-l>    -description "HW input box: reposition"                    -js gtrImeMoveHandWriteBox();
map <site><C-S-L>  -description "HW input box: toggle width"                  -ex hwtogglewidth

group user

" -----------------------------------------------------------------------------
" ,----------------,
" | Graphemica.com |
" '----------------'

js <<EOF

var graphemicaCharSelect = function (words) {
    var s = words.join(' ');
    dactyl.execute(`tabopen http://graphemica.com/search?q=${s}`);
    var charselectListener = function () {
        dactyl.execute('normal <link_desc>');
        document.removeEventListener("DOMContentLoaded", charselectListener, false);
    };
    document.addEventListener("DOMContentLoaded", charselectListener, false);
}

EOF

command! graphemicacharselect
    \ -desc "Search for a character on Graphemica.com and select with hints to copy to clipboard."
    \ -nargs=*
    \ -js graphemicaCharSelect(args);

" -------------------------------------------------------------------------------
" ,--------------------,
" | HouseOfVape.com.au |
" '--------------------'
group houseofvape -locations=houseofvape.com.au

js <<EOF

function hovShowPrices() {
    var articles = content.document.getElementsByTagName('article');
    for (article of articles) {
        var info = article.getElementsByClassName('product-info')[0];
        var name = article.getElementsByTagName('p')[0];
        name.innerHTML = name.innerHTML + info.innerHTML;
        name.style.height = "150px";
    }
}

EOF

command! hovshowprices
    \ -description "Show prices below product names"
    \ -js hovShowPrices();
map cc -ex hovshowprices


group user

" -------------------------------------------------------------------------------
" ,-------,
" | Imgur |
" '-------'
group imgur -locations=imgur.com

js <<EOF

function imgurDL() {
    var url = buffer.URL;
    var urlRegex = /https?:\/\/imgur.com\/([^/]+)\/(.+)/;
    var match = url.match(urlRegex);
    if (match) {
        var title = content.document.querySelector('.post-title').innerText;
        utils.yankWithMsg(title);
        var optionLinks = Array.from(content.document.querySelectorAll('.post-action-option'));
        var dlLink = optionLinks.filter(l=>l.innerText.match(/Download Post/))[0];
        if (dlLink) dlLink.click();
        return true;
    } else return false;
}

EOF

command! imgurdl
    \ -description "Copy title to clipboard and download album / gallery image"
    \ -js imgurDL();

map <site>d -ex imgurdl

group user

" -------------------------------------------------------------------------------
" ,-----------------,
" | JacksonsArt.com |
" '-----------------'
group jacksons -locations=jacksonsart.com

js <<EOF
function jacksonsartCount() {
    var elts = getSelectorWithMatchingAttribute('input', 'title', 'Qty');
    if (elts.length) {
        return elts.map(e=>Number(e.value)).reduce((n,s)=>n+s);
    }
}
function jacksonsartItemNames() {
    return getSelectors(".cart .product-name").map(e=>e.innerText.replace("\n", "\t"));
}
function jacksonsartItemUrls() {
    return getSelectors(".cart .product-name>a").map(e=>e.href);
}
function jacksonsartGetCartTotal() {
    var s = getSelectorByText('td',/grand total/i)[0].nextElementSibling.textContent.trim();
    return Number(s.match(/\$(\d+\.\d\d)/)[1]);
}
function jacksonsartToggleAU() {
    var url = buffer.URL;
    toggleUrl("www.jacksonsart.com/en-au/", "www.jacksonsart.com/");
}
function jacksonsartShowShippingInfo(where) {
    openAndRunCode("https://www.jacksonsart.com/en-au/shipping-info", ()=>getSelectorByText("h2",/international shipping/i)[0].scrollIntoView());
}
EOF

map <site>n -description "Count items" -js utils.message("Number of items: " + jacksonsartCount());

map <site>o      -description "(show bindings: Goto)" -js CommandExMode().open("showkeys <site>o")
map <site>o<C-h> -description "(show bindings: Goto)" -js CommandExMode().open("showkeys <site>o")
map <site>oc -description "Goto cart" -js openOrSelectTab("https://www.jacksonsart.com/en-au/checkout/cart/", count?"tab":"here");
map <site>oo -description "Goto orders" -js openOrSelectTab("https://www.jacksonsart.com/en-au/sales/order/history/", count?"tab":"here");
map <site>ol -description "Goto login" -js openOrSelectTab("https://www.jacksonsart.com/en-au/customer/account/login/?___SID=S", count?"tab":"here");
map <site>os -description "Goto shipping information" -js jacksonsartShowShippingInfo(count?"tab":"here");
map <site>ow -description "Goto wishlist" -js openOrSelectTab("https://www.jacksonsart.com/en-au/wishlist/", count?"tab":"here");

map <site>s
\    -description "Search"
\    -js CommandExMode().open("jacksonsartSearch"+(count?"! ":" "));
map <site>;s
\    -description "Search for clipboard text"
\    -js openOrSelectTab(`https://www.jacksonsart.com/en-au/search/?limit=60&q=${readFromClipboard()}`, count?"tab":"here");
map <site>ta -description "Toggles Australian site" -js jacksonsartToggleAU();
map <site>v -description "Search for clipboard text" <site>;s
map <site>yy
\    -description "Copy cart items"
\    -js utils.cbWriteCollection(jacksonsartItemNames());
map <site>yu
\    -description "Copy cart items URLs"
\    -js var urls=jacksonsartItemUrls(); utils.cbWriteCollection(urls); window._dactylJacksonsartItems=_itemUrls=urls;
map <site>4
\    -description "Cart total"
\    -js utils.message("Cart total: " + jacksonsartGetCartTotal());

command! jacksonsartOpenAllItemPages
\    -js jacksonsartItemUrls().forEach(u=>dactyl.execute("background tabopen " + u));
command! jacksonsartSearch
\    -nargs *
\    -bang
\    -js dactyl.open("https://www.jacksonsart.com/en-au/search/?limit=60&q="+args.join(" "), bang?"tab":"here");

group user


" -------------------------------------------------------------------------------
" ,-----------------,
" | Jacksons.com.au |
" '-----------------'
group jacksonsau -locations=jacksons.com.au

js <<EOF
function jacksonsAddToCart(n) {
    var inputs = content.document.querySelectorAll("input.quantity");
    if (inputs.length == 1) {
        var input = inputs[0];
        if (input.value == "0" || n) input.value = String(n||1);
    }
    clickSelector("#addtocart");
}

function jacksonsGo(count) {
    var url = buffer.URL;
    if (url.match("https://www.jacksons.com.au/product/")) {
        jacksonsAddToCart(count);
    } else if (url.match("https://www.jacksons.com.au/cart.php")) {
        if (count == "0") clickSelector("#continue");
        else clickSelector("#checkout");
    }
}
EOF

map <site>c  -description "Go (add to cart/checkout[0 count=continue])" -js jacksonsGo(count);
map <site>o  -description "(show bindings: Goto)" -js CommandExMode().open("showkeys <site>o")
map <site>oa
\    -description "Goto account"
\    -js openOrSelectTab("https://www.jacksons.com.au/account.php", count?"tab":"here");
map <site>oc
\    -description "Goto cart"
\    -js openOrSelectTab("https://www.jacksons.com.au/cart.php", count?"tab":"here");
map <site>oo
\    -description "Goto orders"
\    -js openOrSelectTab("https://www.jacksons.com.au/order.php", count?"tab":"here");

group user


" -------------------------------------------------------------------------------
" ,---------------------,
" | J HTTP SERVER (JHS) |
" '---------------------'

group jserver -locations=http://127.0.0.1:65001/jijx,http://127.0.0.1:65001/jfile,http://127.0.0.1:65001/jfiles,http://127.0.0.1:65001/jijs,http://127.0.0.1:65001/jfif,http://127.0.0.1:65001/jal,http://127.0.0.1:65001/jhelp,http://localhost:65001/jijx,http://localhost:65001/jfile,http://localhost:65001/jfiles,http://localhost:65001/jijs,http://localhost:65001/jfif,http://localhost:65001/jal,http://localhost:65001/jhelp

js <<EOF

function jCopyCellToPrompt(cell) {
    var cellText = cell.innerText;
    var prompt = content.document.getElementById("prompt");
    prompt.innerText = cellText;
    buffer.followLink(prompt, dactyl.CURRENT_TAB);
}

EOF

" === hint modes === "
set eht+=🅹:.log
js hints.addMode("🅹", "Select Cell", jCopyCellToPrompt);
map <site>v -description "Copy cell to prompt" -js hints.show('🅹');
set eht+=🄹:.log
js hints.addMode("🄹", "Select Cell", e=>utils.yankWithMsg(e.innerText));

" === bindings === "
map <site>y -description "Copy cell to clipboard" -js hints.show('🄹');
map <site>c
    \ -description "Focus Prompt"
    \ -js buffer.followLink(content.document.getElementById('prompt'), dactyl.CURRENT_TAB);
map -modes normal,insert <A-p> -description "Previous cell" -js jCopyPreviousCellToPrompt();
map -modes normal,insert <A-n> -description "Next cell" -js jCopyNextCellToPrompt();
map -modes insert <C-u> -description "Clear prompt" -js jClearPrompt();

map <site>o<C-h> -description "(show bindings)" -js CommandExMode().open("showkeys <site>o")
map <site>o      -description "(show bindings)" -js CommandExMode().open("showkeys <site>o")
map <site>oo -description "Goto JIJX" -ex open http://127.0.0.1:65001/jijx
map <site>of -description "Goto jfile" -ex open http://127.0.0.1:65001/jfile
map <site>oF -description "Goto jfiles" -ex open http://127.0.0.1:65001/jfiles
map <site>oj -description "Goto JIJS" -ex open http://127.0.0.1:65001/jijs
map <site>o/ -description "Goto JFIF (search)" -ex open http://127.0.0.1:65001/jfif
map <site>ok -description "Goto JAL (packages)" -ex open http://127.0.0.1:65001/jal
map <site>oh -description "Goto jhelp" -ex open http://127.0.0.1:65001/jhelp

js <<EOF

var jLastSelectedCell = null;
var jCurrentPromptCell = null;

function jCopyCellNToPrompt(n) {
    var cells = Array.from(content.document.getElementsByClassName("log"));
    var cell = cells[n-1];
    jLastSelectedCell = n;
    var prompt = content.document.getElementById("prompt");
    prompt.innerText = cell.innerText;
}

function jCopyPreviousCellToPrompt() {
    var cells = Array.from(content.document.getElementsByClassName("log"));
    var N = cells.length;
    if (jCurrentPromptCell !== N) {
        jCurrentPromptCell = N;
        jLastSelectedCell = N;
    }
    if (jLastSelectedCell === null)
        jLastSelectedCell = N;
    // new target cell (1-based)
    var n = Math.max(1, jLastSelectedCell - 1);
    jCopyCellNToPrompt(n);
}

function jCopyNextCellToPrompt() {
    var cells = Array.from(content.document.getElementsByClassName("log"));
    var N = cells.length;
    if (jCurrentPromptCell !== N) {
        jCurrentPromptCell = N;
        jLastSelectedCell = N;
    }
    if (jLastSelectedCell === null)
        jLastSelectedCell = N;
    // new target cell (1-based)
    var n = Math.min(N, jLastSelectedCell + 1);
    jCopyCellNToPrompt(n);
}

function jClearPrompt() {
    var prompt = content.document.getElementById("prompt");
    prompt.innerText = "   ";
}

EOF

group user

" -------------------------------------------------------------------------------
" ,-----------,
" | JapanDict |
" '-----------'
group japandict -locations=japandict.com

map ck -js japandictToggleKanji();

js <<EOF

var japandictToggleKanji = function() {
    var url = buffer.URL;
    var kanjiurl =    'https://www.japandict.com/kanji/';
    var nonkanjiurl = 'https://www.japandict.com/';
    if (url.startsWith(kanjiurl))
        newurl = url.replace(kanjiurl, nonkanjiurl);
    else
        newurl = url.replace(nonkanjiurl, kanjiurl);
    dactyl.open(newurl, {where:dactyl.CURRENT_TAB});
}


EOF

group user

" -------------------------------------------------------------------------------
" ,---------------------------------,
" | Japanese Compound Verb Database |
" '---------------------------------'

js <<EOF
function japDoSearchCompVerb(type, s) {
    var searchComp = content.document.getElementById('V1_V2_mode');
    var searchV1 = content.document.getElementById('V1_mode');
    var searchV2 = content.document.getElementById('V2_mode');
    switch (type) {
      case 0:
        searchComp.click();
        break;
      case 1:
        searchV1.click();
        break;
      case 2:
        searchV2.click();
        break;
    } ;
    var searchbox = content.document.getElementById('searchbox');
    searchbox.value=s;
    var doClick = function(){
        var searchbutton = content.document.getElementById('filterButton');
        searchbutton.click();
    }
    window.setTimeout(doClick, 1500);
    return true;
}

function japSearchCompVerb(type, s) {
    var newtab = gBrowser.addTab('http://vvlexicon.ninjal.ac.jp/db/');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    japSearchCompCallback = function() { japDoSearchCompVerb(type, s) };
    tb.addEventListener("DOMContentLoaded", japSearchCompCallback);
}
EOF

command! jcompvb
\ -desc "Search for japanese compound verb"
\ -nargs=1
\ -js japSearchCompVerb(0, args)
command! jcompvb1
\ -desc "Search for japanese compound verb by verb 1"
\ -nargs=1
\ -js japSearchCompVerb(1, args)
command! jcompvb2
\ -desc "Search for japanese compound verb by verb 2"
\ -nargs=1
\ -js japSearchCompVerb(2, args)
command! jdocompvb2
\ -desc "Search for japanese compound verb by verb 2"
\ -nargs=1
\ -js japDoSearchCompVerb(2, args)

" -------------------------------------------------------------------------------
group vvlex -locations=vvlexicon.ninjal.ac.jp

js <<EOF
function vvlexSearchV1(s) {
    var searchbox = content.document.getElementById('searchbox');
    searchterm = s || searchbox.value;
    var v1search = content.document.getElementById('V1_mode');
    v1search.click();
    searchbox.value = searchterm;
    searchbox.value = searchterm;
    var doClick = function(){
        var searchbutton = content.document.getElementById('filterButton');
        searchbutton.click();
    }
    window.setTimeout(doClick, 1500);
}
function vvlexSearchV2(s) {
    var searchbox = content.document.getElementById('searchbox');
    searchterm = s || searchbox.value;
    var v2search = content.document.getElementById('V2_mode');
    v2search.click();
    searchbox.value = searchterm;
    var doClick = function(){
        var searchbutton = content.document.getElementById('filterButton');
        searchbutton.click();
    }
    window.setTimeout(doClick, 1500);
}
EOF

command! vvlexsearchv1 -nargs=? -js vvlexSearchV1(args[0]);
command! vvlexsearchv2 -nargs=? -js vvlexSearchV2(args[0]);
map <site>1 -js vvlexSearchV1();
map <site>2 -js vvlexSearchV2();

group user

" -------------------------------------------------------------------------------
" ,---------,
" | Jetpens |
" '---------'
group jetpens -locations=jetpens.com

js <<EOF
function jetpensGotoLogin(where) {
    /*
       If a login tab is already open, jump to it, otherwise open login page.
       If opening in a new tab (or starting from the logoff page, set redirect
       to the Shopping Cart. Otherwise, set redirect to the starting URL.
    */
    var url = buffer.URL;
    var redirect = where=="tab" || url.match("https://www.jetpens.com/logoff") ? "https://www.jetpens.com/cart" : url;
    openOrSelectTab(
        `https://www.jetpens.com/login?redirect_url=${encodeURIComponent(redirect)}`,
        where,
        /https:\/\/www\.jetpens\.com\/login.*/
    );
}
EOF

map <site>oa -description "Goto account" -js openOrSelectTab("https://www.jetpens.com/account", count?"tab":"here");
map <site>oc -description "Goto cart" -js openOrSelectTab("https://www.jetpens.com/cart", count?"tab":"here");
map <site>ol -description "Login" -js jetpensGotoLogin(count?"tab":"here");
map <site>oo -description "Goto orders" -js openOrSelectTab("https://www.jetpens.com/account/viewOrders", count?"tab":"here");

group user

" -----------------------------------------------------------------------------
" ,-----------,
" | JSBin.com |
" '-----------'
group jsbin -locations=jsbin.com

" remove all existing jsbin autocmds
autocmd! -group jsbin

map <site>m -description "Toggle menu" -js toggleMenu();
map <site>c -description "Hint menus" -js hints.show("ï");

js <<EOF

function toggleMenu() {
    var menu = content.document.getElementsByClassName('menu')[0];
    if (menu.className.endsWith(' open'))
        menu.className = menu.className.slice(0,-5);
    else
        menu.className += ' open';
}

EOF

set eht+=[ï]:.menu,'select[id=library]'

js <<EOF

hints.addMode(
  'ï','JSBin menu',
  function(e) {
    if (e.className.includes('toppanel-hide'))
      e.click();
    else if (e.className.includes(' open'))
        e.className = e.className.replace(' open', '');
    else
        e.className += ' open';
  }
);

EOF

group user

" -----------------------------------------------------------------------------
" ,-----------,
" | Jisho.org |
" '-----------'

js <<EOF

function jishoSearch(s, where='here', keepCase) {
    s = keepCase ? s : s.toLowerCase();
    dactyl.open(`http://jisho.org/search/${s}`, where);
}

function jishoKanjiSearch(s, where='here') {
    dactyl.open(`http://jisho.org/search/${s}%20%23kanji`, where);
}

function jishoMultiSearch(...ss) {
    for (s of ss)
        jishoSearch(s, dactyl.NEW_TAB);
}

EOF

command! cbjishosearch
    \ -bang -description "search on jisho.org"
    \ -js jishoSearch(dactyl.clipboardRead(), bang?'here':'tab');
command! cbkanjisearch
    \ -bang -description "kanji search on jisho.org"
    \ -js jishoKanjiSearch(dactyl.clipboardRead(), bang?'here':'tab');
command! jishomultisearch
    \ -nargs=* -description "search multiple words on jisho.org"
    \ -js jishoMultiSearch.apply(null, args);


" =====GROUP START=====

group jisho -locations=jisho.org

" remove all existing jisholautocmds
autocmd! -group jisho

map <site>fl     -description "Links drop down" -js hints.show("リ");
" <site>g  --  adjust page "
map <site>g      -description "(show bindings)" -js CommandExMode().open("showkeys <site>g")
map <lite>g<C-h> -description "(show bindings)" -js CommandExMode().open("showkeys <site>g")
map <site>gm     -description "Fix modal in viewport" -js jishoFixModal();
map <site>gs  -description "Halve the dimensions of stroke order diagrams"
\             -ex jishoshrinksod
map <site>gS  -description "Scale the dimensions of stroke order diagrams"
\             -b :jishoscalesod<Space>
map <site>k<C-h> -description "(show bindings)" -js CommandExMode().open("showkeys <site>k")
map <site>k      -description "(show bindings)" -js CommandExMode().open("showkeys <site>k")
" <site>o  --  Open (in new tab with count: in current tab)"
map <site>o      -description "(show bindings)" -js CommandExMode().open("showkeys <site>o")
map <site>o<C-h> -description "(show bindings)" -js CommandExMode().open("showkeys <site>o")
map <site>oe     -description "open sentence examples" -js count ? hints.show("た") : hints.show("だ");
map <site>ok     -description "open kanji details"     -js count ? hints.show("か") : hints.show("が");
map <site>ow     -description "search entry in Weblio" -js count ? hints.show("ヱ") : hints.show("ヹ");
" <site>t  --  Toggles "
map <site>t      -description "(show bindings)" -js CommandExMode().open("showkeys <site>t")
map <site>t<C-h> -description "(show bindings)" -js CommandExMode().open("showkeys <site>t")
map <site>tsd -description "Toggle heavy/light kanji style (definitions)"
\             -ex styletoggle -group jisho -name jisho-definitions-page-kanji-style
map <site>tsl -description "Toggle large kanji style (definitions)"
\             -ex styletoggle -group jisho -name jisho-large-kanji-style
map <site>tss -description "Toggle heavy/light kanji style (kanji details)"
\             -ex styletoggle -group jisho -name jisho-kanji-page-kanji-style
map <site>te     -description "Toggle between sentences page and regular results"  -ex jishotogglesentences
map <site>tk     -description "Toggle between kanji page and regular results"      -ex jishotogglekanji
map <site>tl     -description "Show all link lists"                                -ex jishotogglelinklists
map <site>tr     -description "Toggle kanji radical input dialog"                  -ex jishotoggleradicalinput
map <site>tR     -description "Toggle between kana and romaji"                     -ex jishotoggleromaji
" <site>y  --  Yank "
map <site>y<C -h> -description "(show bindings)" -js CommandExMode().open("showkeys <site>y")
map <site>y       -description "(show bindings)" -js CommandExMode().open("showkeys <site>y")
map <site>ye  -description "Yank entry"                    -js hints.show("ヤ");
map <site>yy  -description "Yank search term to clipboard" -ex jishoyanksearchterm
map <site>yp  -description "Yank kanji parts"              -ex jishokanjiyankparts

map <site>;   -description "select kanji radical"          -js hints.show("ぶ");
map <site><C-l> -description "Fix modal in viewport" -js jishoFixModal();

imap <A-k> <Space>#kanji

" -----------------
" jishotoggleromaji
" -----------------
js <<EOF

var jishoToggleRomaji = function() {
    var url = buffer.URL;
    var romtag = "%23romaji";
    if (url.includes(romtag))
        newurl = url.replace(romtag,"");
    else
        newurl = `${url}%23romaji`;
    dactyl.open(newurl);
}

var jishoToggleKanji = function() {
    var url = buffer.URL;
    var kanjitag = "%23kanji";
    if (url.includes(kanjitag))
        newurl = url.replace(kanjitag,"");
    else
        newurl = `${url} ${kanjitag}`;
    dactyl.open(newurl);
}

var jishoToggleSentences = function() {
    var url = buffer.URL;
    sentencetag = "%23sentences";
    if (url.includes(sentencetag))
        newurl = url.replace(sentencetag,"");
    else
        newurl = `${url} ${sentencetag}`;
    dactyl.open(newurl);
}

var jishoToggleRadicalInput = function() {
    var radicalButton = content.document.getElementById("radical_button");
    radicalButton.click();
}

function jishoGetSearchedForText() {
    var searchedforMsg = content.document.getElementById('the_corrector');
    if (!searchedforMsg) return null;
    var msgText = searchedforMsg.innerText;
    var re = /Searched for ([^ ]+)\./;
    var match = msgText.match(re);
    return match[1];
}

function jishoGetSearchTextFromURL() {
    var re = /https?:\/\/jisho.org\/search\/([^#]*[^# ])/;
    var match = decodeURIComponent(buffer.URL).match(re);
    return match[1];
}

function jishoGetSearchText() {
    var searchbox = content.document.getElementById('keyword');
    return searchbox.value;
}

function jishoGetCorrectedSearchText() {
    return jishoGetSearchedForText() || jishoGetSearchText();
}

function jishoKanjiAddLink(location, text) {
    var kanjiDetails = Array.from(content.document.getElementsByClassName("kanji details"));
    for (kanjidiv of kanjiDetails) {
        var links = kanjidiv.getElementsByClassName("inline-list")[0];
        var kanji = kanjidiv.getElementsByClassName('character')[0].innerText;
        location_ = location.replace("%s", kanji);
        text_ = text.replace("%s", kanji);
        var new_li = content.document.createElement("li");
        var new_a = content.document.createElement("a");
        new_a.href = location_;
        new_a.innerText = text_;
        new_li.appendChild(new_a);
        links.appendChild(new_li);
    }
}

function jishoKanjiParts() {
    var kanjidivs = Array.from(content.document.getElementsByClassName('kanji details'));
    var divs = content.document.getElementsByClassName('radicals');
    var links = A.concatMap(divs, d=>d.getElementsByTagName('a'));
    return links.map(e=>e.innerText);
}

EOF

" adds/removes #romaji tag to toggle between kana and romaji:

command! jishoyanksearchterm
    \ -description "Yank search term to clipboard"
    \ -js dactyl.utils.yankWithMsg(jishoGetCorrectedSearchText());

command! jishotoggleromaji
     \ -description "Toggle between kana and romaji"
     \ -js jishoToggleRomaji();

command! jishotoggleradicalinput
     \ -description "Toggle kanji radical input dialog"
     \ -js jishoToggleRadicalInput();

command! jishotogglekanji
     \ -description "Toggle between kanji page and regular results"
     \ -js jishoToggleKanji();

command! jishotogglesentences
     \ -description "Toggle between sentences page and regular results"
     \ -js jishoToggleSentences();

command! jishokanjiaddlink
    \ -description "args: HREF, TEXT. Add link to kanji. (%s is replaced by kanji)"
    \ -nargs=+ -js jishoKanjiAddLink(args[0], args[1]);
command! jishokanjiyankparts -js utils.yankWithMsg(jishoKanjiParts().join(''));

" ----------
" Hint modes
" ----------
" TODO: work out site/group-specific hinting.
"       - autocmd to reset eht and hints.addMode?
"       - use common dispatch function in hints.addMode?
"
set eht+=[かがたヤヱヹ]:div.concept_light-representation>span.text,.character
set eht+=[リ]:a[class="concept_light-status_link"]
set eht+=[ぶ]:li.radical.available,li.radical.selected

js <<EOF
var dec = decodeURIComponent;

hints.addMode('ヤ','yank entry', e => dactyl.clipboardWrite(e.innerText));
hints.addMode('ぶ','select kanji radical', e => e.click());
hints.addMode('リ','links drop down', e=>jishoToggleLinksUL(e.nextSibling));
hints.addMode('ヱ','search entry in Weblio',
              e => dactyl.open(`http://ejje.weblio.jp/content/${e.innerText}`, 'here'));
hints.addMode('ヹ','search entry in Weblio (new tab)',
              e => dactyl.open(`http://ejje.weblio.jp/content/${e.innerText}`, 'tab'));
hints.addMode(
    'か','open kanji details',
    e => dactyl.open(dec(`http://jisho.org/search/${e.textContent.trim()}%2523kanji`)));
hints.addMode(
    'が','open kanji details in new tab',
    e => dactyl.open(dec(`http://jisho.org/search/${e.textContent.trim()}%2523kanji`), {where:dactyl.NEW_TAB}));
hints.addMode(
    'た','open sentence examples',
    e => dactyl.open(dec(`http://jisho.org/search/${e.textContent.trim()}%2523sentences`)));
hints.addMode(
    'た','open sentence examples in new tab',
    e => dactyl.open(dec(`http://jisho.org/search/${e.textContent.trim()}%2523sentences`), {where:dactyl.NEW_TAB}));
EOF

command! jishohintopenkanji           -js hints.show("か");
command! jishohintopenkanjinewtab     -js hints.show("が");
command! jishohintopensentences       -js hints.show("た");
command! jishohintopensentencesnewtab -js hints.show("だ");
command! jishohintopenweblio          -js hints.show("ヱ");
command! jishohintopenweblionewtab    -js hints.show("ヹ");
command! jishohintselectradical       -js hints.show("ぶ");
command! jishohintyankentry           -js hints.show("ヤ");
command! jishohintclicklinks          -js hints.show("リ");

" -----------
" Kanji style
" -----------
style -name=jisho-kanji-page-kanji-style
\    jisho.org
\    .kanji .character, .kanji_light .character,
\    .kanji .character:hover, .kanji_light .character:hover {
\        font-family: "HiraMinPro-W3","Hiragino Mincho Pro W3","Hiragino Mincho Pro","ヒラギノ明朝 Pro W3",
\                     "游明朝",YuMincho,"HG明朝E","ＭＳ Ｐ明朝","MS PMincho","MS 明朝","MS Mincho",serif
\                     !important;
\    }
style -name=jisho-definitions-page-kanji-style
\    jisho.org
\    .concept_light-representation>.text {
\        font-family: "HiraMinPro-W3","Hiragino Mincho Pro W3","Hiragino Mincho Pro","ヒラギノ明朝 Pro W3",
\                     "游明朝",YuMincho,"HG明朝E","ＭＳ Ｐ明朝","MS PMincho","MS 明朝","MS Mincho",serif
\                     !important;
\    }
style -name=jisho-large-kanji-style
\    jisho.org
\    .concept_light-representation>.text {
\        font-size: 2em !important;
\    }
styledisable -name jisho-definitions-page-kanji-style
styledisable -name jisho-large-kanji-style

" -----------
" Modal style
" -----------
style -name=jisho-modal-fix-position-style
\    jisho.org
\    #inflection_modal {
\        display: block;
\        opacity: 1;
\        visibility: visible;
\        top: 727px;
\        position: fixed;
\    }
\    .reveal-modal-bg {
\        display: block;
\        position: fixed;
\        position: fixed;
\    }

" ---------------------
" Stroke order diagrams
" ---------------------
js <<EOF

function jishoScaleSOD(scale=0.5, ignore_min=false) {
    var svgelts=content.document.getElementsByTagName("svg");
    var MINHEIGHT = 40;

    // NOTE: sod class must be first or only class
    function isSOD(x) {
        return x.getAttribute('class').slice(0,20)=="stroke_order_diagram";
    }
    var sods = [].filter.call(svgelts, isSOD);

    // NOTE: assume length unit is "px" or other 2-char unit
    for (i=0; i<sods.length; ++i) {
        var style = sods[i].style;
        var newheight = parseInt(style.height) * scale;
        var newwidth = parseInt(style.width) * scale;

        // NOTE: crude test to see if previously shrunken
        if (!ignore_min && newheight<MINHEIGHT) continue;

        var hunit = style.height.slice(-2);
        var wunit = style.width.slice(-2);
        sods[i].setAttribute(
            "style",
            `height: ${newheight}${hunit}; width: ${newwidth}${wunit};`
        );
    }
}

EOF

command! jishoshrinksod
     \ -description "Halve the dimensions of stroke order diagrams"
     \ -js jishoScaleSOD();
command! jishoscalesod
     \ -description "Scale kanji stroke order diagrams by a factor"
     \ -nargs=?
     \ -js jishoScaleSOD(args[0], true);
command! ss
     \ -description "Scale kanji stroke order diagrams by a factor"
     \ -nargs=?
     \ -js jishoScaleSOD(args[0], true);

autocmd PageLoad jisho.org :jishoshrinksod

" ---------
" Modal Box
" ---------
" TODO: have :jishofixmodal applied automatically.

js <<EOF

function jishoFixModal() {
    var modal = content.document.getElementById('inflection_modal');
    var modalbg = content.document.getElementsByClassName('reveal-modal-bg')[0];
    var bgbasestyle = modalbg.getAttribute("style");
    modal && modal.setAttribute(
        "style",
        "display: block; opacity: 1; visibility: visible; top: 100px; position: fixed;"
    );
    modalbg.setAttribute("style", `${bgbasestyle}; position: fixed;`)
}

EOF

" -----------
" Entry Links
" -----------
js <<EOF

function jishoToggleAllLinkULs() {
    var linklists = content.document.getElementsByClassName("f-dropdown");
    for (i=0; i<linklists.length; ++i) {
        linklists[i].focus();
        var llstyle = linklists[i].style;
        leftvalmatch = llstyle.cssText.match(/left: *(-?\d+\w*);/);
        if (leftvalmatch && parseInt(leftvalmatch[1])>-200) {
            llstyle.cssText = "";
        } else {
            llstyle.cssText = "position: relative; left: -120px; top: 0;";
        }
    }
}

function jishoToggleLinksUL(ul) {
    ul.focus();
    var llstyle = ul.style;
    leftvalmatch = llstyle.cssText.match(/left: *(-?\d+\w*);/);
    if (leftvalmatch && parseInt(leftvalmatch[1])>-200) {
        llstyle.cssText = "";
    } else {
        llstyle.cssText = "position: relative; left: -120px; top: 0;";
    }
}

EOF

group user

" -------------------------------------------------------------------------------
" ,----------,
" | JPopAsia |
" '----------'
group jpopasia -locations=jpopasia.com

command! jpopcleanlyrics -js jpopasiaCleanLyrics();

map <site>c -ex jpopcleanlyrics

js <<EOF

function jpopasiaCleanLyrics() {
    var div = content.document.getElementById('tabLyrics');
    btns = Array.from(div.getElementsByClassName('btn-default'));
    btns.map(e=>e.remove());
    end = content.document.getElementById('lyricEnd_1');
    end.nextElementSibling.remove();
    end.nextElementSibling.remove();
    topLvlElts = content.document.body.childNodes;
    while (topLvlElts.length) topLvlElts[0].remove();
    content.document.body.appendChild(div);
}

EOF

group user

" -------------------------------------------------------------------------------
" ,--------,
" | Libgen |
" '--------'
group libgen -locations=libgen.io,libgen.pw,library1.org,lib1.org

command! libgendl -js libgenCopyFileNameAndDownload();
command! libgendetails -nargs 1 -js utils.yankWithMsg(libgenGetDetails(args[0]));
map <site>c -ex libgendl

js <<EOF

function libgenGetDetails(field) {
    var bibtextDiv = content.document.getElementById('bibtext');
    if (bibtextDiv) {
        var bibtext = bibtextDiv.value;
        var regex = RegExp(`${field} = +{([^}]+)}`)
        var match = bibtext.match(regex);
        return match ? match[1] : '';
    } else {
        var info = content.document.getElementById('info');
        switch(field) {
            case 'title':
                var elt = info.querySelector('h1');
                return elt && elt.innerText;
                break;
            case 'edition':
                break;
            case 'year':
                var elt = info.querySelector('p:nth-of-type(2)');
                var match = elt && elt.innerText.match(/Publisher.*Year: (\d\d\d\d)/);
                return match && match[1];
                break;
            case 'author':
                var elt = info.querySelector('p:first-of-type');
                return elt && elt.innerText.replace(/Author\(s\): */, '');
                break;
        }
    }
}

function libgenCopyFileNameAndDownload() {
        // "libgen.io or libgen.pw second page"
    var name = libgenGetDetails('title');
    var ed_raw = libgenGetDetails('edition') || "1";
    var ed_match = ed_raw.trim().match(/\d+/);
    var ed = ed_match ? indexToOrdinalString(ed_match[0]) : "1st";
    if (typeof ed == 'undefined') ed="1st";
    var year = libgenGetDetails('year');
    var filename = name +
                  (ed=="1st" ? '' : `, ${ed} ed`) +
                  (year ? ` (${year})` : '');
    utils.yankWithMsg(filename);
    utils.yankWithMsg(filename);
    var bibtextElt = content.document.getElementById('bibtext');
    if (bibtextElt) {
        var links = Array.from(content.document.querySelectorAll('a h2'));
        var link = links.find(a=>["download", "get"].includes(a.innerText.toLowerCase()));
        dactyl.open(link.parentNode.href);
    } else {
        // "first page"
        var cellLink = content.document.querySelector('td h2 a') ||
                       content.document.querySelector('body>table>tbody>tr>td>b>a');
        // if (cellLink && cellLink.innerText == "Open download page")
        if (cellLink) cellLink.click();
    }
}

EOF

" ,----------------,
" | gen.lib.rus.ec |
" '----------------'
group genlib -locations=gen.lib.rus.ec

js <<EOF

function genlibLibgen() {
    var link = content.document.querySelector('tbody :nth-child(2) :nth-child(3) a');
    if (!link) link = content.document.querySelector('tbody :nth-child(1) :nth-child(3) a');
    var title = link.innerText;
    var year = content.document.querySelector('tbody :nth-child(6) :nth-child(2)').innerText;
    var ed_raw = content.document.querySelector('tbody :nth-child(6) :nth-child(4)').innerText;
    var ed_match = ed_raw.trim().match(/\d+/);
    var ed = ed_match ? indexToOrdinalString(ed_match[0]) : "1st";
    if (typeof ed == 'undefined') ed="1st";
    var filename = title +
                   (ed=="1st" ? '' : `, ${ed} ed`) +
                   (year ? ` (${year})` : '');
    utils.yankWithMsg(filename);
    link.click();
}

function genlibGetTitle() {
    var rawtitle = buffer.title;
    var title_regex = /Library Genesis:[^-]+-(.*[^(])(\(\.*, (\d\d\d\d)\))?$/;
    var start_regex = /Library Genesis:[^-]+- (.*)$/;
    var title = rawtitle.match(start_regex)[1];
    var end_regex = /(.*\S) *\(.*, (\d\d\d\d)\)$/;
    var end_matches = title.match(end_regex);
    if (end_matches) {
        var book_title = end_matches[1];
        var book_year  = end_matches[2];
        title = `${book_title} (${book_year})`;
    }
    return title;
}

function genlibNextPage(k=1) {
    k = k || 1;
    var url = buffer.URL;
    var page_regex = /\Wpage=(\d+)/;
    var page_matches = url.match(page_regex);
    if (page_matches) {
        var page_expr = page_matches[0];
        var n_str = page_matches[1];
        var n = parseInt(n_str);
        var next_page_expr = page_expr.replace(n_str, String(n+k));
        var next_page = url.replace(page_expr, next_page_expr);
    } else if (url.includes("?")) {
        next_page = `${url}&page=${k+1}`;
    }
    else {
        next_page = `${url}?page=${k+1}`;
    }
    dactyl.open(next_page);
}

function genlibPreviousPage(k=1) {
    k = k || 1;
    var url = buffer.URL;
    var page_regex = /\Wpage=(\d+)/;
    var page_matches = url.match(page_regex);
    if (page_matches) {
        var page_expr = page_matches[0];
        var n_str = page_matches[1];
        var n = parseInt(n_str);
        var next_page_expr = n-k>1 ? page_expr.replace(n_str, String(n-k)) : "";
        var next_page = url.replace(page_expr, next_page_expr);
        dactyl.open(next_page);
    }
}

EOF

map <site>c -js genlibLibgen();
map <yank>t -js utils.yankWithMsg(genlibGetTitle());
map ]] -count -js genlibNextPage(count);
map [[ -count -js genlibPreviousPage(count);

group user

" -------------------------------------------------------------------------------
" ,-----------------,
" | MaggiSensei.com |
" '-----------------'
group maggiesensei -locations=maggiesensei.com
autocmd! -group maggiesensei

" For now, use :togglestylesembedded
" TODO: work out how to fix the style (the '.post-content' class has post in it).
command! maggiefix
    \ -description "Fix regions of missing content on maggiesensei.com"
    \ :togglestylesembedded<CR>

autocmd LocationChange :execute "emenu Tools.Web Developer Extension.CSS.Disable Styles.Disable Individual Style Sheet.http://maggiesensei.com/wp-content/themes/custom-community/style.css"
" autocmd LocationChange :emenu Tools.Web Developer Extension.CSS.Disable Styles.Disable Individual Style Sheet.http://maggiesensei.com/wp-content/themes/custom-community/style.css

js <<EOF
function maggieRemoveCruft(removeImgs=false) {
    var article = content.document.getElementsByClassName("post-content")[0];
    var body = content.document.getElementsByTagName("body")[0];
    for (i=body.children.length-1; i>=0; --i) {
        body.children[i].remove();
    }
    body.appendChild(article);
    article.style["background-color"]="white";
    article.style["margin"]="4em";
    article.style["padding"]="4em";
    var torem = content.document.getElementsByClassName("wp_social_bookmarking_light");
    if (torem.length) torem[0].remove();
    torem = content.document.getElementsByClassName("wp_social_bookmarking_light_clear");
    if (torem.length) torem[0].remove();
    if (removeImgs) {
        var imgs = content.document.getElementsByTagName("img");
        for (i=imgs.length-1; i>=0; --i) {
            imgs[i].remove();
        }
    }
}
EOF

command! maggieremovecruft -bang -js maggieRemoveCruft(bang);
map <site>c -js maggieRemoveCruft(count);

group user

" -------------------------------------------------------------------------------
" ,-----------------,
" | MangaReader.net |
" '-----------------'

js <<EOF

function mangareaderGetChapter(series, chapter) {
    var newtab = gBrowser.addTab(`http://www.mangareader.net/${series}/${chapter}`);
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        var imgsrc = content.document.getElementById('imgholder').firstChild.firstChild.src;
        var srcmatch = imgsrc.match(/(.*-)(\d+)[.](\w+)/);
        var srcpref = srcmatch[1];
        var srcnum = parseInt(srcmatch[2]);
        var srcext = srcmatch[3];
        var pageselect = content.document.getElementById('selectpage');
        var npages = parseInt(pageselect.innerText.match(/ *of (\d+)/)[1]);
        var pagerange = `$(seq ${srcnum} ${srcnum + npages - 1})`;
        var imgsrcparametrized = `${srcpref}$i.${srcext}`;
        var dir = `~/manga/dl/mangareader/${series}/${chapter}`;
        var file=`${dir}/$i.${srcext}`
        var looptext = `for i in ${pagerange}; do curl ${imgsrcparametrized} > ${file}; done`;
        dactyl.execute(`!mkdir -p ${dir}`);
        dactyl.execute(`!${looptext};`);
        gBrowser.removeCurrentTab();
    });
}

EOF

command! mangareadergetchapter -nargs=+ -js mangareaderGetChapter(args[0], args[1]);

" =====GROUP START=====

group mangareader -locations=mangareader.net

js <<EOF

function mangareaderGetNextChapter() {
    var url = buffer.URL;
    var urlmatch = url.match(/.*\/([^/]+)\/(\d+)/);
    var series = urlmatch[1];
    var chapter = urlmatch[2];
    var nextURL = `http://www.mangareader.net/${series}/${++chapter}`;
    var origtab = gBrowser.selectedTab;
    var newtab = gBrowser.addTab(`http://www.mangareader.net/${series}/${chapter}`);
    var tb = gBrowser.getBrowserForTab(newtab);
    gBrowser.selectedTab = newtab;
    gBrowser.removeTab(origtab);
    tb.loadURI(nextURL);
    var mangareaderGetNextListener = function () {
        var imgsrc = content.document.getElementById('imgholder').firstChild.firstChild.src;
        var srcmatch = imgsrc.match(/(.*-)(\d+)[.](\w+)/);
        var srcpref = srcmatch[1];
        var srcnum = parseInt(srcmatch[2]);
        var srcext = srcmatch[3];
        var pageselect = content.document.getElementById('selectpage');
        var npages = parseInt(pageselect.innerText.match(/ *of (\d+)/)[1]);
        var pagerange = `$(seq ${srcnum} ${srcnum + npages - 1})`;
        var imgsrcparametrized = `${srcpref}$i.${srcext}`;
        var dir = `~/manga/dl/mangareader/${series}/${chapter}`;
        var file=`${dir}/$i.${srcext}`
        var looptext = `for i in ${pagerange}; do curl ${imgsrcparametrized} > ${file}; done`;
        dactyl.execute(`!mkdir -p ${dir}`);
        dactyl.execute(`!${looptext};`);
        document.removeEventListener("DOMContentLoaded", mangareaderGetNextListener, false);
    };
    tb.addEventListener("DOMContentLoaded", mangareaderGetNextListener);
}

EOF

command! mangareadergetnextchapter -js mangareaderGetNextChapter();
map <site>c -js mangareaderGetNextChapter();

group user

" -------------------------------------------------------------------------------
" ,------------,
" | Medium.com |
" '------------'
group medium -locations=medium.com

map <site>c -description "Remove cruft" -ex isolateselector .section--body

group user

" -------------------------------------------------------------------------------
" ,-----------------,
" | MyAnimeList.net |
" '-----------------'
group mal -locations=myanimelist.net

js <<EOF

function malGetHeading() {
    return content.document.getElementsByTagName('h1')[0].innerText;
}

EOF

command! malyanktitle -js utils.yankWithMsg(malGetHeading());

map <site>y -ex malyanktitle

map <site>f
    \ -description "Hints mode: follow bold links"
    \ -js hints.show("ä");

group user

" -------------------------------------------------------------------------------
" ,-------------,
" | Netflix.com |
" '-------------'

group netflix -locations=netflix.com

command! netflixgotorow
\    -nargs=1
\    -complete custom,' (context) => {context.completions = netflixGetHeadingCompletions()}'
\    -js netflixScrollToRow(args[0]);
command! netflixplaypause
\    -js content.document.querySelector('.PlayerControls--button-control-row>button:first-of-type').click();
command! netflixgenre -description "Go to genre page"
\    -nargs=1
\    -complete custom,' (context) => {context.completions = netflixGenreList}'
\    -js openOrSelectTab("https://www.netflix.com/browse/genre/"+netflixGenres[args[0]], "here");

map <site>c  -description "Cleanup"               -js netflixCleanup();
map <site>f  -description "Select Cell [HINTS]"   -b :netflixcard<Space>
map <site>n  -description "Show Name"             -js netflixYankTitle();
map <site>oa -description "Open Account Settings"
\            -count -ex openorselect https://www.netflix.com/YourAccount <count>
map <site>og -description "Open Genre Page"
\            -count -b :netflixgenre<Space>
map <site>oh -description "Open Browse"
\            -count -ex openorselect https://www.netflix.com/browse <count>
map <site>ol -description "Open My List"
\            -count -ex openorselect https://www.netflix.com/browse/my-list <count>
map <site>op -description "Open My Profile"       -js netflixMyProfile();
map <site>os -description "Open My Subtitle Settings"
\            -count -ex openorselect https://www.netflix.com/SubtitlePreferences <count>
map <site>ov -description "Open My Playback Settings"
\            -count -ex openorselect https://www.netflix.com/HdToggle <count>
map <site>p  -description "Open link in Chrome"   -js hints.show("🄒");
map <site>r  -description "Scroll to Row"         -b :netflixgotorow<Space>
map <site>sh -description "Toggle header overlap" -js netflixToggleHeaderOverlap();
map <site>st -description "Toggle text links"     -js netflixToggleTextLinks();
map <site>/  -description "Search"                -js netflixSearch();

map <Up> -b <C-v><Up>
map <Down> -b <C-v><Down>

js <<EOF
function netflixSearch() {
    var searchIcon = document.querySelector('.icon-search');
    searchIcon.click();
}

function netflixCleanup() {
    removeSelectors(".static-image.image-layer", ".billboard-row", ".spotlight");
}

function netflixToggleHeaderOverlap() {
    var bodyview = content.document.getElementsByClassName('body-view')[0];
    if (bodyview.style.marginTop == '70px')
        bodyview.style.marginTop = '0';
    else
        bodyview.style.marginTop = '70px';
}

function netflixSearch() {
    var searchIcon = content.document.querySelector('.icon-search');
    searchIcon.click();
}

function netflixToggleTextLinks() {
    var cards = Array.from(content.document.getElementsByClassName('title-card'));
    cards.forEach(card => {
        var link = card.firstChild.firstChild;
        var href = link.href;
        var title = link.getAttribute('aria-label');
        var textlink = content.document.createElement('a');
        textlink.href = href;
        textlink.textContent = title;
        textlink.classList.add('cvimrc-added');
        textlink.onmouseover = 'this.style.background=white; this.style.color="rgb(34,34,34)"';
        textlink.onmouseout = 'this.style.background="rgb(34,34,34)"; this.style.color=white;';
        var alreadyAdded = card.getElementsByClassName('cvimrc-added');
        if (alreadyAdded.length==0)
            card.appendChild(textlink);
        else
            card.removeChild(alreadyAdded[0]);
    });
}

function netflixYankTitle() {
    var titlediv = content.document.querySelector('.player-status');
    var titlespans = Array.from(titlediv.getElementsByTagName('span'));
    var title = titlespans.map(e=>e.innerText).join(' - ');
    utils.cbWrite(title);
}

function netflixGetRows() {
    var elts = Array.from(content.document.getElementsByClassName("lolomoRow")).filter(e=>e.hasAttribute("data-list-context"));
    return elts.map(e=>[e.getAttribute('data-list-context'), e]);
}

function netflixGetHeadings() {
    return netflixGetRows().map(pair=>pair[0]);
}

/* TODO: replace description (second e) with list of elements in row */
function netflixGetHeadingCompletions() {
    return netflixGetHeadings().map(e=>[e,e]);
}

function netflixScrollToRow(heading) {
    var elt = netflixGetRows().find(e=>e[0]==heading)[1];
    elt.scrollIntoView();
    content.window.scrollByLines(-4);
}

function listActiveGroupMappings() {
    var activegroups = contexts.activeGroups();
    var activemappings = activegroups.flatMap(
        g => Array.from(g.mappings.iterate([modes.NORMAL])).concat(
             Array.from(g.mappings.iterate([modes.INSERT])))
        );
    return activemappings.map(m=>[m.name, m.description+':  '+m.action]);
}

function netflixGetCards() {
    return Array.from(content.document.querySelectorAll('.title-card'));
}
window.netflixGetCards = netflixGetCards;

function netflixGetCardLinks() {
    var cards = netflixGetCards();
    var maybelinks = cards.map(e=>e.querySelector('.ptrack-content a'));
    var seen = [];
    var result = [];
    maybelinks.forEach(l=>{
        var label = l && l.getAttribute('aria-label');
        if (l && !seen.includes(label)) {
            result.push(l);
            seen.push(label);
        }
    })
    return result;
}
window.netflixGetCardLinks = netflixGetCardLinks;

function netflixGetCardLinksCompletions() {
    return netflixGetCardLinks().map(l=>{
        var label = l && l.getAttribute("aria-label") || "";
        return [label.replace(/ /g, "_"), ""];
    });
}
window.netflixGetCardLinksCompletions = netflixGetCardLinksCompletions;

function netflixClickCardByTitle(title) {
    var title = title.replace(/_/g, " ");
    var links = netflixGetCardLinks();
    var link = links.find(l=>l && l.getAttribute("aria-label") && l.getAttribute("aria-label") == title);
    link.click();
}
window.netflixClickCardByTitle = netflixClickCardByTitle;

function netflixMyProfile() {
    function scrollToSection() {
        var sectionHeadings = Array.from(content.document.getElementsByClassName('account-section-heading'));
        var myprofile = sectionHeadings.find(e=>e.innerText.match(/MY PROFILE/));
        myprofile.scrollIntoView();
    }

    url = "https://www.netflix.com/YourAccount";
    var alltabs = Array.from(tabs.allTabs);
    var existingTab = alltabs.find(t=>t.linkedBrowser.contentDocument.URL.indexOf(url)>=0);
    if (existingTab) {
        tabs.select(existingTab);
        scrollToSection();
    } else {
        dactyl.open(url, {where: "tab"});
        window.setTimeout(
            ()=>scrollToSection(),
            2000
        );
    }
}

var netflixGenres = JSON.parse(io.system("cat ~/.pentadactyl/data/netflix-genres.json").output);
var netflixGenreList = Object.entries(netflixGenres);
window.netflixGenres = netflixGenres;
EOF

command! netflixcard
\   -nargs=1
\   -complete custom,' (context) => {context.completions = netflixGetCardLinksCompletions()}'
\   -js netflixClickCardByTitle(args[0]);

" ,--------------,
" | netflixwatch |
" '--------------'

group netflixwatch -locations=https://www.netflix.com/watch/*

"<site>a : audio"
map <site>a      -description "(show bindings)"   -js CommandExMode().open("showkeys <site>a")
map <site>a<C-h> -description "(show bindings)"   -js CommandExMode().open("showkeys <site>a")
map <site>ae     -description "Audio: English"    -js netflixSetAudio("english");
map <site>af     -description "Audio: French"     -js netflixSetAudio("french");
map <site>aj     -description "Audio: Japanese"   -js netflixSetAudio("japanese");
map <site>c      -description "Click button"      -js netflixFlatButton();
map <site>d      -description "Download subtitle" -js document.querySelector('.track.download').click();
map <site>D      -description "Download all subtitles"
\   -js document.querySelector('.track.download -all').click();
"<site>t : toggles"
map <site>t      -description "(show bindings)" -js CommandExMode().open("showkeys <site>t")
map <site>t<C-h> -description "(show bindings)" -js CommandExMode().open("showkeys <site>t")
map <site>tb     -description "Toggle Bit Rate Select" -b <C-S-A-s>
map <site>td     -description "Toggle A/V Stats"       -b <C-S-A-d>
map <site>tf     -description "Toggle Fullscreen"      -js netflixFullscreen();
map <site>tl     -description "Toggle Logging"         -b <C-S-A-l>
map <site>ts     -description "Toggle subtitles"       -js netflixToggleSubs();
"<site>y : yank"
map <site>y      -description "(show bindings)" -js CommandExMode().open("showkeys <site>y")
map <site>y<C-h> -description "(show bindings)" -js CommandExMode().open("showkeys <site>y")
map <site>yt     -description "Yank title"                  -js netflixYankTitle();
map <site>ye     -description "Yank episode title"          -js netflixYankEpisodeTitle();
map <site>yE     -description "Yank episode number & title" -js netflixYankEpisodeNumberAndTitle();

map ]]           -description "Next episode"     -js netflixNextEpisode();
map [[           -description "Previous episode" -js netflixPreviousEpisode();
map <Space>      -description "Play/Pause"       -b <C-v><Space>
map <CR>         -description "Play/Pause"       -ex netflixplaypause
map <Up>         -description "Volume up"        -js netflixIncVolume(0.1);
map <Down>       -description "Volume down"      -js netflixIncVolume(-0.1);

command! netflixsubson -js netflixSubsOn();
command! netflixsubsoff -js netflixSubsOff();

js <<EOF
var vpSetup =
    "var api=netflix.appContext.state.playerApp.getAPI();        \
     var session = api.videoPlayer.getAllPlayerSessionIds()[0];  \
     var vp = api.videoPlayer.getVideoPlayerBySessionId(session);";

function netflixIncVolume(dv) {
    dactyl.open(`javascript:${vpSetup} var v=vp.getVolume(); vp.setVolume(v+${dv})`);
}
function netflixGetTitleComponents() {
    var seriesTitle = content.document.querySelectorAll('.video-title>div>h4')[0].textContent;
    var spans = content.document.querySelectorAll('.video-title>div>span');
    var seasonEpisode = spans.length>0 ? spans[0].textContent : '';
    var episodeTitle  = spans.length>1 ? spans[1].textContent : '';
    var seasonAndEpisode = seasonEpisode.split(':');
    var season  = seasonAndEpisode.length>0 ? parseInt(seasonAndEpisode[0].slice(1)) : '';
    var episode = seasonAndEpisode.length>1 ? parseInt(seasonAndEpisode[1].slice(1)) : '';
    return [seriesTitle, season, episode, episodeTitle];
}
window.netflixGetTitleComponents = netflixGetTitleComponents;

function netflixYankTitle() {
    utils.cbWrite(netflixGetTitleComponents()[0]);
}
function netflixYankEpisodeTitle() {
    utils.cbWrite(netflixGetTitleComponents()[3]);
}
function netflixYankEpisodeNumberAndTitle() {
    var [t,s,e,et] = netflixGetTitleComponents();
    var epNumAndTitle = sprintf("S%02dE%02d %s", s, e, et);
    utils.cbWrite(epNumAndTitle);
}

function netflixPreviousEpisode() {
    var [t,season,ep,et] = netflixGetTitleComponents();
    if (ep == 1) {
        content.document.querySelector('.button-nfplayerEpisodes').click();
        content.document.querySelector('.back').click();
        var seasonlist = content.document.querySelectorAll('.season-list .arrow');
        var newSeason = season-1 || 1;
        seasonlist[newSeason - 1].click();
        window.setTimeout(
            ()=>{
                var epList = content.document.querySelectorAll('.nfp-episode-expander');
                var newEp = epList[epList.length - 1];
                newEp.click();
                    window.setTimeout(
                        ()=>content.document.querySelector('.thumbnail-image').click(),
                        500
                    )
            },
            500
        )
    } else {
        var newEp = ep - 1;
        content.document.querySelector('.button-nfplayerEpisodes').click();
        content.document.querySelectorAll('.nfp-episode-expander')[newEp - 1].click();
        window.setTimeout(
            ()=>content.document.querySelector('.thumbnail-image').click(),
            500
        );
    }
}

function netflixNextEpisode() {
    var nextep = content.document.querySelector('.button-nfplayerNextEpisode') ||
                 content.document.querySelector('.postplay-button') ||
                 content.document.querySelector('.player-postplay-still-hover-container');
    if (!nextep) {
        var parent = content.document.querySelector('.player-next-episode');
        nextep = parent && parent.children[0];
    }
    nextep && nextep.click();
}

function netflixSubsOff() {
    content.document.querySelector('.button-nfplayerSubtitles').click();
    window.setTimeout(
        ()=>Array.from(content.document.querySelectorAll(".track-list-subtitles .track")).find(e=>e.textContent.startsWith("Off")).click(),
        1800
    );
}
function netflixSubsOn() {
    content.document.querySelector('.button-nfplayerSubtitles').click();
    window.setTimeout(
        ()=>Array.from(content.document.querySelectorAll(".track-list-subtitles .track")).find(e=>e.textContent.startsWith("English")).click(),
        1800
    );
}

function netflixToggleSubs() {
    content.document.querySelector('.button-nfplayerSubtitles').click();
    var subs = content.document.querySelector('.track-list-subtitles .track.selected').textContent;
    window.setTimeout(
        ()=>{
            var tracks = Array.from(content.document.querySelectorAll(".track-list-subtitles .track"));
            if (subs.startsWith("Off"))
                tracks.find(e=>e.textContent.startsWith("English")).click();
             else
                tracks.find(e=>e.textContent.startsWith("Off")).click();
            content.document.querySelector('.nf-big-play-pause').click();
        }, 1800);
}

function netflixSetAudio(lang) {
    var button = content.document.querySelector('.button-nfplayerSubtitles');
    button.click();
    var tracks = Array.from(content.document.querySelectorAll('.track-list-audio>li.track'));
    window.setTimeout(()=>{
            var langTrack = tracks.find(e=>e.innerText.split(' ')[0].toLowerCase()==lang);
            langTrack && langTrack.click();
            content.document.querySelector('.nf-big-play-pause').click();
        }, 500);
}

function netflixSeek() {
    /* https://gist.github.com/dannyid/52775a76f2a8738334d3 */
    var player    = netflix.cadmium.objects.videoPlayer();
    /* Metadata about current episode -- ID and url to get frame at a specific time */
    var episodeId = netflix.cadmium.metadata.getActiveVideo().episodeId;
    var imgRoot   = netflix.cadmium.metadata.getActiveVideo().progressImageRoot;
    /* Generates URL of preview image for given timestamp */
    function getFrame(timestamp) {
      var t = Math.floor(timestamp/10000).toString(10);
      var f = '00000'.slice(t.length) + t;
      return imgRoot + f +'.jpg';
    };
    /* Seek to time in milliseconds */
    player.seek(343931);
    /* Example: Get image of current time */
    getFrame(player.getCurrentTime());
}

function netflixPlayPause() {
    var playpause = content.document.querySelector('.player-play-pause');
    var iconplay = content.document.querySelector('.icon-play');
    if (playpause) playpause.click();
    else if (iconplay) iconplay.click();
}

function netflixFlatButton() {
    var flatbtns = Array.from(content.document.querySelectorAll('.nf-flat-button-text'));
    flatbtns.slice(-1)[0].click();
}

dactyl._guioption_c = options.guioptions.includes('c');

function netflixFullscreen() {
    var fsBtn = content.document.querySelector(".button-bvuiFullScreenOn");
    var fsOffBtn = content.document.querySelector(".button-bvuiFullScreenOff");
    if (fsBtn) {
        fsBtn.click();
        dactyl._guioption_c = options.guioptions.includes('c');
        options.guioptions=options.guioptions.filter(e=>e!='c')
    } else {
        fsOffBtn.click();
        if (dactyl._guioption_c) options.guioptions.push('c');
    }
}
EOF

group user

" -------------------------------------------------------------------------------
" ,----------------------,
" | Newtown Art Supplies |
" '----------------------'

group newtownart -locations=www.newtownartsupplies.com.au

js <<EOF
function newtownartGo() {
    clickSelector('.CheckoutButton>a') || clickSelector(".add-to-cart");
}

function newtownartCount() {
    var qtyBoxes = Array.from(content.document.querySelectorAll(".CartItemQuantity input"));
    if (qtyBoxes.length) {
        var quantities = qtyBoxes.map(e=>Number(e.value));
        return quantities.reduce((n,s)=>n+s);
    }
}
EOF

map <site>c  -description "Go (click Add to cart/Proceed to checkout)" -js newtownartGo();
map <site>o   -description "(show bindings: Goto)" -js CommandExMode().open("showkeys <site>o")
map <site>oa
\    -description "Go to account"
\    -count
\    -js openOrSelectTab("https://www.newtownartsupplies.com.au/account.php", count?"here":"tab",
\                        /https:\/\/www\.newtownartsupplies\.com\.au\/account\.php$/);
map <site>oc
\    -description "Go to cart"
\    -count
\    -js openOrSelectTab("https://www.newtownartsupplies.com.au/cart.php", count?"here":"tab");
map <site>ol
\    -description "Go to login"
\    -count
\    -js openOrSelectTab("https://www.newtownartsupplies.com.au/login.php", count?"here":"tab");
map <site>oo
\    -description "Go to orders"
\    -count
\    -js openOrSelectTab("https://www.newtownartsupplies.com.au/account.php?action=order_status", count?"here":"tab");
map <site>n  -description "Count items" -js utils.message("Number of items: " + newtownartCount());
map <Space>  -description "Load more" -ex open javascript:ENV.Express_more()


group user



" -------------------------------------------------------------------------------
" ,-------------,
" | OReilly.com |
" '-------------'
group oreilly -locations=oreilly.com

js <<EOF
function oreillyFreeEbookFillForm() {
    var fields = content.document.getElementsByClassName("tar mt mb")[0].getElementsByTagName("input");
    fields[0].value = user.myfirstname;
    fields[1].value = user.mylastname;
    fields[2].value = user.myemail2;
    fields[4].click();
}
function oreillyFreeEbookGetPdfHref() {
  var pdf = content.document.getElementsByClassName("download format-pdf mr")[0];
  if (typeof pdf != 'undefined')
    return pdf.children[0].href;
  else return '';
}
function oreillyFreeEbookGetEpubHref() {
  var epub = content.document.getElementsByClassName("download format-epub mr")[0];
  if (typeof epub != 'undefined')
    return epub.children[0].href;
  else return '';
}
function oreillyFreeEbookWgetEpubHref() {
  var epubhref = oreillyFreeEbookGetEpubHref();
  return (epubhref === '') ? '' : `wget ${epubhref}`;
}
function oreillyFreeEbookWgetPdfHref() {
  var pdfhref = oreillyFreeEbookGetPdfHref();
  return (pdfhref === '') ? '' : `wget ${pdfhref}`;
}
EOF
command! oreillyFreeEbookAutofill -js oreillyFreeEbookFillForm();
map <site>eo -js oreillyFreeEbookFillForm();
command! oreillyFreeEbookDlPdf -js dactyl.open(oreillyFreeEbookGetPdfHref(), {where:dactyl.NEW_TAB});
command! oreillyFreeEbookDlEpub -js dactyl.open(oreillyFreeEbookGetEpubHref(), {where:dactyl.NEW_TAB});
map <site>eD -ex oreillyFreeEbookDlEpub | oreillyFreeEbookDlPdf
command! oreillyFreeEbookDl -js dactyl.execute(`!roxterm -e zsh -c 'cd ~/Downloads && {${oreillyFreeEbookWgetEpubHref()}} && {${oreillyFreeEbookWgetPdfHref()}}'`);
map <site>ed -ex oreillyFreeEbookDl

group user

" -------------------------------------------------------------------------------
" ,--------------,
" | PacktPub.com |
" '--------------'
group packt -locations=packtpub.com

set ht+='.product-top-line'

" takes too long!
command! packttoggleallbookdetails -js packtToggleAllBookDetails();
command! -nargs=1 packtToggleBooksByName -js packtToggleBooksByName(eval(args[0]));
command! -nargs=1 packtDownloadPdfsByName -js packtDownloadBooksByName(eval(args[0]), "pdf");
command! -nargs=1 packtDownloadEpubsByName -js packtDownloadBooksByName(eval(args[0]), "epub");
command! packtbooklist -js packtBookList();

js <<EOF

function packtToggleAllBookDetails() {
    if (!buffer.URL.match("https://www.packtpub.com/account/my-ebooks")) {
        dactyl.open("https://www.packtpub.com/account/my-ebooks", {where:dactyl.CURRENT_TAB});
        return;
    }
    var dlDivs = content.document.getElementsByClassName('download-container');
    var dlDivs = content.document.getElementsByClassName('product-buttons-line');
    var dlDivs = content.document.getElementsByClassName('toggle-product-line');
        for (button of dlDivs) button.click();
}

function packtGetBookList() {
    if (!buffer.URL.match("https://www.packtpub.com/account/my-ebooks")) {
        dactyl.open("https://www.packtpub.com/account/my-ebooks", {where:dactyl.CURRENT_TAB});
        return;
    }
    var books = content.document.getElementsByClassName('product-line');
    return Array.from(books);
}

function packtGetBookListStr() {
    var s = "";
    for (book of packtGetBookList()) {
        s += book.title + "\n";
    }
    return s;
}

function packtGetBookListHTML() {
    style = "font-size:10pt;color:#ECF1F4;";
    content.document.body.innerHTML = `<pre style="${style}">${packtGetBookListStr()}</pre>`;
}

function packtBookList() {
    var page = content.document.implementation.createHTMLDocument("Packt: Books List");
    page.innerHTML = packtGetBookListHTML();
    content.document = page;
}

function packtGetBookById(nid) {
    var books = packtGetBookList();
    var book = books.filter(e=>e.getAttribute("nid")==nid)[0];
    return book;
}

function packtGetBooksByName(pattern='') {
    var books = Array.from(packtGetBookList());
    var matching = books.filter(e=>e.title.match(pattern));
    return matching;
}

function packtToggleBooksByName(pattern='') {
    var books = Array.from(packtGetBookList());
    var matching = books.filter(e=>e.title.match(pattern));
    matching.forEach(
        e=> e.getElementsByClassName('toggle-product-line')[0].click()
    );
}

// FIXME: only downloads first match - use delay?
function packtDownloadBooksByName(pattern='', format) {
    formatre = RegExp(format, 'i');
    matching = packtGetBooksByName(pattern);
    matching.forEach(function(e) {
        var buttons = Array.from(e.getElementsByClassName('fake-button'));
        var button = buttons.find(function(but) {
            var buttonformat = but.getAttribute('format') || "";
            return buttonformat.match(formatre);
        });
        button.getElementsByClassName('download')[0].click();
    });
}
function packtGetDownloadDialogsByName(pattern='', format) {
    formatre = RegExp(format, 'i');
    matching = packtGetBooksByName(pattern);
    return matching.map(function(e) {
        var buttons = Array.from(e.getElementsByClassName('fake-button'));
        var button = buttons.find(function(but) {
            var buttonformat = but.getAttribute('format') || "";
            return buttonformat.match(formatre);
        });
        return button.getElementsByClassName('download')[0];
    });
}
function packtClickButtons(buttonlist) {
    b = buttonlist.pop();
    b.click();
    setTimeout(function(){
        //alert(buttonlist.length);
        packtClickButtons(buttonlist);
    }, 2000)
}
function packtDownloadBooksByName(pattern='', format) {
    var buttonlist = packtGetDownloadDialogsByName(pattern, format);
    alert(buttonlist.length);
    packtClickButtons(buttonlist);
}
function packtToggleTopRow() {
    var toprow = content.document.getElementsByClassName('product-top-line')[0];
    var toggle = toprow.querySelector('.toggle-product-line');
    toggle.click();
}
function packtDlLinksRow(rowelt) {
    var links = Array.from(rowelt.nextElementSibling.querySelectorAll('.download-container a')).slice(2, 6);
    var authordiv = rowelt.querySelector('.author');
    links.forEach(a => authordiv.appendChild(a));
    //links.forEach(a => dactyl.open(a.href, {where: dactyl.NEW_BACKGROUND}));
    //links.forEach(a => setTimeout(function(){ dactyl.open(a.href, {where: dactyl.NEW_BACKGROUND}); }, 1000));
}
function packtDlLinksTopRow() {
    var toprow = content.document.getElementsByClassName('product-top-line')[0];
    packtDlLinksRow(toprow);
}
function packtPopLink() {
    var links = content.document.querySelectorAll('.author a');
    if (links.length == 0) return;
    var elt = links[0];
    elt.click();
    elt.remove();
}

function packtLoginLogout() {
    var loginDiv = content.document.getElementById('account-bar-login-register');
    if (loginDiv.style.display == 'none')
        var link = content.document.getElementById('account-bar-sign-out');
    else
        var link = loginDiv.querySelector('.login-popup');
    link.click();
}

function packtCompactList() {
    dactyl.execute("styleenable -group packt -name packt-thin-lines");
    hideSelectors("div.author");
    var h1 = content.document.getElementsByTagName("h1")[1];
    var h1succ = h1.nextElementSibling;
    if (h1succ.id != "product-account-list") {
        hideElement(h1succ);
        Array.from(h1succ.children).forEach(e=>hideElement(e));
    }
    content.document.getElementById("menu-bar").style.display = "none";
}
function packtCompactListOff() {
    dactyl.execute("styledisable -group packt -name packt-thin-lines");
    unhideSelectors("div.author");
    var h1 = content.document.getElementsByTagName("h1")[1];
    var h1succ = h1.nextElementSibling;
    if (h1succ.id != "product-account-list") {
        unhideElement(h1succ);
        Array.from(h1succ.children).forEach(e=>unhideElement(e));
    }
    content.document.getElementById("menu-bar").style.display = "block";
}
function packtIsCompactList() {
    var authorline = content.document.querySelector("div.author");
    return (authorline.style.display == "none");
}
function packtToggleCompactList() {
    if (packtIsCompactList())
        packtCompactListOff();
    else
        packtCompactList();
}

EOF

map <site>c  -description "Download first link" -js packtPopLink();
map <site>i  -description "Login/logout" -js packtLoginLogout();
map <site>l  -description "Create download buttons for top row" -js packtDlLinksTopRow();
map <site>oa -description "Goto account"
\    -js openOrSelectTab("https://www.packtpub.com/account", count?"tab":"here",
\                        /:..www.packtpub.com\/account\/?$/);
map <site>of -description "Goto free learning"
\    -js openOrSelectTab("https://www.packtpub.com//packt/offers/free-learning?login=1", count?"tab":"here");
map <site>ol -description "Goto library"
\    -js openOrSelectTab("https://www.packtpub.com/account/my-ebooks", count?"tab":"here");
map <site>tc -description "Toggle compact listing" -js packtToggleCompactList();
map <site>ya -description "Yank titles" -ex yankselectorcontent .title

map [[ -description "Next page" -js clickSelector(".mat-paginator-navigation-previous");
map ]] -description "Next page" -js clickSelector(".mat-paginator-navigation-next");

style -name=packt-thin-lines https://www.packtpub.com/account/my-ebooks
\    .product-line,.product-top-line,.toggle-product-line,.content-width {
\        padding-top: 0 !important; padding-bottom: 0 !important;
\        line-height: 0.8em !important;
\    }
\    .toggle-product-line { font-size: 18pt !important; line-height: 0.8em !important; }
\    .title { padding-top: 4px !important; padding-bottom: 0 !important; }
\    .product-account-list { margin-top: 0 !important;  }
\    h1 { padding-bottom: 0 !important; }

" ,----------------------------------------------,
" | www.packtpub.com//packt/offers/free-learning |
" '----------------------------------------------'
group packtlearn -locations=https://www.packtpub.com//packt/offers/free-learning?login=1,https://www.packtpub.com//packt/offers/free-learning

js <<EOF
function packtClaim() { content.document.getElementById("free-learning-claim").click(); }

function packtMaybeClaimAndWriteToList() {
    if (!packtIsTodaysTitleInLibrary()) {
        packtClaim();
        packtWriteTitleToListAndShowEndOfList();
    } else {
        utils.message(packtGetTodaysTitle() + ": Already in library");
    }
}

EOF

map <site>c -description "Claim" -js packtMaybeClaimAndWriteToList();
map <site>y -description "Yank Title" -ex yankselectorcontent div.dotd-title>h2

group user

" -------------------------------------------------------------------------------
" ,-----------------------,
" | Pencils4Artists.co.uk |
" '-----------------------'
group pencils4artists -locations=pencils4artists.co.uk

map <site>o   -description "(show bindings)" -js CommandExMode().open("showkeys <site>o")
map <site>oa  -description "Goto Account"
\             -count
\             -js openOrSelectTab("http://www.pencils4artists.co.uk/PBUserAccount.asp", count?"here":"tab");
map <site>oc  -description "Goto Cart"
\             -count
\             -js openOrSelectTab("http://www.pencils4artists.co.uk/PBShoppingCart.asp?PBMInit=1",
\                                 count?"here":"tab");
map <site>ol  -description "Goto Login"
\             -count
\             -js openOrSelectTab("http://www.pencils4artists.co.uk/PBUserLogin.asp?CCode=33", count?"here":"tab");
map <site>oo  -description "Goto Orders"
\             -count
\             -js buffer.URL=="http://www.pencils4artists.co.uk/PBUserAccount.asp" ?
\                     dactyl.open("javascript:SubmitAction(8,null,0,null,1);") :
\                     openOrSelectTab("http://www.pencils4artists.co.uk/PBUserAccount.asp", count?"here":"tab");
map <site>n   -description "Cart: count items"
\             -js utils.message("Number of items: " + p4aCountItems());
map <site>s   -description "Cart: save cart"
\             -js clickSelector("#btnsavecart");

js <<EOF
function p4aCountItems() {
    if (buffer.URL.match(/PBRenderInvoice/)) {
        inputArray = Array.from(content.document.querySelectorAll("td.cartlineqty"));
        return inputArray.map(e=>Number(e.innerText), null).reduce((a,c)=>a+c);
    } else {
        /* Cart and Single Pencil Order Forms */
        var inputArray = Array.from(content.document.querySelectorAll("input.PB"));
        return inputArray.map(e=>Number(e.value), null).reduce((a,c)=>a+c);
    }
}
EOF


group user

" -------------------------------------------------------------------------------
" ,-----------,
" | Poets.org |
" '-----------'
group poets -locations=poets.org

js <<EOF
function poetsGotoPrintable() {
    var printLink = content.document.querySelector(".print-link>a");
    var url = printLink.href;
    dactyl.open(url, {where: "here"});
}
EOF

map <site>c -js poetsGotoPrintable();

" ,------------------,
" | Poets.org/print/ |
" '------------------'
group poetsprint -locations=https://www.poets.org/print/*

js <<EOF
function poetsTidy() {
    removeSelectors(
        ".print-logo", ".print-site_name", ".print-breadcrumb", "hr",
        ".field-name-field-credit", ".field-name-field-author",
          ".field-name-field-date-published", "script"
    );
}
EOF

map <site>c -js poetsTidy();

group user

" -------------------------------------------------------------------------------
" ,------------,
" | Ptable.com |
" '------------'
group ptable -locations=ptable.com

js <<EOF
var ptableToggleWP = makeDisplayToggle('#WikiBox');
EOF

map <site>w -js ptableToggleWP();

group user

" -------------------------------------------------------------------------------
" ,----------------,
" | QuickPoses.com |
" '----------------'
group quickposes -locations=quickposes.com

map <site>c -description "Toggle pause" -js qpTogglePause();
map <Space> -description "Toggle pause" -js qpTogglePause();
map <Right> -description "Skip" -js content.document.querySelector(".skip").click();


js <<EOF
function qpTogglePause() {
    var pauseBtn = content.document.querySelector(".btn-pause");
    var continueBtn = content.document.querySelector(".btn-continue");
    if (pauseBtn.style.display=="none") continueBtn.click();
    else pauseBtn.click();
}
EOF

group user

" -------------------------------------------------------------------------------
" ,------------,
" | Reddit.com |
" '------------'
group reddit -locations=reddit.com

map <site>c -description "Passthrough-mode" -b <C-z>
map <site>m -description "Remove cruft" -js redditTidy();
map <site>ts -description "Toggle saved post" -js redditToggleSave();
map <site>to -description "Toggle old reddit" -js toggleUrl("https://www.", "https://old.");

map <A-1> 1gt
map <A-2> 2gt
map <A-3> 3gt
map <A-4> 4gt
map <A-5> 5gt
map <A-6> 6gt
map <A-7> 7gt
map <A-8> 8gt
map <A-9> 9gt

js <<EOF
function redditTidy()   {
    isolateSelectors("div.self", "commentarea", "style");
    removeSelectors("REScommentSubToggle");
}


function redditToggleSave() {
    var saveBtn = content.document.querySelector('.link-save-button>a');
    var unsaveBtn = content.document.querySelector('.link-unsave-button>a');
    (saveBtn || unsaveBtn).click();
}
EOF

group user

" -------------------------------------------------------------------------------
" ,------------,
" | Scriptular |
" '------------'

style -name=scriptular http://scriptular.com,file:///opt/webapps/scriptular/index.html
    \ #quick_reference,#quick_reference>.scrollable { height: 700px !important; margin-top: 0; }
styleenable -name scriptular

" -------------------------------------------------------------------------------
" ,----------,
" | Sparkfun |
" '----------'

group sparkfun -locations=learn.sparkfun.com

js <<EOF
function sparkfunSimple() {
    isolateSelector("#airlock");
    removeSelectors(".fave_widget", ".share-link-inline", ".breadcrumb", ".contributors img");
}
EOF

map <site>c -description "Remove cruft" -js sparkfunSimple();

group user

" -----------------------------------------------------------------------------
" ,-------------------,
" | StackOverflow.com |
" '-------------------'
group stackexchange -locations=stackoverflow.com,stackexchange.com,superuser.com

" === hint modes === "
set eht+=π:'.answer'
js <<EOF
hints.addMode(
    "π",
    "Print post",
    e => sePrintPost(e)
);
EOF

js <<EOF

function seExpandAllComments() {
    var expandLinks = Array.from(content.document.querySelectorAll('.js-show-link'));
    for (l of expandLinks) l.click();
}

function seExpandAllSnippets() {
    var runBtns = Array.from(content.document.querySelectorAll('.snippet-ctas button'));
    for (b of runBtns)
        if (!b.classList.contains('hideResults'))
            b.click();
}

function seCleanup(showSnippetResults) {
    if (showSnippetResults) {
        seExpandAllSnippets();
        removeSelectors('.snippet-ctas');
    } else {
        removeSelectors('.snippet-result');
    }
    removeSelectors(
        'script',
        'header','#sidebar', '.aside-cta', '#left-sidebar',   // header, sidebar, ask a question
        '.post-taglist', '.special-status', '.bounty-notification',
        '.star-off', '.favoritecount', '#tabs',
        '#PrinterFriendly',    // added-by-userscript
        '.vt',    //  share-edit-flag
        '.vote-up-off', '.vote-down-off', '.js-add-link',
        '.user-gravatar32', '.-flair',
        '.bottom-notice', 'form', '#footer', '#feed-link'
    );
    content.document.getElementsByTagName("body")[0].style.paddingTop='0';
}

function seRemoveAds() {
    removeSelectorWithMatchingAttribute('div', 'id', 'google_ad');
}

function sePrintPost(e) {
    topElements().forEach(elt => elt.remove());
    content.document.body.appendChild(e);
    removeSelectors(
        ".post-layout--right>div:nth-of-type(2)",
        ".suggest-edit-post",
        ".short-link",
        ".user-gravatar32",
        ".vote-up-on", ".vote-up-off", ".vote-down-on", ".vote-down-off"
    );
}

EOF

command! secleanup
    \ -description "Cleanup SO page: Expand links and remove cruft."
    \ -bang
    \ -js seExpandAllComments(); seCleanup(bang);

map <site>a        -description "Remove ads" -js seRemoveAds();
map <site>c -count -description "Expand links and remove cruft." -js  seExpandAllComments(); seCleanup(count);
map <site>p        -description "Print post (via hint)" -js hints.show("π");
map <site>y        -description "Yank post (via hint)"  -js hints.show("Π");

map -modes insert -b <A-k> <S-<>kbd<S->><S-<>/kbd<S->><Left><Left><Left><Left><Left><Left>

set editor='gvim -f +<line> +"sil! call cursor(0, <column>)" +"set ft=markdown" <file>'

group user

" -------------------------------------------------------------------------------
" ,------------------,
" | StackPrinter.com |
" '------------------'
group stackprinter -locations=stackprinter.com
autocmd! -group stackprinter

autocmd PageLoad stackprinter.com :removeselector #adsense

group user

" -------------------------------------------------------------------------------
" ,-------------,
" | Subs.com.ru |
" '-------------'

js <<EOF

function subsRuSearch(s){
    var searchForm = content.document.getElementById("search");
    var inputs = searchForm.getElementsByTagName("input");
    var searchField = inputs[1];
    var searchButton = inputs[2];
    searchField.value = (s);
    searchButton.click();
}

function searchSubsRu(s) {
    var newtab = gBrowser.addTab('subs.com.ru');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    subsRuCallback = function() { subsRuSearch(s); }
    tb.addEventListener("DOMContentLoaded", subsRuCallback);
}

EOF

command! subsrusearch
    \ -description "Search subs.com.ru"
    \ -nargs=1
    \ -js searchSubsRu(args[0]);


" -------------------------------------------------------------------------------
" ,--------------,
" | TheHylia.com |
" '--------------'
group hylia -locations=anime.thehylia.com

command! hyliacurlallsongs
  \ -description "Generate curl commands to download song links and copy to clipboard."
  \ -js hyliaCurlAllSongs();
command! hyliacurlsong
  \ -description "Generate curl command to download the current song link and copy to clipboard."
  \ -js hyliaGetSong();
command! hyliacurlsongwithfullname
  \ -description "Generate curl command to download the current song link and copy to clipboard."
  \ -js hyliaGetSongWithFullName();
map <site>a -ex hyliacurlallsongs
map <site>d -ex hyliacurlsong
map <site>D -ex hyliacurlsongwithfullname
map <site>yy -js hyliaCopyTrackName();
map <site>ya -js hyliaCopyAlbumName();


" FIXME: hyliaCurlAllSongs only generates a curl command for last song

js <<EOF
function hyliaCurlAllSongs() {
    var tbl = content.document.getElementsByClassName("blog")[0];
    var albumName = tbl.getElementsByTagName("h2")[0].innerText;
    var rows = tbl.getElementsByTagName("table")[0].getElementsByTagName("tr");
    for (i=0; i<rows.length; ++i) {
        var row = rows[i];
        var pageLink = row.getElementsByTagName("a")[0].href;
        hyliaFetchSongPage(pageLink);
    }
}
function hyliaFetchSongPage(pageLink) {
    var newtab = gBrowser.addTab(pageLink);
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", hyliaGetSong);
}
function hyliaGetSong(filename) {
    var tbl = content.document.getElementsByClassName("blog")[0];
    var allLinks = tbl.getElementsByTagName("a");
    var link = allLinks[allLinks.length-1];
    var linkurl = decodeURIComponent(link.href);
    if (typeof filename == 'undefined')
        filename = `${hyliaGetTrackName()}`;
    hyliaGenerateCurlCommand(linkurl, filename);
}
function hyliaGetSongWithFullName() {
    albumName = hyliaGetAlbumName();
    trackName = hyliaGetTrackName();
    filename = `${albumName} - ${trackName}`;
    hyliaGetSong(filename);
}
function hyliaGenerateCurlCommand(linkURL, filename) {
        if (typeof filename == 'undefined')
            var curlCmd = `curl '${linkURL}' `;
        else
            var curlCmd = `curl '${linkURL}' > '${filename}';`;
        dactyl.utils.yankWithMsg(curlCmd);
}
function hyliaGetAlbumName() {
    var hdg = content.document.getElementsByTagName('h2')[0];
    return hdg.innerText;
}
function hyliaGetTrackName() {
    var pars = content.document.getElementsByTagName('p');
    var descript = Array.from(pars).filter(p=>p.innerText.includes('Song name:'))[0].innerText;
    var lines = descript.split('\n');
    var track = lines[1].replace(/Song name:\s+/i,'');
    return track;
}
function hyliaCopyAlbumName() { dactyl.utils.yankWithMsg(hyliaGetAlbumName()); }
function hyliaCopyTrackName() { dactyl.utils.yankWithMsg(hyliaGetTrackName()); }
EOF

group user

" ,-----------------,
" | TheKanjiMap.com |
" '-----------------'
group kanjimap -locations=thekanjimap.com

map <site>c -description "close box" -ex clickselector .close　　

group user

" -------------------------------------------------------------------------------
" ,---------------------,
" | ThingsAndStuff Wiki |
" '---------------------'
group thingstuff -locations=wiki.thingsandstuff.org
autocmd! -group thingstuff

map <site>c -description "remove cruft" -js taswTidy();
map <site>op
    \ -description "open printable version"
    \ -js dactyl.open(taswGetPrintableVersion(), {where: 'here'});
map <site>tp
    \ -description "open printable version (new tab)"
    \ -js dactyl.open(taswGetPrintableVersion(), {where: 'tab'});

js <<EOF
function taswTidy() {
    removeSelectors(
        '#mw-navigation',
        '#mw-content-text>p:first-of-type',
        '#contentSub',
        '#jump-to-nav',
        '#articlemenu'
    );
    var heading = content.document.getElementById('firstHeading');
    heading.innerText = heading.innerText.replace(/( -- Things and Stuff Wiki)?$/,
                                                  ' -- Things and Stuff Wiki');
    dactyl.execute("cssapply '.firstHeading { position: static !important; } .mw-body { margin-top: 0 !important; }'");
}

function taswGetPrintableVersion(url=null) {
    url = url || buffer.URL;
    if (url.includes('?'))
        return url + '&printable=yes';
    else
        return url + '?printable=yes';
}
EOF

group user

" -------------------------------------------------------------------------------
" ,---------,
" | Time.Is |
" '---------'
group timeis -locations=time.is

map <site>c -description "Toggle simple" -js content.document.getElementById('twd').click();

group user

" -------------------------------------------------------------------------------
" ,--------------,
" | TutsPlus.com |
" '--------------'

group tutsplus -locations=code.tutsplus.com
autocmd! -group tutsplus

autocmd DOMload code.tutsplus.com :js tutsplusTidy()

map <site>c -description "Remove cruft" -js tutsplusTidy();

js <<EOF
function tutsplusTidy() {
    removeSelectors(
        '.global-nav',
        '.layout__sidebar',
        '.avert',
        '.content-banner__icon',
        '.content-heading__item:last-child',
        '.content-heading__secondary',
        '.content-heading__secondary-categories',
        '.free-trial-highlight',
        '.announcement-bar',
        '.post_image',
        '.ecosystem-highlight',
        '.market-highlight',
        'footer'
    );
}
EOF

group user

" -------------------------------------------------------------------------------
" ,------------------,
" | UbuntuForums.org |
" '------------------'

group ubuntuforums -locations=ubuntuforums.org

js <<EOF
function ubforTidy() {
    isolateSelectors(
        "h1", "#postlist", ".inlineimg.onlinestatus",
        ".postuseravatarlink", ".usertitle"
    );
    var rankElts = Array.from(content.document.getElementsByClassName("rank"));
    rankElts.forEach(e => {
        var imgElt = e.getElementsByTagName("img")[0];
        if (imgElt) {
            " make idempotent: check if already removed "
            var imgName = imgElt.src.replace(/.*\//, "").replace(/\.png$/, "");
            e.removeChild(imgElt);
            var span = content.document.createElement("span");
            span.innerText = imgName;
            e.appendChild(span);
        }
    });
    var usernames = Array.from(content.document.getElementsByClassName("username"));
    usernames.forEach(e => {
        e.firstChild.innerHTML = e.firstChild.innerHTML.replace("color: #000000", "color: #296ad3");
    });
    content.document.body.style.backgroundColor='#85ABE7';
}
EOF

map <site>c -description "Style and Remove cruft" -js ubforTidy();

group user

" -------------------------------------------------------------------------------
" ,---------------------,
" | UrbanDictionary.com |
" '---------------------'

group urbandictionary -locations=urbandictionary.com

js <<EOF
function udTidy() {
    removeSelectors(
        ".share", "#dark_top", ".mug-ad", ".widget", "#columnist", "iframe",
        ".panel-margin", ".right", "#store-link", ".ad-panel"
    );
    removeSelectorFiltered("#main_nav>li", e=>!e.classList.contains("has-dropdown"));
}
EOF

map <site>c -description "Remove cruft" -js udTidy();
map <site>s -description "Toggle autolink style"
\    -ex styletoggle -name ud-fix-autolinks

style -name=ud-fix-autolinks urbandictionary.com
\    .autolink {
\        color: #2c353c !important;
\        font-weight: normal !important ;
\        text-decoration-color: #BCC1C4 !important;
\    }
group user


" -----------------------------------------------------------------------------
" ,-----------------,
" | Userscripts.org |
" '-----------------'

js <<EOF

function userscriptsMirror(url) {
    var rx = /https?:\/\/(www.)?userscripts.org\/(.*)/;
    var match = rx.exec(url.toLowerCase());
    if (match)
        dactyl.open(`http://userscripts-mirror.org/${match[2]}`);
    else
        dactyl.utils.message(`userScriptsMirror: Address doesn't match: ${url}`);
}

EOF

command! userscriptsmirror -nargs=?
    \ -js if (args.length==0)
    \         userscriptsMirror(dactyl.clipboardRead());
    \     else
    \         userscriptsMirror(args[0]);

" -------------------------------------------------------------------------------
" ,-----------------,
" | VapeKing.com.au |
" '-----------------'
group vapeking -locations=vapeking.com.au

map <site>c -description "enter" -js vkEnter();

js <<EOF

function vkEnter() { clickSelector('#AVenterLink'); }

EOF


group user

" -------------------------------------------------------------------------------
" ,-----------,
" | Weblio.jp |
" '-----------'
group weblio -locations=weblio.jp,ejje.weblio.jp

map <site>c -ex webliotidy

command! webliotidy -js weblioTidy();

js <<EOF
function weblioTidy() {
    weblioRemoveAds();
    removeSelectors(
        '#footFixBar',    // popup footer
        '.topicR'         // social buttons
    );
    setSelectorOpacity(
        0.3,
        '.summaryR',
        '#headTurboLink',
        '.pin-icon-cell',
        '#leadToVocabIndexBtnWrp',
        '#leadToSpeakingTestIndexBtnWrp'
    );
}
function weblioRemoveAds() {
    removeSelectors(
    '.ad', '.ad1',
    '.adGH','.adsbygoogle'
    );
    weblioCleanSidebar();
}
function weblioCleanSidebar() {
    var sb = content.document.getElementById('side');
    var sbBlocks = Array.from(content.document.getElementsByClassName('sideBlock'));
    var textTrans = sbBlocks.filter(d=>d.firstElementChild.nodeName.toLowerCase() == 'form')[0];
    var browserHistory = content.document.getElementById('sideBHModule');
    var neighbouringKeywords = sbBlocks.filter(d=>d.firstElementChild.nodeName.toLowerCase() == 'table')[0];
    var otherDicts = content.document.querySelector('.sideBlock.otherDict');
    while (sb.children.length > 0) sb.children[0].remove();
    sb.appendChild(textTrans);
    sb.appendChild(browserHistory);
    sb.appendChild(neighbouringKeywords);
    sb.appendChild(otherDicts);
}
EOF

group user

" -------------------------------------------------------------------------------
" ,---------------,
" | WetCanvas.com |
" '---------------'
group wetcanvas -locations=wetcanvas.com


js <<EOF
EOF

map <site>tp -description "Toggle printable" -js toggleUrl("showthread", "printthread");
map <site>yy -description "Yank post (via hints)" -js hints.show("Π");

group user

" -------------------------------------------------------------------------------
" ,-----------,
" | Wikia.com |
" '-----------'
group wikia -locations='.*\.wikia\.com/','.*\.fandom\.com/'
autocmd! -group wikia

js <<EOF
var wikiaPrefsURL = "http://babylon5.wikia.com/wiki/Special:Preferences";
var wikiaHelpURL = "http://community.wikia.com/wiki/Help:Contents";
EOF

" ,- - - - - - - - - - - - - - - - - - - - - - - - - ,
" ' override f to work on Wikia collapsible sections '
" '- - - - - - - - - - - - - - - - - - - - - - - - - '
set eht+=🅆:'a',':-moz-any-link',area,button,iframe,'input:not([type=hidden]):not([disabled])','label[for]',select,textarea,'[onclick]','[onmouseover]','[onmousedown]','[onmouseup]','[oncommand]','[tabindex]','[role=link]','[role=button]','[contenteditable=true]',svg,'a[class^=vote]','a[class^=speed]',div.ita-hwt-candidate,.preference>li,section.pi-collapse
js <<EOF
hints.addMode(
    '🅆',
    'Click link/button',
    function(elt) {
        ' handle normal links, buttons, etc. '
        dispatchClickEvent(elt);
        ' toggle a section by adding/removing the class .pi-collapse-closed '
        ' trying to abstract this into a function and run it via a hint results in an error: Permission denied to access property "type" '
        if (elt.classList.contains('pi-collapse')) {
            if (elt.classList.contains('pi-collapse-closed'))
                elt.classList.remove('pi-collapse-closed');
            else elt.classList.add('pi-collapse-closed');
        }
    });
EOF
map f -js hints.show('🅆');

js <<EOF

function wikiaRemoveAds() {
    removeSelectors(
        '#WikiaTopAds', '.wikia-ad', '#WikiaArticleBottomAd',
        'WikiaAdInContentPlaceHolder', '#recirculation-rail', '.recirculation-rail',
        '.celtra-screen-object-container', '.celtra-view', '.videoAdUi'
    );
}

function wikiaRemoveCruft() {
    wikiaRemoveAds();
    removeSelectors(
        '#WikiHeader', '.header-tally', '.wikia-button', '.wikia-menu-button', '.editsection', '.WikiaRail',
        '.navbox', '.WikiaArticleInterlang', '.refpopups-configure-page', '#WikiaArticleFooter', 'footer',
        '#WikiaFooter', '.wds-global-footer', '#WikiaBar', 'script','#WikiaNotifications', 'iframe', '#ad-skin',
        '.featured-video__wrapper'
    );
    hideSelectors('.wds-global-navigation-wrapper');

    var divs = Array.from(content.document.getElementsByTagName('div'));
    var videodivs = divs.filter(e=>e.getAttribute("itemtype")=="http://schema.org/VideoObject");
    videodivs.forEach(e=>e.parentNode.removeChild(e));
}

function wikiaSimplePage() {
    wikiaRemoveCruft();
    removeSelectors(
        'header.wds-community-header',
        '.page-header__categories',
        '.page-header__contribution',
        '#articleCategories'
    );
    hideSelectors(
        '.page-header__subtitle'
    );
    removeSelectorFiltered(
        '.contains',
        e=>e.firstElementChild.classList.contains('special-categories'));
}

function wikiaRemoveImages() {
    removeSelectors('img', '#Gallery');
    removeSelectorsWithPrecedingHeading('.wikia-gallery');
}

function wikiaGetNext() {
    var nextprevLinks = content.document.querySelectorAll('.portable-infobox tr a');
    return nextprevLinks[1].href;
}
function wikiaGetPrevious() {
    var nextprevLinks = content.document.querySelectorAll('.portable-infobox tr a');
    return nextprevLinks[0].href;
}

function wikiaToggleGlobalNav() {
    toggleHideSelectors('.wds-global-navigation-wrapper');
}

function wikiaSearchbar() {
    unhideSelectors('.wds-global-navigation-wrapper');
    window.setTimeout(
        () => {
            content.document.getElementById('searchInput').focus();
        },
        250
    );
}

function wikiaGetURL(pageName) {
    var baseURL = buffer.URL.match(/https?:\/\/[^./]+\.wikia.com/)[0];
    return baseURL+'/wiki/'+pageName;
}

function wikiaGetUser() {
    return content.document.querySelector(".wds-avatar").getAttribute("alt");
}

function wikiaClosePopup() { content.document.querySelector(".close.wikia-chiclet-button").click(); }

EOF

command! wikiaremovefandomads
    \ -description "Remove 'Trending Fandom' ads"
    \ removeselector '#recirculation-rail' '.recirculation-rail'
command! wikiasearchbar    -description "Search in search bar"      -js wikiaSearchbar();
command! wikiaremoveads    -description "Remove ads"                -js wikiaRemoveAds();
command! wikiaremovecruft  -description "Remove clutter"            -js wikiaRemoveCruft();
command! wikiasimplepage   -description "Remove clutter/decoration" -js wikiaSimplePage();
command! wikiaremoveimages -description "Remove images"             -js wikiaRemoveImages();
command! wikianext
    \ -description "Next page"
    \ -bang
    \ -js dactyl.open(wikiaGetNext(), { where: bang?'tab':'here' });
command! wikiaprevious
    \ -description "Previous page"
    \ -bang
    \ -js dactyl.open(wikiaGetPrevious(), { where: bang?'tab':'here' });

map <site>c   -ex wikiaremovecruft
map <site>aa  -ex wikiaremoveads
map <site>af  -ex wikiaremovefandomads
map <site>m   -description "(show bindings)" -js CommandExMode().open("showkeys <site>m")
map <site>mt  -description "My Talk"
\             -count -js openOrSelectTab(wikiaGetURL("User_talk:"+wikiaGetUser()), count?"here":"tab");
map <site>mu  -description "My Profile"
\             -count -js openOrSelectTab(wikiaGetURL("User:"+wikiaGetUser()), count?"here":"tab");
map <site>o   -description "(show bindings)" -js CommandExMode().open("showkeys <site>o")
map <site>oh  -description "Help"
\             -count -js openOrSelectTab(wikiaHelpURL, count?"here":"tab");
map <site>op  -description "(show bindings)" -js CommandExMode().open("showkeys <site>op")
map <site>ope -description "My Preferences: Editing"
\             -count -js openOrSelectTab(wikiaPrefsURL+"#mw-prefsection-editing", count?"here":"tab");
map <site>opm -description "My Preferences: Email"
\             -count -js openOrSelectTab(wikiaPrefsURL+"#mw-prefsection-emailv2", count?"here":"tab");
map <site>opp -description "My Preferences: My Info"
\             -count -js openOrSelectTab(wikiaPrefsURL, count?"here":"tab");
map <site>opu -description "My Preferences: Under the Hood"
\             -count -js openOrSelectTab(wikiaPrefsURL+"#mw-prefsection-under-the-hood", count?"here":"tab");
map <site>r   -ex wikiasimplepage
map <site>s   -ex wikiasearchbar
map <site>t   -description "(show bindings)" -js CommandExMode().open("showkeys <site>t")
map <site>tn  -description "Toggle Global Navigation" -js wikiaToggleGlobalNav();
map <site>i   -ex wikiaremoveimages
map <site>x   -js wikiaClosePopup();
map <site>]   -ex wikianext
map <site>[   -ex wikiaprevious

" autocmd DOMload 'https?://.*\.wikia.com/\.*' wikiaremovecruft

" ,-------------------------,
" | AdventureTime.Wikia.com |
" '-------------------------'
group wikiaadvtime -locations='adventuretime\.wikia\.com/wiki/'
autocmd! -group wikiaadvtime

js <<EOF

function advtimeToggleTranscript() {
    var url_A = /\/Transcript/;
    var url_B = /$/;
    var url_A_canon = "/Transcript";
    var url_B_canon = "";
    var url = content.location.href;
    var newurl;
    if (url.search(url_A) >= 0)
        newurl = url.replace(url_A, url_B_canon);
    else if (url.search(url_B) >= 0)
        newurl = url.replace(url_B, url_A_canon);
    dactyl.open(newurl);
}

EOF

command! advtimeToggleTranscript -js advtimeToggleTranscript();
map <site>c -ex advtimeToggleTranscript

group user

" ,--------------,
" | dc.wikia.com |
" '--------------'
group wikiadc -locations='dc\.wikia\.com/wiki/'

js <<EOF
function dcToggleEarth() {
    var regex = /https?:\/\/dc.wikia.com\/wiki\/([^/]+)_\(([^/]+)_Earth\)/;
    var match = buffer.URL.match(regex);
    if (match) {
        var which = (match[2]=="Prime") ? "New" : "Prime";
        dactyl.open(`http://dc.wikia.com/wiki/${match[1]}_(${which}_Earth)`, "here");
    }
}
EOF

map <site>tu -description "Toggle New Earth/Prime Earth" -js dcToggleEarth();

group user


" -----------------------------------------------------------------------------
" ,---------------,
" | Wikipedia.org |
" '---------------'
group wikipedia -locations=wikipedia.org,wikisource.org,wiktionary.org

js <<EOF
var wpLatest = function() {
   var newurl = buffer.URL.replace(/\?.*$/, '');
   dactyl.open(newurl);
}
var wpContent = function() {
    var heading = content.document.getElementById("firstHeading");
    var articletext = content.document.getElementById("bodyContent");
    return heading.innerText + "\n\n" + articletext.innerText;
}
var wpHtml = function() {
    var heading = content.document.getElementById("firstHeading");
    var articletext = content.document.getElementById("bodyContent");
    return `<h1>${heading.innerHTML}</h1>\n${articletext.innerHTML}`;
}
var wpCopyContent = function() {
    articletext = wpContent();
    dactyl.clipboardWrite(articletext);
    dactyl.utils.message(`COPIED: ${articletext.slice(0, 20)} ... ${articletext.slice(-20)}`);
}
var wpCopyHtml = function() {
    articlehtml = wpHtml();
    dactyl.clipboardWrite(articlehtml);
    dactyl.utils.message(`COPIED: ${articlehtml.slice(0, 20)} ... ${articlehtml.slice(-20)}`);
}

function wpGetContents() {
    return Array.from(content.document.querySelectorAll('#toc ul li a'));
}

function wpGotoNextHeading() {
    var headings = wpGetContents();
    var fragment = content.window.location.hash;
    if (fragment) {
        var i = headings.findIndex((e,i,a)=>e.href.match(content.window.location.hash));
        if (i+1 < headings.length)
            headings[i+1].click();
    } else {
        headings[0].click();
    }
}

function wpGotoPreviousHeading() {
    var headings = wpGetContents();
    var fragment = content.window.location.hash;
    if (fragment) {
        var i = headings.findIndex((e,i,a)=>e.href.match(content.window.location.hash));
        if (i)
            headings[i-1].click();
        else
            content.window.scrollTo(0, 0);
    }
}

function wpGetSections() {
    var contents = wpGetContents();
    var n = contents.length;
    var max_n1 = Math.max.apply(null, contents.map(e=>e.innerText.match(/^[0-9]+/)[0].length));
    var formatted = contents.map(e => {
        var padding = max_n1 - e.innerText.match(/^[0-9]+/)[0].length;
        var fmtElt = S.repeat("0", padding) +
                      decodeURIComponent(
                          S.padEnd(e.innerText.match(/[0-9.]+/)[0], 10, "…") +
                          e.href.replace(/[^#]+#/, ""));
        return [ fmtElt, "" ];
    });
    return formatted;
}

function wpGetTopic() {
    var url = buffer.URL;
    var regex = /https:\/\/([^./]+)\.wikipedia\.org\/wiki\/([^/]+)/i;
    var match = url.match(regex);
    if (match) return match[2];
    else return null;
}

function wpGotoWiktionary(where='here', lang='en') {
    var topic = wpGetTopic().toLowerCase();
    dactyl.open(`https://${lang}.wiktionary.org/wiki/${topic}`, where);
}
EOF

command! wpapplycss :source ~/.pentadactyl/wikipedia.css
command! wplatest -description "Go to latest revision" -js wpLatest();
command! wpcopycontent -description "Copy article text to clipboard" -js wpCopyContent();
command! wpcopyhtml -description "Copy article HTML to clipboard" -js wpCopyHtml();
command! wpcleanup
    \ -description "Cleanup article"
    \ removeselector #siteNotice #mw-navigation #footer .noprint .mw-editsection .navbox
command! wpcopytablecols
    \ -description "Copy specified columns (single digits) from table chosen by HINT"
    \ -nargs=1
    \ -js dactylArgsSet(args[0].split("")); hints.show('Ŧ');
command! wpsection -description "Jump to section"
\   -nargs=1
\   -complete custom,' (context) => {context.completions = wpGetSections()}'
\   -js content.window.location.hash = '#' + args[0].replace(/.*…+/, '');

map <site>c :wpsection<Space>
map <site>d
\    -description "Open page in Wiktionary"
\    -js wpGotoWiktionary();
map <site>D
\    -description "Open page in Wiktionary (new tab)"
\    -js wpGotoWiktionary('tab');
map <site>l
\    -description "Go to latest revision"
\    -ex wplatest
map <site>o -description "(show bindings)" -js CommandExMode().open("showkeys <site>o")
map <site>ov
\    -description "Go WikiVisually page"
\    -js openOrSelectTab(buffer.URL.replace("en.wikipedia.org", "wikivisually.com"), count?"tab":"here");
map <site>p
\    -description "Open clipboard text in wikipedia"
\    -count -js wikipediaGotoPage(dactyl.clipboardRead(), count?"here":"tab", true);
map <site>P
\    -description "Open clipboard text in wiktionary"
\    -count -js wiktionaryGotoPage(dactyl.clipboardRead(), count?"here":"tab", true);
map <site>t
\    -description "Copy specified columns (single digits) from table chosen by HINT" -b
\    :wpcopytablecols<Space>
map <site>.
\    -description "Scroll to next heading"
\    -js wpGotoNextHeading();
map <site>,
\    -description "Scroll to previous heading"
\    -js wpGotoPreviousHeading();
map <site><Space>
\    -description "Clean up article"
\    -ex wpcleanup

map J
\    -description "Scroll to next heading"
\    -js wpGotoNextHeading();
map K
\    -description "Scroll to previous heading"
\    -js wpGotoPreviousHeading();

group user

" -------------------------------------------------------------------------------
" ,------------------,
" | WolframAlpha.com |
" '------------------'
group wolfram -locations=wolframalpha.com

" warning: wolframalpha.com uses multiple 'plaintext' ids when more than one box is showing"

js <<EOF
function wolframGetResult() {
    var ptdiv = content.document.getElementById('plaintext');
    if (ptdiv)
        utils.yankWithMsg(ptdiv.innerText);
    else
        content.document.querySelector('#Result .plaintext').click();
}
EOF

command! wolframresult
    \ -desciption "If plaintext showing, copy; else show plaintext"
    \ -js wolframGetResult();
map <site>c -ex wolframresult

group user

" -------------------------------------------------------------------------------
" ,-------------,
" | Youtube.com |
" '-------------'
group youtube -locations=youtube.com

js <<EOF
function ytplayer() {
    return content.document.getElementById("movie_player").wrappedJSObject;
}
window.ytplayer = ytplayer;

var ytMinSpeed = 0.25;
function ytGetSpeed() { return ytplayer().getPlaybackRate(); }
function ytSetSpeed(r) { ytplayer().setPlaybackRate(Math.max(r, ytMinSpeed)); }
function ytAdjustSpeed(delta) {
    var newspeed = ytGetSpeed()+delta;
    ytSetSpeed(newspeed);
    utils.yankWithMsg(`speed: ${newspeed}`);
}
function ytPlay() { ytplayer().playVideo(); }
function ytPause() { ytplayer().pauseVideo(); }
function ytIsPaused() { return (ytplayer().getPlayerState() == 2); }
function ytTogglePause() {
    if (ytIsPaused()) ytPlay();
    else ytPause();
}
function ytToggleMute() {
    var p = ytplayer();
    if (p.isMuted()) p.unMute();
    else p.mute();
}

function ytGetTime() { return ytplayer().getCurrentTime(); }

function ytForward(n) {
    var p = ytplayer();
    p.seekBy(n);
    utils.message(formatSeconds(ytGetTime()));
}

function ytDL(dir="~/Downloads", video=true) {
    if (!dir) dir = "~/Downloads";
    var xtraArgs = video ? "--all-subs" : "-f bestaudio";
    var cmd = `!cd ${dir}; youtube-dl -ci ${xtraArgs} --xattrs -o "%(title)s-%(id)s.%(ext)s" "${buffer.URL}"`;
    dactyl.execute(cmd);
}

function ytCloseAd() {
    var imgs = Array.from(content.document.getElementsByTagName("img"));
    imgs.forEach(img=>{
        if (img.src.includes('googlesyndication'))
        imgs.forEach(e=>e.remove && e.remove());
    });
}

function ytAdjustVolume(dvol) {
    var p = ytplayer();
    volCurr = p.getVolume();
    volNew = cutoff(volCurr + dvol, 0, 100);
    ytShowVolumeSlider();
    p.setVolume(volNew);
    return volNew;
}

function ytShowVolumeSlider() {
    var controlsDiv = content.document.querySelector('.ytp-chrome-bottom');
    controlsDiv.classList.add('ytp-volume-slider-active');
}

EOF

command! ytincrate -description "increase playback rate" -js ytAdjustSpeed(0.25);
command! ytdecrate -description "decrease playback rate" -js ytAdjustSpeed(-0.25);
command! ytshowrate
    \ -description "show playback rate"
    \ -js dactyl.utils.message(ytGetSpeed());

command! ytrate
    \ -description "set playback rate (normal rate = 10)"
    \ -nargs=1
    \ -js ytSetSpeed(args[0]/10);

command! ytfullscreen -description "toggle fullscreen" -js clickSelector('.ytp-fullscreen-button');
command! ytcinema -description "toggle cinema mode" -js clickSelector('.ytp-size-button');
command! ytmute -description "toggle mute" -js ytToggleMute();
command! ytlowervolume -description "lower volume" -nargs=? -js ytAdjustVolume(-5 * (args[0] || 1));
command! ytraisevolume -description "raise volume" -nargs=? -js ytAdjustVolume(5 * (args[0] || 1));
command! ytclosead -description "close popup ad in video" -js ytCloseAd();

map <site>r           -description "Set play rate" -b :ytrate<Space>
map <site>R           -description "Show play rate" -ex ytshowrate
map <site>\>          -description "Increase play rate" -count -js ytAdjustSpeed(0.25 * (count || 1));
map <site>\<          -description "Decrease play rate" -count -js ytAdjustSpeed(-0.25 * (count || 1));
map <site>c           -description "Toggle cinema" -ex ytcinema
map <site>d           -description "(show bindings)" -js CommandExMode().open("showkeys <site>d")
map <site>ddd         -description "Download video to Downloads" -ex ytdl
map <site>dd<Space>   -description "Download video" -b :ytdl<Space>
map <site>daa         -description "Download audio to Downloads" -ex ytdlaudio
map <site>da<Space>   -description "Download audio" -b :ytdlaudio<Space>
map <site>f           -description "Toggle fullscreen" -ex ytfullscreen
map <site>m           -description "Toggle mute" -ex ytmute
map <site>u           -description "Toggle user agent override" -ex actoggleuaoverride
map <S-right> -js ytForward(3);
map <S-left>  -js ytForward(-3);
map <A-right> -js ytForward(10);
map <A-left>  -js ytForward(-10);
map <C-right> -js ytForward(60);
map <C-left>  -js ytForward(-60);
map <PageDown> -count -ex ytlowervolume <count>
map <PageUp>   -count -ex ytraisevolume <count>
map <XF86AudioMute> -ex ytmute
map <XF86AudioLowerVolume> -count -ex ytlowervolume <count>
map <XF86AudioRaiseVolume> -count -ex ytraisevolume <count>
map <S-BS> -js ytCloseAd();

command! ytdl
    \ -description "Download video/playlist with youtube-dl"
    \ -nargs=?
    \ -complete=file
    \ -js ytDL(args[0]);
command! ytdlaudio
    \ -description "Download video/playlist with youtube-dl"
    \ -nargs=?
    \ -complete=file
    \ -js ytDL(args[0] || "~/Music", false);

map <site><Space> -js ytTogglePause();
map <Space> -js ytTogglePause();
command! ytBindSpacebar -ex map <Space> -js ytTogglePause();

group user

" -------------------------------------------------------------------------------
" ,-------------,
" | OTHER SITES |
" '-------------'

group tipsonjap -locations=meadowlake001.blogspot.jp
" Tips on Japanese
" http://meadowlake001.blogspot.jp
command! widenSidebar -group tipsonjap
    \ -js <<EOF
    var s=content.document.getElementById('sidebar');
    var c=content.document.getElementById('content');
    s.style.width='400px';
    c.style['margin-left']='400px';
EOF

group user

" ===============================================================================
"                                 __________________
"                                |                  |
"                                | HELPER FUNCTIONS |
"                                |__________________|

js <<EOF

" ,-----------, "
" | Selection | "
" '-----------' "

function getSelectionText() {
    return content.getSelection().text;
}

// author: Tim Down. see: https://stackoverflow.com/a/4652824/1261964
function getSelectionHtml() {
    var html = "";
    if (typeof content.window.getSelection != "undefined") {
        var sel = content.window.getSelection();
        if (sel.rangeCount) {
            var container = content.document.createElement("div");
            for (var i = 0, len = sel.rangeCount; i < len; ++i) {
                container.appendChild(sel.getRangeAt(i).cloneContents());
            }
            html = container.innerHTML;
        }
    } else if (typeof content.document.selection != "undefined") {
        if (content.document.selection.type == "Text") {
            html = content.document.selection.createRange().htmlText;
        }
    }
    return html;
}
window.getSelectionHtml = getSelectionHtml;

function getSelectionDOM() {
    var str = getSelectionHtml();
    var parser = new DOMParser();
    return parser.parseFromString(str, "text/html");
}
window.getSelectionDOM = getSelectionDOM;

" ,----------------------------------------, "
" | Functions taking Elements or Selectors | "
" '----------------------------------------' "

function getSelectors(...sels) {
    return Array.from(content.document.querySelectorAll(sels.join(",")));
}
window.getSelectors = getSelectors;

function removeSelectors(...sels) {
    var elts = getSelectors(...sels);
    elts.forEach(e=>e.parentNode.removeChild(e));
}

function removeSelectorFiltered(sel, pred) {
    var elts = getSelectors(sel).filter(pred);
    elts.forEach(e=>e.parentNode.removeChild(e));
}

function getFirstSelector(sel) {
    " Return the first element matching selector sel ";
    return content.document.querySelector(sel);
}
window.getFirstSelector = getFirstSelector;

function removeFirstSelector(sel) {
    "Remove the first element matching sel."
    elt = getFirstSelector(sel);
    elt.parentNode.removeChild(elt);
}

"remove each matching element, plus immediately preceding heading (H1-H6)"
function removeSelectorsWithPrecedingHeading(...sels) {
    var elts = getSelectors(...sels);
    elts.forEach(e=> {
        var prev = e.previousElementSibling;
        if (prev && prev.tagName && prev.tagName.match(/H[1-6]/))
            prev.parentNode.removeChild(prev);
        e.parentNode.removeChild(e);
    });
}

function topElements() { return [...content.document.body.children] };

function isolateSelector(sel) {
    selectedElt = content.document.querySelector(sel);
    topElements().forEach(elt => elt.remove());
    content.document.body.appendChild(selectedElt);
}

" TODO: remove nonmatching elements rather than replacing matching ones "
function isolateSelectors(...sels) {
    selectedElts = [...content.document.querySelectorAll(sels)];
    topElts = [...content.document.body.children];
    topElts.forEach(elt => elt.remove());
    selectedElts.forEach(elt =>
        content.document.body.appendChild(elt)
    );
}
function isolateSelectorsFiltered(...selPredPairs) {
    " Each argument is either a selector string or a pair [SELECTOR, PRED] "
    var doc = content.document;
    var eltsForSel, eltsForSelFiltered;
    var keep = [];
    selPredPairs.forEach(arg=>{
        if (typeof arg == "string") {
            keep = keep.concat(Array.from(content.document.querySelectorAll(arg)));
        } else {
            var [sel, pred] = arg;
            pred = pred || ((e)=>true);
            eltsForSel = [...content.document.querySelectorAll(sel)];
            eltsForSelFiltered = eltsForSel.filter(pred);
            keep = keep.concat(eltsForSelFiltered);
        }
    });
    topElements().forEach(elt => elt.remove());
    keep.forEach(elt =>
        content.document.body.appendChild(elt)
    );
}
function isolateSelectorsFilteredHelper(...args) {
    var processedArgs = args.map(pair=>[pair[0], eval("(e)=>"+pair[1])]);
    return isolateSelectorsFiltered.call(null, ...processedArgs);
}

function hideElement(e) {
    var css = e.getAttribute('style') || '';
    var regex = /(^|;| ) *display: *\w+ *(!important)? *;/g;
    var match = css.match(regex);
    var newcss = match ? css.replace(regex, "display: none !important;")
                       : css + " display: none !important;";
    e.setAttribute('style', newcss);
}
window.hideElement = hideElement;

function unhideElement(e) {
    var css = e.getAttribute('style') || '';
    var hideregex = /(^|;| ) *display: *none *(!important)? *;/g;
    e.setAttribute('style', css.replace(hideregex, ''));
}
window.unhideElement = unhideElement;

function hideSelectors(...sels) {
    var doc = content.document;
    sels.forEach(sel=>{
        var elts = Array.from(doc.querySelectorAll(sel));
        elts.forEach(hideElement);
    });
}

function unhideSelectors(...sels) {
    var doc = content.document;
    sels.forEach(sel=>{
        var elts = Array.from(doc.querySelectorAll(sel));
        elts.forEach(unhideElement);
    });
}

function toggleHideSelectors(...sels) {
    var doc = content.document;
    sels.forEach(sel=>{
        var elts = Array.from(doc.querySelectorAll(sel));
        elts.forEach(e=>{
            var css = e.getAttribute('style') || '';
            var hideregex = /(^|;| ) *display: *none *(!important)? *;/g;
            if (css.match(hideregex))
                e.setAttribute('style', css.replace(hideregex, ''));
            else
                e.setAttribute('style', css+" display: none !important;");
        });
    });
}

function hideFirstSelector(sel) {
    "Hide the first element matching sel."
    var doc = content.document;
    var elt = doc.querySelector(sel);
    e.setAttribute('style', css+" display: none !important;");
}

function blankSelectors(...sels) {
    var doc = content.document;
    sels.forEach(sel=>{
        var elts = Array.from(doc.querySelectorAll(sel));
        elts.forEach(e=>{
            var css = e.getAttribute('style') || '';
            e.setAttribute('style', css+" visibility: hidden !important;");
        });
    });
}

function setSelectorsOpacity(opacity, ...sels) {
    var doc = content.document;
    sels.forEach(sel=>{
        var elts = Array.from(doc.querySelectorAll(sel));
        elts.forEach(e=>{
            e.style.opacity = opacity;
        });
    });
}

function getSelectorContent(sel, target='innerText') {
    "target may be:";
    "     * a string, naming an attribute";
    "     * a function taking an element and returning a string.";
    selectedElts = Array.from(content.document.querySelectorAll(sel));
    result = [];
    selectedElts.forEach(
        selectedElt => {
            if (typeof target === 'string')
                selectedContent = selectedElt[target];
            else
                selectedContent = target(selectedElt);
            result.push(selectedContent);
        }
    )
    return result;
}

function getSelectorsContent(sels) {
    result = [];
    sels.forEach(sel=>{
        selectedElts = Array.from(content.document.querySelectorAll(sel));
        selectedElts.forEach(e=>result.push(e.innerText));
    });
    return result;
}

function getSelectorWithMatchingAttribute(sel, att, expr) {
    var all_elts = Array.from(content.document.querySelectorAll(sel));
    var matching = all_elts.filter(e=>e.hasAttribute(att) && e.getAttribute(att).match(expr));
    return matching;
}
window.getSelectorWithMatchingAttribute = getSelectorWithMatchingAttribute;

function getFirstSelectorWithMatchingAttribute(sel, att, expr) {
    var all_elts = Array.from(content.document.querySelectorAll(sel));
    var matching = all_elts.filter(e=>e.hasAttribute(att) && e.getAttribute(att).match(expr));
    return matching && matching[0];
}
window.getFirstSelectorWithMatchingAttribute = getFirstSelectorWithMatchingAttribute;

function removeSelectorWithMatchingAttribute(sel, att, expr) {
    var all_elts = Array.from(content.document.querySelectorAll(sel));
    var matching = all_elts.filter(e=>e.hasAttribute(att) && e.getAttribute(att).match(expr));
    matching.forEach(e => e.parentNode.removeChild(e));
}
window.removeSelectorWithMatchingAttribute = removeSelectorWithMatchingAttribute;

// TODO: allow multiple selectors (prevent duplication of elements)
function countSelector(sel) {
    var elts = content.document.querySelectorAll(sel);
    return elts.length;
}

function clickSelector(sel) {
    if (typeof sel == "string") {
        /* selector */
        var getButton = content.document.querySelector(sel);
        if (getButton) {
            getButton.click();
            return true;
        }
    } else {
        /* element */
        if (sel) {
            sel.click();
            return true;
        }
    }
}
window.clickSelector = clickSelector;

function clickSelectorAll(sel) {
    if (typeof sel == "string") {
        /* selector */
        var elts = content.document.querySelectorAll(sel);
        for (i=0; i<elts.length; ++i) {
            elts[i].click();
        }
        return elts.length;
    } else {
        /* element */
        if (sel) {
            sel.click();
            return true;
        }
    }
}
window.clickSelectorAll = clickSelectorAll;

function dispatchClickSelector(sel) {
    if (typeof sel == "string") {
        /* selector */
        var elt = content.document.querySelector(sel);
        dispatchClickEvent(elt);
    } else {
        /* element */
        dispatchClickEvent(sel);
    }
}
window.dispatchClickSelector = dispatchClickSelector;

function dispatchClickEvent(elt) {
   var ev = document.createEvent("MouseEvents");
   ev.initEvent("click", true, true);
   elt.dispatchEvent(ev);
}
window.dispatchClickEvent = dispatchClickEvent;

function getSelectorByText(sel, pattern) {
    var elts = Array.from(content.document.querySelectorAll(sel));
    return elts.filter(elt => elt.textContent.trim().match(pattern));
}
window.getSelectorByText = getSelectorByText;
function getFirstSelectorByText(sel, pattern) {
    var elts = Array.from(content.document.querySelectorAll(sel));
    return elts.find(elt => elt.textContent.trim().match(pattern));
}
window.getFirstSelectorByText = getFirstSelectorByText;

function clickSelectorByText(sel, pattern) {
    var selectors = getSelectorByText(sel, pattern);
    if (selectors.length) {
        selectors[0].click();
        return true;
    } else {
        return false;
    }
}
window.clickSelectorByText = clickSelectorByText;

function clickSelectorByTextAll(sel, pattern) {
    var elts = getSelectorByText(sel, pattern);
    for (i=0; i<elts.length; ++i) {
        selectors[i].click();
    }
    return elts.length;
}
window.clickSelectorByTextAll = clickSelectorByTextAll;

function openLinkBySelectorAll(sel) {
    var elts = content.document.querySelectorAll(sel);
    for (i=0; i<elts.length; ++i) {
        dactyl.open(elts[i].href, {where: "background-tab"});
    }
}
window.openLinkBySelectorAll = openLinkBySelectorAll;

" ,------, "
" | Tabs | "
" '------' "

function closeTabsLeftWhileMatching(regex, n) {
    "Close tabs from current, working left, while url matches regex";
    "n = max tabs to close";
    var currentTab = tabs.getTab();
    var currentIdx = currentTab.dactylOrdinal - 1;
    var ts = Array.from(new Array(currentIdx+1), (_,i)=>tabs.getTab(i));
    ts.reverse();
    if (Number(n) > 0)
        ts = ts.slice(0, n);
    for (t of ts) {
        if (tabURL(t).match(regex))
            tabs.remove(t);
    }
}

function openInNewOrCurrentTab(site) {
    "Curried function openInNewOrCurrentTab(url)(count):"
    "  Open URL in new tab, or with COUNT, in current tab."
    return function(count=false) {
        if (typeof count == 'number')
            dactyl.open(site, {where:dactyl.CURRENT_TAB});
        else
            dactyl.open(site, {where:dactyl.NEW_TAB})
    };
}

function selectTab(url, reload=false) {
    if (url) {
        var alltabs = Array.from(tabs.allTabs);
        var existingTab = alltabs.find( t=> t.linkedBrowser.contentDocument &&
                                            t.linkedBrowser.contentDocument.URL.match(url));
        if (existingTab) {
            tabs.select(existingTab);
            reload && tabs.reload(existingTab);
            return [existingTab.dactylOrdinal, existingTab.linkedBrowser.contentDocument.URL];
        }
        else return null;
    }
}

function openOrSelectTab(url, where='tab', regex=null, reload=false, closeOldTab=false) {
    /* note: doesn't work when pending tabs are present                                   */
    /* Select tab matching regex (or url if regex is null). If none, open url in new tab. */
    if (url) {
        var alltabs = Array.from(tabs.allTabs);
        var existingTab =
            regex ? alltabs.find( t=> t.linkedBrowser.contentDocument &&
                                      t.linkedBrowser.contentDocument.URL.match(regex)
                                )
                  : alltabs.find( t=> t.linkedBrowser.contentDocument &&
                                      t.linkedBrowser.contentDocument.URL.indexOf(url)>=0
                                );
        if (existingTab) {
            closeOldTab && tabs.remove(tabs.getTab());
            tabs.select(existingTab);
            reload && tabs.reload(existingTab);
        }
        else dactyl.open(url, {where: where});
    }
}

function openOrSummonTab(url, background=false, regex=null) {
    /* note: doesn't work when pending tabs are present */
    if (url) {
        var alltabs = Array.from(tabs.allTabs);
        var existingTab =
            regex ? alltabs.find(t=>t.linkedBrowser.contentDocument.URL.match(regex))
                  : alltabs.find(t=>t.linkedBrowser.contentDocument.URL.indexOf(url)>=0);
        if (existingTab) {
            tabs.move(existingTab, tabs.getTab().dactylOrdinal+1);
            background || tabs.select(existingTab);
        } else {
            if (background)
                dactyl.execute("background tabopen " + url);
            else
                dactyl.open(url, {where: 'tab'});
        }
    }
}

" ,-------------------------------, "
" | Iteration and Array functions | "
" '-------------------------------' "

function foreachElement(f, top=content.document) {
    Array.from(top.getElementsByTagName("*")).forEach(f);
}

function foreachNode(f, top=content.document) {
    var nodes = [];
    var recurseNode = function(top) {
        nodes.push(top);
        for (n of top.childNodes)
            recurseNode(n);
    }
    recurseNode(top);
    nodes.forEach(f);
}

function listElements(pred, options={}) {
    var top = options.top || content.document;
    var max = options.max;
    var elts = [];
    foreachElement(e=>{ if (pred(e)) elts.push(e); }, top);
    return max ? elts.slice(0, max) : elts;
}
function listNodes(pred, options={}) {
    var top = options.top || content.document;
    var max = options.max;
    var nodes = [];
    foreachNode(n=>{ if (pred(n)) elts.push(n); }, top);
    return max ? nodes.slice(0, max) : nodes;
}
window.listElements = listElements;
window.listNodes = listNodes;

" ,---------------, "
" | Miscellaneous | "
" '---------------' "

function openHTML(html, where='tab') {
    var dataURI = "data:text/html," + encodeURIComponent(html);
    dactyl.open(dataURI, where);
}
window.openHTML = openHTML;

function isAscii(s) {
    return Array.from(s).every(c=>c.charCodeAt(0) <= 128);
}

function urlLastComponent(url) {
    return url.replace(/^.*\//, '');
}

function indexToOrdinalString(n) {
    // trim in case n is a string to start with
    var nstr = n.trim().toString();
    var lastDigit = nstr.slice(-1);
    switch (parseInt(lastDigit)) {
        case 1:
            return nstr + "st";
        case 2:
            return nstr + "nd";
        case 3:
            return nstr + "rd";
        case 4: case 5: case 6: case 7: case 8: case 9: case 0:
            return nstr + "th";
    }
}

function stripBlankLines(s) { return s.replace(/\n\s*\n/gm, '\n'); }

function strToWikiTitle(s, capitalizeStr=true) {
     var joined = s.replace(/[ \t]+/, "_");
     var title = capitalizeStr ? S.capitalize(joined) : joined;
     return encodeURIComponent(title);
}

function isInView(elt) {
    var bound = elt.getBoundingClientRect();
    var viewBottom = content.window.innerHeight || content.document.documentElement.clientHeight;
    var viewRight = content.window.innerWidth || content.document.documentElement.clientWidth;
    var inview = bound.top >= 0 && bound.left >= 0 && bound.bottom <= viewBottom && bound.right <= viewRight;
    return inview;
}

function getTextArea(n) {
    var tareas = content.document.querySelectorAll('textarea');
    return tareas[n].textContent;
}

function alertobj(obj) {
    var s = "";
    for(k in Object.keys(obj)) {
        s += `${k.toString()}: ${obj[k].toString()}\n`;
    }
    alert(s);
}
window.alertobj = alertobj;

function alertall(...xs) {
    var s = "";
    for(x of xs) {
        s += x.toString() + "\n";
    }
    alert(s);
}
window.alertall = alertall;

function runInZSH(cmd) {
    var executable = XpcInstance("@mozilla.org/file/local;1", Components.interfaces.nsILocalFile);
    executable.initWithPath("/usr/bin/roxterm");
    var process = XpcInstance("@mozilla.org/process/util;1", Components.interfaces.nsIProcess);
    process.init(executable);
    process.runAsync(["-e",`zsh -c 'source ~/.sh-aliases; source .sh-functions; ${cmd}; zsh'`], 2);
}
window.runInZSH = runInZSH;

function runInPlainZSH(cmd) {
    var executable = XpcInstance("@mozilla.org/file/local;1", Components.interfaces.nsILocalFile);
    executable.initWithPath("/usr/bin/roxterm");
    var process = XpcInstance("@mozilla.org/process/util;1", Components.interfaces.nsIProcess);
    process.init(executable);
    process.runAsync(["-e",`zsh -f --no-rcs -c '${cmd}; zsh'`], 2);
}
window.runInPlainZSH = runInPlainZSH;

// modulus function taking negative n (base assumed to be positive)
function mod(n,b) { return n<0 ? n%b + Number(b) : n%b; }

// requires a webdriver implementation
function mouse_x() { return MousePosTracker._x; }
function mouse_y() { return MousePosTracker._y; }

function searchCommandSets(regex) {
    var cmdsets = document.querySelectorAll('commandset');
    var cmds = Array.from(document.querySelectorAll('command'));
    for (cmd of cmds) {
        if (cmd.id.match(regex))
           utils.message(cmd.id+': '+cmd.oncommand);
    }
}
window.searchCommandSets = searchCommandSets;

function getMenuItems(regex) {
    var mitems = document.querySelectorAll('menuitem');
    var result = [];
    for (mitem of mitems) {
        if (mitem.id.match(regex))
            result.push(mitem);
    }
    return result;
}
window.getMenuItems = getMenuItems;

function removeXPath(xpathexpr) {
    var elts =
        content.document.evaluate(
            xpathexpr,
            content.document,
            null,
            XPathResult.ANY_TYPE,
            null);
    var elt;
    while (elt = elts.iterateNext()) {
        elt.parentNode.removeChild(elt);
    }
}

function getLinksWithMatchingUrl(s) {
    var links = Array.from(content.document.getElementsByTagName('a'));
    var matching = links.filter(l=>l.href.match(s));
    return matching;
}
window.getLinksWithMatchingUrl = getLinksWithMatchingUrl;

function matches(var_, regex) { return (var_ && var_.match && var_.match(regex)); }
window.matches = matches;

function concatRegex(...regexps) {
    return RegExp(regexps.map(r=>`(${r.source})`).join(""));
}
window.concatRegex = concatRegex;

function getNthFromRootPath(n=1, url=buffer.URL) {
    n = n || 1;
    var protocolReStr = "^[^:/]+://";
    var oneLevelReStr = "[^/]+/";
    var reStr = protocolReStr + oneLevelReStr.repeat(n);
    var re = RegExp(reStr);
    var newUrl = url.match(re)[0];
    return newUrl;
}
function openNthFromRootPath(n=1, url = buffer.URL) {
    return dactyl.open(getNthFromRootPath(n, url));
}

function getNthUrlPathParent(n=1, url=buffer.URL) {
    var oneLevelReStr = "/[^/]+";
    var reStr = oneLevelReStr.repeat(n||1) + "/?$";
    var regex = RegExp(reStr);
    var newUrl = url.replace(regex, "");
    return newUrl;
}
function openNthUrlPathParent(n=1, url=buffer.URL) {
    return dactyl.open(getNthUrlPathParent(n, url));
}

function addMarginToBody(lr="60px", tb=null) {
    var newstyle = content.document.createElement("style");
    if (!tb)
        newstyle.innerText = `body { margin-left: ${lr}; margin-right: ${lr}; }`
    else if (!lr)
        newstyle.innerText = `body { margin-left: ${tb}; margin-right: ${tb}; }`
    else
        newstyle.innerText = `body { margin: ${tb} ${lr}; }`
    content.document.head.appendChild(newstyle);
}

function getImageUrl(elt) {
    "if image is part of an anchor tag, get target URL, else get image source"
    if (elt.parentElement.tagName == "A") return elt.parentElement.href;
    else return elt.src;
}

" Escape shell special characters in filename"
function escapeFilename(f) { return f.replace(/[\[\]\-\\^ '!#$&()*,;<>?`{}|~]/g, '\\$&'); }
" Escape shell special characters which aren't yet escaped "
" Occurs when using completion starting from an escaped directory: "
"   Pentadactyl's completion only escaped spaces. "
function escapeFilenameUnescapedChars(f) {
    return f.replace(/\\?(\[|\]|-|\\|\^| |!|#|\$|&|\(|\)|\*|,|;|<|>|\?|`|{|}|\||~|')/g, "\\$&")
}
window.escapeFilenameUnescapedChars = escapeFilenameUnescapedChars;

" ,------------, "
" | conversion | "
" '------------' "
function inToCm(x) { return x * 2.54; }
function cmToIn(x) { return x / 2.54; }
function kgToLb(x) { return x * 2.205; }
function lbToKg(x) { return x / 2.205; }
function paper_lbToGsm(x) { return x * 1.48; }
function paper_gsmToLb(x) { return x / 1.48; }
function USFluidOunceToMl(x) { return x * 29.5735295625; }
function mlToUSFluidOunce(x) { return x / 29.5735295625; }
window.inToCm = inToCm;
window.cmToIn = cmToIn;
window.kgToLb = kgToLb;
window.lbToKg = lbToKg;
window.paper_lbToGsm = paper_lbToGsm;
window.paper_gsmToLb = paper_gsmToLb;
window.USFluidOunceToMl = USFluidOunceToMl;
window.mlToUSFluidOunce = mlToUSFluidOunce;

function subCmForInches(s) {
    var regex = /(-?\d+(\.\d+)?) *("|in(ch(es)?)?)/g;
    var replaceFn = function(m, m1, m2, m3, m4, m5, start, s, n) {
        return inToCm(m1) + "cm";
    };
    return s.replace(regex, replaceFn);
}
window.subCmForInches = subCmForInches;

function FtoC(tempF) { return (tempF-32)/1.8; }
window.FtoC = FtoC;

function USDtoAUD(x) { return parseFloat(x) * getUSDAUDexchange(); }
window.USDtoAUD = USDtoAUD;

function subAUDforUSD(s) {
    var regex = RegExp(/(?!AU)(?:US)?\$(\d+[.]\d\d)/g);
    var replaceFn = function(m, m1, start, s, n) {
        return sprintf("AU$%.2f", USDtoAUD(m1));
    };
    return s.replace(regex, replaceFn);
}
window.subAUDforUSD = subAUDforUSD;

function updateUSDAUDexchange() {
    var url=`http://openexchangerates.org/latest.json?app_id=${dactyl.user.myopenexchangeratesappid}&base=USD`;
    fetch(url)
        .then(response=>response.json())
        .then(obj => {
            var base = obj.rates.base;
            var rate = obj.rates.AUD;
            window.AUDperUSD = rate;
            utils.message(rate);
        });
}

function setUSDAUDexchange(rate) { return window.AUDperUSD = rate; }
function getUSDAUDexchange() { return window.AUDperUSD; }
window.getUSDAUDexchange = getUSDAUDexchange;
" ------------------------------------------------------------------------------- "

function messageArrayItems(a) { utils.message(a.join('\n')); };
function yankArrayItems(a)  { utils.yankWithMsg(a.join('\n')); };

function seq(n) { return Array.from(new Array(n), (_,i)=>i); }
window.seq = seq;

function id(x) { return x; }
function fconst(x) { return function(...args) { return x; }; }
function ftrue(...args) { return true; }
function ffalse(...args) { return false; }
window.id = id;
window.fconst = fconst;
window.ftrue = ftrue;
window.ffalse = ffalse;

var re_label = /(?!-)[-a-z0-9\\u00a1-\\uffff]*[a-z0-9\\u00a1-\\uffff]/;
window.re_label = re_label;
var re_http_url = new RegExp(
    "(https?://|localhost:)?" +
    `((?:${re_label.source}[.])*${re_label.source})` + "(:\\d+)?" +
    "(/[^?# \\t]+)?" +
    "(\\?[^# \\t]+)?" +
    "(#\\S+)?"
);
window.re_http_url = re_http_url;
var re_http_url_groups = ["whole URL", "scheme", "host", "port", "path", "query", "fragment"];
window.re_http_url_groups = re_http_url_groups;

" ,--------, "
" | Saving | "
" '--------' "
function wget(url=null, optstr="", dirpref="~/Downloads") {
    if (url) dactyl.open(url, {where: dactyl.NEW_TAB});
    else url = buffer.URL;
    var title = buffer.title;
    dirpref = dirpref.replace("~", env.get("HOME"));
    var savedir = `${dirpref}/${title}`;
    dactyl.execute(`!mkdir '${savedir}' || echo "Directory already exists."`);
    dactyl.execute(`!wget ${optstr} -P '${savedir}' ${url}`);
}

function wgetm(url=null, optstr="", dirpref="~/Downloads") {
    wget(url, "-nH -kKpN -rl inf -np --no-remove-listing "+optstr, dirpref);
}

function wget1(url=null, optstr="", dirpref="~/Downloads") {
    wget(url, "wget -kKpEHN -rl 1 "+optstr, dirpref);
}

function curl(url, dir, title, optstr, force) {
    if (url) dactyl.open(url, {where: dactyl.NEW_TAB});
    else url = buffer.URL;
    optstr = optstr || "";
    dir = dir || "~/Downloads";
    dir = dir.replace("~", env.get("HOME"));
    title = title || decodeURIComponent(buffer.URL).replace(/.*\//,"");
    var savepath = `${dir}/${title}`;
    dactyl.execute(`!mkdir -p '${dir}'`);
    if (force)
        dactyl.execute(`!curl ${optstr} ${url} > '${savepath}'`);
    else
        dactyl.execute(`![[ ! -f ${savepath} ]] && curl ${optstr} ${url} > '${savepath}'`);
}

function savePageDialog() {
    var fp = XpcInstance("@mozilla.org/filepicker;1", nsIFilePicker);
    fp.init(content.window, "save file", nsIFilePicker.modeSave);
    fp.appendFilters(nsIFilePicker.filterText);
    fp.appendFilters(nsIFilePicker.filterAll);
    fp.open(function(rv) {
        var wbp = Components.classes['@mozilla.org/embedding/browser/nsWebBrowserPersist;1']
                  .createInstance(Components.interfaces.nsIWebBrowserPersist);
        if (rv == nsIFilePicker.returnOK || rv == nsIFilePicker.returnReplace) {
            wbp.saveDocument(content.document, fp.file, null, null, null, null);
        }
    });
}
window.savePageDialog = savePageDialog;

function getLastDownload(n=1) {
    dlListP = Downloads.getSummary(Downloads.ALL);
    var resultP = dlListP.then(function (dlList) {
        return dlList._downloads[dlList._downloads.length - n].target.path;
    });
    return resultP;
}
window.getLastDownload = getLastDownload;

function xdgOpenLastDownload(n=1) {
    var dlP = getLastDownload(n);
    dlP.then(function(dl) { io.system(`xdg-open '${dl}'`); });
}
window.xdgOpenLastDownload = xdgOpenLastDownload;

function trashLastDownload(n=1) {
    var dlP = getLastDownload(n);
    dlP.then(function(dl) {
        var cmd=io.system(`trash '${dl}'`);
        if (cmd.returnValue==0) utils.message("Trashed " + dl);
        else utils.message("Failed to trash " + dl);
    });
}

" ------------------------------------------------------------------------------- "

function formatSeconds(n) {
    var hours = Math.floor(n/3600);
    n -= hours*3600;
    var mins = Math.floor(n/60);
    n -= mins*60;
    var secs = n;
    if (hours) return sprintf("%d:%02d:%02d", hours, mins, secs);
    else return sprintf("%d:%02d", mins, secs);
}

function stringToSmartCaseRegExp(s) {
    return RegExp(s, s.match(/[A-Z]/) ? '' : 'i' );
}

function cutoff(num, min, max) {
    return Math.min(Math.max(num, min), max);
}

function newTab(url="about:newtab") {
    var browser = getBrowser();
    var referrer = XpcInstance("@mozilla.org/network/simple-uri;1", Components.interfaces.nsIURI);
    var tab = browser.addTab(url, referrer, "utf-8");
    return tab;
}
window.newTab = newTab;

function parseRanges(s) {
    var result = [];
    s.split(",").forEach(ss => {
        var r = ss.split("-");
        if (r.length == 1) result.push(parseInt(r[0]));
        else for (i of A.range(parseInt(r[0]), parseInt(r[1])+1))
            result.push(i);
    });
    return result;
}

function getDate(fmt='%y-%m-%d-%T') {
    return io.system(`date '+${fmt}'`).output;
}

function getHomeDirAsFileURL() {
    var homedir = io.system('echo $HOME').output;
    return `file://${homedir}/`;
}
function getHomeDir() {
    var homedir = io.system('echo $HOME').output;
    return homedir+'/';
}

function getStyleProperty(elt, prop) {
    var style = content.window.getComputedStyle(elt);
    var val = style.getPropertyValue(prop);
    return val!="none" && val;
}
window.getStyleProperty = getStyleProperty;

function getBackgroundImages() {
    var allElts = Array.from(content.document.getElementsByTagName("*"));
    return allElts.filter(e => getStyleProperty(e, "background-image"));
}

// ,-------------------------,
// | variables for temp data |
// '-------------------------'

window._dactylargs = null;
function dactylArgsSet(value) {
    window._dactylargs = value;
}

window._dactylresult = null;
function dactylResultSet(value) {
    window._dactylresult = value;
}

window._dactyldata = {};
function dactylDataSet(key, value) {
    window._dactyldata[key] = value;
}
window.dactylDataSet = dactylDataSet;
function dactylDataGet(key) {
    return window._dactyldata[key];
}
window.dactylDataGet = dactylDataGet;

EOF

" -----------------------------------------------------------------------------
" ,-----------------,
" | USEFUL COMMANDS |
" '-----------------'
"
" call function defined in document: content.wrappedJSObject.page_func()
" alternative to :execute: :js CommandExMode().open(exCommandString)
" echo in dactyl status bar: dactyl.echo('');
" current browser     getBrowser().selectedBrowser
" current document    getBrowser().selectedBrowser.contentDocument
"                     content.document
" current tab:        tabs.getTab()
" current selection:  buffer.currentWord
" current URL:        buffer.URL
" get tab with index i:  tabs.getTab(i)
" number of tabs:        tabs.count
" ordinal (one-based) of tab:   t.dactylOrdinal
" index of tab (zero-based):    t._tPos
" capture output of shell command:    io.system('command').output
" simulate mouse event: elt.dispatchEvent(new MouseEvent('click', {bubbles: true, cancelable: true}))
" to override user agent for specific domain, use general.useragent.override.example.com
" check if window is private: PrivateBrowsingUtils.isContentWindowPrivate(aContentWin)
"
" =============================================================================
" ,-------------------,
" | PENTADACTYL NOTES |
" '-------------------'
" * If we want to pass a count to a javascript mapping, it will be null if no
"   count is provided. Eg.:
"       map x -count -js myFunc(count)
"   A default argument isn't enough, since it only handles missing (undefined)
"   arguments.We can handle this with:
"       function myFunc(n="default") {
"           n = n || "default";
"           // ....
"       }
"   This also redefines the argument when zero is passed, but if it's only meant
"   to take a count, it's okay, since counts can't be zero.
" * When defining a command, if | cannot be used, you can use a new command on each line
"   (using the line continuation character \).
"       command! foo feedkeys l
"           \ feedkeys l
"           \ feedkeys l
"   * The downside is that sometimes a single command cannot be split. Eg.:
"           command! librarysticky silent library |
"               \ silent ! wmctrl -F -r "Library" -e 0,1081,216,812,815;
"               \          wmctrl -F -a "Library" -r "Library" -b add,above,sticky;
"     gives a "not a pentadactyl command" error. You must use a single line, or (when possible,
"     as in this case) split it into two individual commands.
" * io.run(prog, [arg1, ...]) will run an external program.
" * io.system(cmd, input="", async=false) will run a command in a subshell and return output.
"   * prog can be a string or an array of strings [prog, arg1, ...].
"   * input is sent on stdin.
"   * async may be a callback to be run when command returns or boolean (whether to return a promise).
" * Error reporting: use dactyl.reportError(e) in catch block.
" * buffer.followLink(elem, where): simulates click on element
