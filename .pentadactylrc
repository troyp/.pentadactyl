"     ___________________
"    /                   \
"    | ,---------------, |
"    | | PENTADACTYLRC | |
"    | '---------------' |
"    \___________________/
"
"
group user

" load javascript utilities
runtime! utils.js
" load utils into current context
js var utils = dactyl.utils.getPlugin("utils");

" load personal details
runtime! personal.js
js var user = dactyl.utils.getPlugin("personal");

runtime! jquery.min.js
set passkeys=


" -----------------------------------------------------------------------------
" ,---------,
" | Options |
" '---------'
"
set runtimepath=/home/troy/.pentadactyl
set guioptions=bBCrmNsT
set incfind
set hlfind
set findcase=smart
set showstatuslinks=status
"set wildmode=list:longest,list:full
set wildmode=list:longest,list:full
set altwildmode=list:full
set strictfocus=mail.google.com:laissez-faire,'chrome:*':laissez-faire,*:moderate
set editor='roxterm --replace -e vim -f +<line> +"sil! call cursor(0, <column>)" <file>'
set scrolltime=0
set scrollsteps=1

" nextpattern, previouspattern
" default: '^\s*Next Page\s*$','^\s*Next [>»]','\bnext\b',^>$,'^(>>|»)$','^(>|»)','(>|»)$','\bmore\b',
" default: '^\s*Prev(ious)? Page\s*$','[<«] Prev\s*$','\bprev(ious)?\b',^<$,'^(<<|«)$','^(<|«)',
set nextpattern='^\W*\bForward\b\W*$','^\s*Next Page\s*$','^\s*Next [>»]','\bnext\b',^>$,'^(>>|»)$','^(>|»)','(>|»)$','\bMore Words\b','\bmore\b',
set previouspattern='^\W*\bBack\b\W*$','^\s*Prev(ious)? Page\s*$','[<«] Prev\s*$','\bprev(ious)?\b',^<$,'^(<<|«)$','^(<|«)','(<|«)$'

set wildignore='~$','^(.*/)?\..*\.sw[m-p]$','^(.*/)?#.+#$'


" Ex commands output in a new tab by default (prefs, addons...)
set newtab=all

" make yanks go to clipboard
js editor.defaultRegister="+"

set! browser.tabs.closeWindowWithLastTab=false

command! editorvim :set editor='gvim -f +<line> +"sil! call cursor(0, <column>)" +"set ft=markdown" <file>'
command! editoremacs :set editor='emacsclient'
command! editoremacsnewwin :set editor='emacsclient -c'


" =============================================================================
"                                   ______________
"                                  |              |
"                                  | KEY BINDINGS |
"                                  |______________|

" -------------------------------------------------------------------------------
" ,-------------,
" | Prefix Keys |
" '-------------'

" Unmap prefix keys
map s <Nop>
" map S <Nop>
" map <C-x><C-h> <Nop>
" map <C-x> <Nop>

" Map prefix keys to prefix pseudokeys
map e <goto>
map c <site>
" " The <sel> and <sidebar> pseudokeys were broken for some reason
" map s <sel>
" map S <sidebar>
map x <extra>
map X <S-extra>
map , <leader>
map v <browser>
map a <ext>
map <A-enter> <option>
map y <yank>

" List mappings by prefix (using commandline completion)
map <leader>hka :map <Lt>ext
map <leader>hkc :map <Lt>site
map <leader>hkg :map g
map <leader>hke :map <Lt>goto
map <leader>hks :map s
map <leader>hkx :map <Lt>extra
map <leader>hkX :map <Lt>S-extra
map <leader>hkv :map <Lt>browser
map <leader>hky :map <Lt>yank
map <leader>hk, :map <Lt>leader
map <leader>hk<C-x> :map <Lt>C-x
map <leader>hk<A-enter> :map <Lt>option

" -------------------------------------------------------------------------------
" ,------------------,
" | Other Pseudokeys |
" '------------------'

map <link_desc> ;Y

" -----------------------------------------------------------------------------
" ,--------------------------,
" | Normal mode key bindings |
" '--------------------------'

" PREFIX KEYS: c e s ss x , \ <C-x>
" c : site-specific bindings
" x : global bindings
" s : selection bindings
" ss : sidebar bindings
" <C-x> : GUI commands, etc.
" y : yank

" REPLACE DEFAULT BINDINGS:
" free C-h, use C-,, C-. to replace h, l
map -b <C-,> <Left>
map -b <C-.> <Right>
" use h, l for tab changing
"   note: <C-n>,gT are opposite motions. gt with arg goes to arg'th tab
map -b h gT
map -b l <C-n>
" <C-n> and <C-p> for down and up
map -b <C-n> <C-v><down>
map -b <C-p> <C-v><up>
" replace h, l with A-k, A-j for horizontal movement
map -b <C-A-h> h
map -b <C-A-l> l
" A-k/j and A-,/. can be reused...
map -b <A-k> h
map -b <A-j> l
map -b <A-,> h
map -b <A-.> l
" free C-N, C-P bindings for tab movement
map <C-S-P> <Nop>
map <C-S-N> <Nop>
" bind gs as :viewpagesource, free gf for g;b
map gf <Nop>
map gs -ex viewpagesource
" replace builtin <C-a> and <C-x> bindings (inrease/decrease URL by 1)
map <C-a> <Nop>
map -b <A-=> <C-a>
map -b <A--> <C-x>
" passthrough
map -b \\ <C-v>

" Paste and Search
" swap p and P
map -b p P
map -b P p
" jisho.org nihongo search: opens in new tab; prefix with (nonzero) count to open in current tab
js <<EOF
var jishoPasteSearch = function(count) {
    if (typeof count === "undefined")
        dactyl.open(`http://jisho.org/search/${dactyl.clipboardRead(0)}`, {where:dactyl.NEW_TAB});
    else
        dactyl.open(`http://jisho.org/search/${dactyl.clipboardRead(0)}`, {where:dactyl.CURRENT_TAB});
}
EOF
map <extra>j -ex js jishoPasteSearch(<count>);
map g<extra>j -ex js jishoPasteSearch('current');

" disable <C-q> for quitting
map -modes main <C-q> <Nop>

" Miscellaneous Bindings:
" Passthrough
map -b <ext>a <C-v>
map -b <C-a> <C-z>
" Repeat last ex command
map -b g. @:
" Copying
map -b <A-w> Y
" A-Esc: Pass-through Escape
map -b <A-Esc> <C-v><Esc>
" C-w closes tab; if last in window closes window.
map <C-w> :q<CR>
" movement
map -b <C-S-D> <C-u>
map -b J <C-d>
map -b K <C-u>
" Restart with C-x C-x:
map <C-x><C-x> -ex restart
" reload .pentadactylrc
map <browser>r -ex rc
" hide messages
map <C-x>; :<Esc>
" hide and clear messages
map <C-x>: :messclear<Cr>
" redraw screen
map gR -ex redraw
" (Re-)Maximize window (when Pentadactyl pushes command line offscreen)
map <browser>x -js window.restore(); window.maximize();
" select all
map -b <C-x>h iGvggy
" second input area
map -b <extra>gi 2gi
" open local file with xdg-open
map <extra>f :xopen<Space>
" open file in Emacs
map <extra>e -ex openFileInEmacs
" open directory in Dired
map <extra>d -ex openDirectoryInDired
" jumplist
map <C-j> -ex jumps
" password hasher
map <extra>P -ex pwhash
" password hasher: hash site domain
map <extra>p -ex pwhashsite
" Popjisyo SearchJapanese hints
map <leader>jp -ex popjisyo
" Google Translate handwritten input
map <goto>jk -ex tabopen https://translate.google.com.au/#ja/en/
" word highlight
map <leader>uh -ex emenu Tools.Greasemonkey.word highlight
" TeX The World
map <leader>ut -ex emenu Tools.Greasemonkey.TeX the world
" MS Translate
map <extra>t -js (function(){var s=content.document.createElement('script'); s.type='text/javascript'; s.src='http://labs.microsofttranslator.com/bookmarklet/default.aspx?f=js&to=en'; content.document.body.insertBefore(s, content.document.body.firstChild);})();
" PageZipper
" activate pagezipper bookmark (keyword pz)
map <A-p> :open pz<CR>

" =====WEBSITES/WEBAPPS=====
js <<EOF
function openInNewOrCurrentTab(site) {
    return function(count=false) {
        if (typeof count == 'number')
            dactyl.open(site, {where:dactyl.CURRENT_TAB});
        else
            dactyl.open(site, {where:dactyl.NEW_TAB})
    };
}
EOF
" Weather
map <leader>aw -count -ex js openInNewOrCurrentTab('http://www.bom.gov.au/nsw/forecasts/lismore.shtml')(<count>)

" =====YANK=====
" show <yank>... bindings via completion interface
map <yank><C-h> :map <yank>
" yank buffer URL
map -b <yank>y y
" yank page title
map <yank>t -js dactyl.clipboardWrite(buffer.title)
" yank buffer URL (unencoded)
map <yank>u -ex yanktrueURL
" yank page domain
map <yank>d -js dactyl.clipboardWrite(buffer.URL.match(/:\/+([^/]+)/)[1])
" yank filename or buffer URL (unencoded)
map <yank>f -ex yankfilenameorURL
" yank page text
map <yank>x -js dactyl.clipboardWrite(content.document.body.innerText);


 " =====ZOOM=====
" note: text and full zoom can't be used independently. Using one cancels the other
map = +
map <C-=> zI
map <C--> zO
" toggle text/full zoom
map z; -js ZoomManager.toggleZoom();

" ,----------------------,
" | Option Key Sequences |
" '----------------------'
" <option>t - toggles
map <option>tu -ex set usermode!
map <option>te -ex editcontent


" ,--------,
" | Search |
" '--------'
map <findbarOpenFocus> <C-v><C-f>
js <<EOF
findbarToggle = function() {
    if (gFindBar.hidden)
        dactyl.execute("normal <findbarOpenFocus>");
    else
        gFindBar.close();
}
EOF
" clear the search term highlighting
map <C-/> -ex noh
" Regex search
map -b g/ /\r
map -b g? ?\r
" Link search
map -b s/ /\l
map -b s? ?\l
" Search from top of page
map -b <C-x>/ gg/
" Search for word starting with...
map -b <extra>/ /\r\w*<Left><Left><left>
" Search for word containing...
map <S-extra>/ /\r\w*\w*<Left><Left><left>
" Firefox find box
map <browser>/ -js findbarToggle();
" C-' Firefox link search
map -b "<C-'>" <C-v>'

" -----------------------------------------------------------------------------
" ,---------------------------------------,  MAP COMMANDS.
" | Command mode and insert mode bindings |  cmap: command-line mode
" '---------------------------------------'  imap: insert mode

" Useful pseudo-keys
map -modes command-line -b <copy-command-to-cb> <A-a><C-v><C-c>
map -modes command-line -b <cut-command-to-cb> <A-a><C-v><C-x>
map -modes command-line -b <paste> <C-v><C-v>
map -modes command-line -b <copy> <C-v><C-c>
map -modes command-line -b <cut> <C-v><C-x>
map -modes command-line -b <forward-word> <C-Right>
map -modes command-line -b <backward-word> <C-Left>
map -modes command-line -b <insert-after-command> <Home><C-Right><Space>

map -modes command-line <A-b> <backward-word>
map -modes command-line <A-f> <forward-word>

" select all
map -modes command-line -b <C-x>h <Home><S-End><C-v><C-c>
" use c_<C-,>, c_<C-.> for cycling WildMode completion
cmap -b <C-,> <Tab>
cmap -b <C-.> <S-Tab>
" use c_<A-/> for AltWildMode completion
map -b -modes=command-line <A-/> <A-Tab>
map -b -modes=command-line <A-S-/> <A-S-Tab>

map -modes command-line,insert -b <C-y> <C-v><C-v>
map -modes command-line,insert -b <C-p> <Up>
map -modes command-line,insert -b <C-n> <Down>
map -modes command-line,insert -b <C-S-P> <S-Up>
map -modes command-line,insert -b <C-S-N> <S-Down>
map -modes command-line,insert -b <C-f> <Right>
map -modes command-line,insert -b <C-b> <Left>

" repeat last search with a new keyword:
"   uses clipboard and javascript to do text processing, since <C-Del>, <C-BS>, <C-S-Left>, etc aren't working in map commands
"   TODO: remove dependence on clipboard and ad-hoc pseudo-keyword (either by getting delete-word keys working in `map`, or finding
"         javascript commands for retrieving command history and entering text in command line)
map <cb-change-first-arg> -js var cmd=dactyl.clipboardRead(0).split(/\s+/); dactyl.clipboardWrite(cmd[0]+' '+cmd.slice(2).join(' '));
map -modes command-line <cb-change-first-arg> -js var cmd=dactyl.clipboardRead(0).split(/\s+/); dactyl.clipboardWrite(cmd[0]+' '+cmd.slice(2).join(' '));
map -modes command-line <C-r> <up><A-a><C-v><C-c><down><cb-change-first-arg><C-v><C-v><Home><C-Right><Space>
map -modes command-line <change-first-arg> <A-a><C-v><C-x><cb-change-first-arg><C-v><C-v><Home><C-Right><Space>
map -modes command-line <C-s> <A-a><C-v><C-x><cb-change-first-arg><C-v><C-v><Home><C-Right><Space>
" map -modes command-line <C-s> <change-first-arg>

" SPACES (TODO)
" insert space with C-SPACE (When typing search keywords in
" a japanese IME, double-width spaces don't work. If F10
" won't convert spaces to single width, C-SPACE can be used.
map -modes command-line,insert -b <C-SPACE> <SPACE>
" TODO: Work out how to get current textarea. See insertAtCaret()
" nbsp
map -modes command-line,insert <C-S-s> -js alert("not implemented");
" em-space
" FIXME: Doesn't work.
"map -modes insert -b <C-s> \u2003
"execute "map -modes insert -b <C-s> \u2003"

execute "map -modes command-line,insert -b <C-m> " + user.myemail
execute "map -modes command-line,insert -b <C-S-m> " + user.myemail2
execute "map -modes command-line,insert -b <C-S-I> " + user.myname
execute "map -modes command-line,insert -b <C-S-T> " + user.myfirstname
execute "map -modes command-line,insert -b <C-S-L> " + user.mylastname
execute "map -modes command-line,insert -b <C-S-W> " + user.mymasterpw
execute "map -modes command-line,insert -b <C-S-A> " + user.mystreet
execute "map -modes command-line,insert -b <C-S-S> " + user.mysuburb
execute "map -modes command-line,insert -b <C-S-D> " + user.myaddress
execute "map -modes command-line,insert -b <C-S-P> " + user.myphone

" ,---------------------------------------,
" | Normal mode bindings for Command-line |
" '---------------------------------------'
" Search clipboard contents using search keyword
map -b <leader>s :<C-v><C-v><Home>tabopen<Space><Space><Left>
map -b <leader>S :<C-v><C-v><Home>open<Space><Space><Left>
" Repeat search just entered with keyword changed
map <leader>r :<C-r>
" Repeat default just entered search with keyword
map <leader>R :<up><Home><forward-word><Space>
" Google definitions
map <leader>d :ggdef<Space>
" map <leader>d :tabopen https://www.google.com.au/search?q=define:
map <leader>,d -js googleDefExpand();
map <leader>D :open https://www.google.com.au/search?q=define:

" ,-------------------,
" | Command-line only |
" '-------------------'
" regex search: word boundary
cmap <C-1> (?= |^)
cmap <C-2> (?= |$)

" -----------------------------------------------------------------------------
" ,--------------------------------,  MAP COMMANDS.
" | Caret and visual mode bindings |  vmap: visual mode
" '--------------------------------'

" Caret and Visual mode:
" C-e end of line, C-a start of line.
" C-y scroll down, C-Y scroll up.
map -modes caret,visual -b <C-a> 0
map -modes caret,visual -b <C-e> $
map -modes caret,visual -b <C-S-Y> <C-e>
" to search and select:
" 1. press / and type search term
" 2. when satisfied, press enter
" 3. press C-/ to clear highlighting of other matches
" 4. press i to enter insert mode
" 5. press <left> to move to start of match
" 6. press v to enter visual mode
" 7. use visual mode keys j,k,h,l,C-a,C-e, etc to extend selection

" -----------------------------------------------------------------------------
" ,--------------------,
" | Menu mode bindings |
" '--------------------'

map -modes menu -b <C-n> <Down>
map -modes menu -b <C-p> <Up>
map -modes menu -b <C-j> <Down>
map -modes menu -b <C-k> <Up>
map -modes menu -b <C-h> <Left>
map -modes menu -b <C-l> <Right>

" -----------------------------------------------------------------------------
" ,--------------------------------------,
" | Text-edit and operator mode bindings |
" '--------------------------------------'

map -modes text-edit,operator -b <C-a> ^
map -modes text-edit,operator -b <C-e> $
map -modes text-edit,operator -b <A-=> <C-a>
map -modes text-edit,operator -b <A--> <C-x>


" -----------------------------------------------------------------------------
" ,----------------------------,
" | Pass-through mode bindings |
" '----------------------------'

map -modes pass-through -b <A-;> :normal "<Esc><C-^>"<CR>


" -----------------------------------------------------------------------------
" ,----------,
" | Commands |
" '----------'

command! undob -description "Undo tab in background" -js undob()
command! backt -description "Create adjacent duplicate tab and go back in the browser history" -js backt()
command! forwardt -description "Create adjacent duplicate tab and go forward in the browser history" -js forwardt()
command! tabdupa -description "Create adjacent duplicate tab" -js tabdupa()

command! pasteall -description "open all links in clipboard" -js openAllLinksInCB();
map gp -ex pasteall

command! viewpagesource -description "Toggle viewing page / viewing page source" -js viewPageSource();

command! rc source ~/.pentadactylrc
"command! rce viewsource! file:/home/troy/.pentadactylrc
command! rce !emacsclient ~/.pentadactylrc 2> /dev/null

command! loadutils runtime! utils.js | js var utils = dactyl.utils.getPlugin("utils");

command! showsource -nargs=1 -js (alert(self[args[0]].toString()))

" enable/disable javascript
command! jsenable  :set! javascript.enabled=true
command! jsdisable :set! javascript.enabled=false

" Stop page from intercepting key events:
command! nointercept -js document.addEventListener('keydown', function(e) { e.stopImmediatePropagation(); return false;}, true);

" open file with xdg-open
" FIXME: issue with maff files with spaces in directory (not name)
command! xopen -nargs=1 -complete=file !xdg-open <args>

" Open in Google Chrome:
command! ochrome :exec `!google-chrome "${buffer.URL}"`
map <extra>c -ex ochrome

" Show all marks (quickmarks and url/local marks)
command! allmarks,amarks,am :qmarks | marks

" Set/unset autoplay
command! autoplayon,autop :set! media.autoplay.enabled=true
command! autoplayoff,noautop :set! media.autoplay.enabled=false

" Troubleshooting information
command! info :tabopen about:support<CR>

" Unicode code of character
command! uni
   \ -js dactyl.echo(
   \     dactyl.clipboardRead().charCodeAt(0).toString() +
   \     "\tU+" +
   \     dactyl.clipboardRead().charCodeAt(0).toString(16));

command! yanktitle js dactyl.clipboardWrite(buffer.title)

" Show extended hints modes
command! listhintmodes :echo hints.modes

" Text encodings
"command! encuni :execute "emenu View.Text Encoding.Unicode"
"command! encjis :execute "emenu View.Text Encoding.Japanese (Shift_JIS)"
command! encuni :emenu View.Text Encoding.Unicode
command! encjis :emenu View.Text Encoding.Japanese (Shift_JIS)
command! enceuc :emenu View.Text Encoding.Japanese (EUC-JP)

" about:config settings
command! toggleconfig
    \ -description "Toggle boolean about:config setting."
    \ -nargs=1
    \ -js dactyl.utils.togglePref(args[0]);

command! ggdef -nargs=1 -js googledef(args[0]);

command! jkdamage -nargs=1 -js searchKanjiDamage(args[0]);

" =============================================================================
"                                       ______
"                                      |      |
"                                      | TABS |
"                                      |______|
"
" -----------------------------------------------------------------------------
" ,------------------,
" | Buffer Selection |
" '------------------'
" Select buffer:  b  (cycle with gb, gB)
map -b \< g0
map -b \> g$
" switch to alternate (previously selected buffer): A-;
map -modes command,embed -b <A-;> <C-^>
map -modes input -b <A-;> <Esc><C-^>
" delete and switch to alternate
map -modes command,embed -b <A-:> d<C-^>
map -modes input -b <A-:> <Esc>d<C-^>

" -----------------------------------------------------------------------------
" ,--------------,
" | Pinning Tabs |
" '--------------'
command! unpinall tabdo unpintab
" toggle pinning of current tab
map ! -ex pintab!

" -----------------------------------------------------------------------------
" ,--------------,
" | Closing Tabs |
" '--------------'

" close other tabs
map <browser>1 -ex tabonly
" close tabs to left
map <browser>< -js closeAllToLeft()
" close tabs to right
map <browser>> -js closeAllToRight()

" close tab range
" :tc START END : close tabs starting with START and ending with the tabs before END
" FIXME: doesn't work on last tab

command! tc
    \ -description "close tab range from START to END inclusive"
    \ -nargs=+
    \ -js if (args.length==2) { closeTabRange(args[0], args[1]); }
    \     else { closeTabsFromCurrentTo(args[0]); }
map <browser>; :tc<SPACE>

" undo recent closed tab from list
map U :undo<SPACE>

js <<EOF

closeAllToLeft = function (ord) {
    if (typeof(ord)==="undefined") ord = tabs.getTab().dactylOrdinal;
    // convert from 0- to 1-based  ==> -1  |
    // end at previous tab         ==> -1  | ==> -2
    var ix = ord - 1;
    var prevTabIx = ix - 1;
    utils.closeTabsTo(prevTabIx)
}

closeAllToRight = function (ord) {
    if (typeof(ord)==="undefined") ord = tabs.getTab().dactylOrdinal;
    // convert from 0- to 1-based  ==> -1  |
    // start from next tab         ==> +1  | ... cancel out
    var ix = ord - 1;
    var nextTabIx = ix + 1;
    utils.closeTabsFrom(nextTabIx)
}

var closeTabRange = function (firstSpec, endSpec) {
    firstSpec = firstSpec - 1;
    endSpec = endSpec;
    utils.closeTabsFromTo(firstSpec, endSpec, spec='');
}

var closeTabsFromCurrentTo = function (endSpec) {
    closeTabRange(gBrowser.mCurrentTab.dactylOrdinal, endSpec);
}

EOF

"
" -----------------------------------------------------------------------------
" ,-------------,
" | Moving Tabs |
" '-------------'
" alias tt=tabmove
command! tt -nargs=1 -bang
    \ -js dactyl.execute("tabmove" + (bang ? "! " : " ") + args[0]);
map <browser>m :tabmove<SPACE>
map -arg <browser>M -ex tabmove <arg>
map gm :tabmove!<SPACE>
map <C-S-P> -ex tabmove! -1
map <C-S-N> -ex tabmove! +1
map <C-h> -ex tabmove! -1
map <C-l> -ex tabmove! +1
map <C-Left> -ex tabmove! -1
map <C-Right> -ex tabmove! +1
map <C-\<> -ex tabmove! 1
map <C-\>> -ex tabmove! $
map g\> -ex tabmove! $
map <A-S-1> -ex tabmove! 1
map <A-S-2> -ex tabmove! 2
map <A-S-3> -ex tabmove! 3
map <A-S-4> -ex tabmove! 4
map <A-S-5> -ex tabmove! 5
map <A-S-6> -ex tabmove! 6
map <A-S-7> -ex tabmove! 7
map <A-S-8> -ex tabmove! 8
map <A-S-9> -ex tabmove! $

" -----------------------------------------------------------------------------
" ,----------,
" | New Tabs |
" '----------'
" Duplicate tab, Back/Forward in New Tab
map C  -ex tabdupa
map gh -ex backt
map gl -ex forwardt
" Open multiple hints in background tabs
map -b gf g;b

" New tab
" note: hints not working right...
"   each site has two hints: foreground hint DELETES page; background hint: SELECTS page
map gN  -js newTabPage();
map gON -ex open about:newtab
map <goto>N  -js newTabPage();
map <goto>eN -ex open about:newtab

"      gH : open home page in new tab

"TODO: newTabPage: get temp (or local) hinttags value to work
js <<EOF

var newTabPage = function() {
    dactyl.open('about:newtab', {where:dactyl.NEW_TAB});
    // var hinttags_orig = options.store.get('hinttags');
    // options.hinttags.value = options.hinttags.value.slice(0, 0);
    // options.hinttags.value.push();
    // options.hinttags.value = "button[not(substring(title(),string-length(name())-1) = 'fu')]";
    dactyl.execute('normal f');
    // options.store.set('hinttags', hinttags_orig);
}

// // FIXME:
// var newTabPage = function() {
//     dactyl.open('about:newtab', {where:dactyl.NEW_TAB});
//     var hinttags_orig = options.store.get('hinttags');
//     options.hinttags.value = options.hinttags.value.slice(0, 0);
//     options.hinttags.value.push();
//     options.hinttags.value = "button[not(substring(title(),string-length(name())-1) = 'fu')]";
//     dactyl.execute('normal f');
//     options.store.set('hinttags', hinttags_orig);
// }

EOF

" -----------------------------------------------------------------------------
" ,------------,
" | Tab Groups |
" '------------'

command! tginit
    \ description "Initialize pentadactyl tabgroups commands"
    \ :runtime! tabgroups.penta


" =============================================================================
"                                       _______
"                                      |       |
"                                      | HINTS |
"                                      |_______|

"map -b gf g;t

set eht=[iI]:img,[asOTvVWy]:':-moz-any-link',area[href],img[src],iframe[src],[A]:[id],a[name],[f]:body,[F]:body,code,div,html,p,pre,span,[S]:'input:not([type=hidden])',textarea,button,select
js hints.addMode('m','mouseover',utils.simulateMouseover);

" remove elements
js function removeElt(e) { e.remove(); }
set eht+=[x]:div,iframe,header,footer,aside,form,iframe,'input:not([type=hidden])',textarea,img
js hints.addMode('x','remove element', removeElt);
set eht+=[0]:div,iframe
js hints.addMode('0','make div invisible', utils.undisplay);
set eht+=[X]:div,iframe
js hints.addMode('X','shift div off screen', utils.removeFromView);

" replace ;t with function for ;b (open in background)
js hints.addMode("t", "Follow hint in a background tab", elem => buffer.followLink(elem, dactyl.NEW_BACKGROUND_TAB))
set eht+=[p]:div,section,ol,ul,table,frame,iframe,img,h1,h2,h3,h4,input,xpath:div/p
js hints.addMode('p','lmnpop',elem => { lmnpop(elem); });
set eht+=[e]:':-moz-any-link'
js hints.addMode('e', 'open in emacs', elem => dactyl.execute('!emacsclient "' + filenameOrURL(elem.href) + '"'));
" open link with wayback
set eht+=[\]:':-moz-any-link'
js hints.addMode('\\', 'wayback open link in new tab', elem=>{ dactyl.open(`http://web.archive.org/web/${elem.href}`, {where:dactyl.NEW_TAB}) })

" svg: FIXME
runtime! svg-pan-zoom.min.js
set eht+=[G]:svg
js hints.addMode('G','pan & zoom SVG',alert);

" focus frame
map -b vf ;F

map <yank_desc> ;Y

" -----------------------------------------------------------------------------
" ,----------,
" | hinttags |
" '----------'
"
set hinttags+='svg'
" Add hints for anchor elements whose class attribute starts with "vote":
set hinttags+=a[class^='vote']
set hinttags+=a[class^='speed']

" -----------------------------------------------------------------------------
" ,------------------,
" | extendedhinttags |
" '------------------'
"
" FIXME: can't activate context menu on 'body' hint
":set eht+=[c]:body,':-moz-any-link',area,button,iframe,input:not([type=hidden]),label[for],select,textarea,[onclick],[onmouseover],[onmousedown],[onmouseup],[oncommand],[tabindex],[role=link],[role=button],[contenteditable=true]

" -----------------------------------------------------------------------------
" ,-------------------,
" | Styling for hints |
" '-------------------'
"
set hintkeys="jkl;fdsahgnvurieow"
"
highlight Hint
    \ font-family: "Droid Sans Mono Slashed";
    \ line-height: 14px;
    \ text-shadow: 1px 1px 1px #888;
    \ padding: 5px 8px 6px;
    \ font-size: 20px;
    \ font-weight: bold;
    \ text-transform: uppercase;
    \ color: rgb(91, 58, 26);
    \ background-color: rgba(255, 255, 255, 0.45) !important;
    \ border-radius: 5px;
" HintImage: ?
highlight HintImage
    \ background-color: rgba(255, 0, 255, 1) !important;
    \ border-radius: 5px;
" HintElem: styling for elements when hinted
highlight HintElem
    \ border-radius: 2px;
" HintActive: styling for active element when hinted
highlight -a HintActive
    \ background-color: rgba(255, 255, 255, 0.1) !important;
    \ color: blue !important;
    \ border-style: dashed;
    \ border-color: rgba(255, 0, 0, 0.4);
    \ border-width: 1px;
    \ border-radius: 2px;
" Hint[Active]: styling for hint on active element
highlight -a Hint[Active]
    \ background-color: rgba(255, 255, 0, 0.4) !important;
    \ color: rgb(91, 58, 26);
    \ border-style: solid;
    \ border-color: rgb(91, 58, 26);


" =============================================================================
"       _______
"      |       |
"      |  GUI  |
"      |_______|

" -----------------------------------------------------------------------------
" ,----------,
" | Toolbars |
" '----------'

" <A-Up>:     show the navigation and bookmarks toolbars:
" <A-Down>:   hide the navigation and bookmarks toolbars:
" <C-x><C-a>: toggle the navigation and bookmarks toolbars:
map <A-Up> -ex set guioptions-=TB | set showtabline=never
map <A-Down> -ex set guioptions+=TB | set showtabline=always
map <C-x><C-a> -ex set guioptions!=TB | set showtabline!=always,never
" <C-x><C-m|t|e|b|d|s|o>: toggle toolbars/menubars
"(  menu|tab|navigation|bookmark|web-developer toolbar )
map <C-x><C-m> -ex set guioptions!=m
map <C-x><C-t> -ex set showtabline!=always,never
map <C-x><C-e> -ex set guioptions!=T
map <C-x><C-b> -ex set guioptions!=B
map <C-x><C-d> -ex toolbartoggle Web Developer Toolbar
map <C-x><C-s> -ex set guioptions!=s
map <C-x><C-o> -ex toolbartoggle Add-on Bar
"map <C-x><C-f> -ex buftabs
"
" Toggle FF Developer command line
" <S-f2> requires <Esc> to enter normal mode after toggling off.
" <S-f2><Esc> cannot restore focus to command line once lost.
" <S-f2><Tab> is mostly fine, but has the drawback that when
"             restoring focus, it will select the current
"             tab-completion candidate, if one is visible.
map -modes base -b <A-x> <S-f2><Tab>


" -----------------------------------------------------------------------------
" ,---------,
" | Dialogs |
" '---------'

" downloads
map <goto>wd -ex dialog downloads
" about:config
command! ac
    \ -description "Open about:config in new window"
    \ :winopen about:config

" history (better dialog than `:dialog history`)
map <goto>wh -ex historydialog | ! wmctrl -F -r "Library" -b add,above,sticky
command! historydialog
    \ -description "Open history dialog"
    \ :feedkeys <C-S-H>

" TODO: places.xul doesn't allow keyboard navigation. Can it be fixed?
"       In the meantime, use the bookmarks dialog window instead.

map <goto>a -ex dialog addons
map -b <goto>c tabout:config<CR>
map -b <goto>ec oabout:config<CR>
map -b <goto>d tabout:downloads<CR>
map -b <goto>ed oabout:downloads<CR>
map -b <goto>k tchrome://browser/content/places/places.xul<CR>
map -b <goto>ek ochrome://browser/content/places/places.xul<CR>
map -b <goto>p tabout:plugins<CR>
map -b <goto>ep oabout:plugins<CR>
map -b <goto>r tabout:sessionrestore<CR>
map -b <goto>er oabout:sessionrestore<CR>
map -b <goto>s tabout:support<CR>
map -b <goto>es oabout:support<CR>
map -b <goto>s tabout:support<CR>
map -b <goto>es oabout:support<CR>
command! appcache
    \ -description "Open about:cache in new tab"
    \ :tabopen about:cache?storage=appcache

" help
map <local-help> -ex tabopen ~/.pentadactyl/docs/help/index.html
map <goto>h <local-help>
" single-page pentadactyl help
map <local-help-all> -ex tabopen ~/.pentadactyl/docs/all.html
map <goto><f1> <local-help-all>

" Pentadactyl source
map <goto>D -ex tabopen resource://dactyl/

" Select:
map s;h :history! -max 30<SPACE>
map s;k :bmarks!  -max 30<SPACE>
map sj -ex jumps
map sa -ex addons
map sm :emenu<SPACE>
map sp :set<SPACE>
map sc :set!<SPACE>

" List/Search:
map sb :buffers -max 45<SPACE>
map sh :history -max 45<SPACE>
map sk :bmarks  -max 45<SPACE>
" Search bookmarks by keyword
map gk<Space> :bmarks -max 45<SPACE> -keyword<SPACE>
" List all static keyword bookmarks (keyword contains :::)
map gkk :bmarks -max 45<SPACE> -keyword :::<CR>
" Search bookmarks by tag
map gkt :bmarks -max 45<SPACE> -tags<SPACE>

" -----------------------------------------------------------------------------
" ,--------------,
" | AiOS SideBar |
" '--------------'

" Manual sidebar selection with si, toggle with S
map si :sidebar<SPACE>
map sI -ex sbclose
" map <sidebar> -ex sidebar!
" Open/close AiOS, switch focus
"map <sidebar> :js aios_toggleSidebar()<CR><f6><f6>
" Open AiOS, switch focus and enter passthrough
"map sS :js aios_toggleSidebar()<CR><f6><f6><C-z>

" Sidebar selection:
" map sA -ex sidebar! Add-ons
" map <sidebar>A :sidebar! Add-ons<CR><f6><f6><C-z>
" map sM -ex sidebar! Bookmarks
" map <sidebar>M :sidebar! Bookmarks<CR><f6><f6><C-z>
" map sD -ex sidebar! Downloads
" map <sidebar>D :sidebar! Downloads<CR><f6><f6><C-z>
" map sH -ex sidebar! History
" map <sidebar>H :sidebar! History<CR><f6><f6><C-z>
" map sM -ex sidebar! Moji
" map <sidebar>M :sidebar! Moji<CR><f6><f6><C-z>
" map sO -ex sidebar! HeadingsMap
" map <sidebar>O :sidebar! HeadingsMap<CR><f6><f6><C-z>
" map sP -ex sidebar! Preferences
" map <sidebar>P :sidebar! Preferences<CR><f6><f6><C-z>

" -----------------------------------------------------------------------------
" ,---------------------,
" | Resizing and moving |
" '---------------------'

command! resize -description "Resize window to X Y"
    \ -nargs=* -js self.resizeTo(args[0], args[1])
command! resizeby -description "Resize window by X Y"
    \ -nargs=* -js self.resizeBy(args[-3], args[0])
command! maximize -description "Maximize window"
    \ -js self.maximize()
command! maximizeH -description "Maximize window height"
    \ -js self.resizeTo(self.outerWidth, screen.availHeight)
command! maximizeW -description "Maximize window width"
    \ -js self.resizeTo(screen.availWidth, self.outerHeight)
command! minimize -description "Minimize window"
    \ -js self.minimize()
command! move -description "Move window by X Y"
    \ -nargs=* -js self.moveBy(args[0], args[1])
command! moveto -description "Move window to X Y"
    \ -nargs=* -js self.moveTo(args[0], args[1])
command! moveTL -description "Move window to top left"
    \ :js self.moveTo(0,0)
command! moveTR -description "Move window to top right"
    \ :js self.moveTo(screen.availWidth-self.window.outerWidth, 0)
command! moveBL -description "Move window to bottom left"
    \ :js self.moveTo(0, screen.availHeight-self.window.outerHeight)
command! moveBR -description "Move window to bottom right"
    \ :js self.moveTo(screen.availWidth-self.window.outerWidth, screen.availHeight-self.window.outerHeight)

" =============================================================================
"                                      _________
"                                     |         |
"                                     | STYLING |
"                                     |_________|

group temp
" define temp group for use by temp styles, etc
group user

map -b gc y:style -group=temp <C-v><C-v><Space>
map <extra>gs :emenu View.Page Style.
" map <extra><C-s> :emenu View.Page Style.No Style<CR>
map <extra><C-s> -ex set usermode!

map <extra>N :narrowpage<Space>
command! narrowpage
\    -nargs=*
\    -js <<EOF
var width = args[0] || 1000;
var lmarg = args[1] || 100;
var rmarg = args[2] || 1000;
narrowPage(width, lmarg, rmarg);
EOF

command! cssapply
\ -nargs=*
\ -description "Apply CSS to current page. '!;' is expanded to '!important;'"
\ -js dactyl.execute(`style -group temp -name ${Date().replace(/ /g,'',true)} '${buffer.URL}' ${args.join(' ').replace(/ !;/g, ' !important;')}`);

style -name=visitedlinks * a:visited { color: purple !important; }
command! visitedlinkstoggle
\    -description "toggle visitedlinks style (purple highlighting)"
\    styletoggle -name visitedlinks
map <C-x>l :visitedlinkstoggle<Cr>

" =============================================================================
"                            ___________________
"                           |                   |
"                           | DEVELOPMENT TOOLS |
"                           |___________________|

" JS Repl
map <extra>x -ex js!

" -----------------------------------------------------------------------------
" ,-------------------------,
" | Mozilla Developer Tools |
" '-------------------------'
command! webide :feedkeys! <S-f8>
command! browserconsole :feedkeys! <C-S-J>
command! devtools :execute "emenu Tools.Web Developer.Toggle Tools"
command! storageinspector :execute "emenu Tools.Web Developer.Storage Inspector"
command! toggledevtoolbar
\ -description "Toggle Developer Toolbar"
\ -js <<EOF
  var tb=DeveloperToolbar;
  if (tb.visible) {
      tb.hide();
  } else {
      tb.show();
      setTimeout(()=>{tb.focus();}, 300);
  }
EOF
map <C-A-;> -modes main -ex toggledevtoolbar
map <extra>d -ex emenu Tools.Web Developer.Eyedropper
map <S-f12> -ex devtools


" -----------------------------------------------------------------------------
" ,---------------,
" | DOM Inspector |
" '---------------'
" inspect current content document
command! dominspector :dialog dominspector
" inspect current chrome document - chrome://browser/content/browser.xul
command! dominspectorchrome :js inspectDOMDocument(document.URL)
"
" restore C-S-I shortcut for DOM Inspector (stolen by dev tools inspector)
map <C-S-I> -ex dominspector

" -----------------------------------------------------------------------------
" ,---------,
" | Firebug |
" '---------'
command! firebug :feedkeys! <C-f12>

" -----------------------------------------------------------------------------
" ,----------,
" | TileView |
" '----------'
js <<EOF

function viewTiledOn() {
    tileView.viewTiled = true;
    tileView.drawTiledLayout();
}

function viewTiledOff() {
    tileView.viewTiled = false;
    tileView.drawSelectedPanel();
}

function viewTiledToggle() {
    if (tileView.viewTiled)
        viewTiledOff();
    else
        viewTiledOn();
}

EOF

command! toggleViewTiled -js viewTiledToggle();
map <A-f1> -js viewTiledToggle()

" -----------------------------------------------------------------------------
" ,-----------------------,
" | Web Developer Toolbar |
" '-----------------------'
command! magnifier
    \ -bang
    \ -description "Display magnifier (! toggles)"
    \ -js bang ? wdtToggleMagnifier() : WebDeveloper.PageMagnifier.createPageMagnifier();
command! magnifieroff
    \ -description "Turns off magnifier"
    \ -js WebDeveloper.PageMagnifier.removePageMagnifier();
command! magnifiersize
    \ -description "Sets magnifier size in pixels"
    \ -nargs=+
    \ -js wdtSetMagnifierSize(args[0], args[1])
command! magnifierzoom
    \ -description "Sets magnifier zoom level"
    \ -nargs=1
    \ -js wdtSetMagnification(args[0])
command! stylesoff
    \ -description "Turns off styles via Web Developer 'Toggle all Stylesheets'"
    \ -js WebDeveloper.CSS.toggleAllStyleSheets(true, content.document);
command! styleson
    \ -description "Turns on styles previously disabled via Web Developer 'Toggle all Stylesheets'"
    \ -js WebDeveloper.CSS.toggleAllStyleSheets(false, content.document);
command! styleinfo
    \ -description "Show styles for selected element"
    \ :execute "emenu Tools.Web Developer Extension.CSS.Display Style Information"
command! togglestylesembedded -js document.getElementById('web-developer-disable-embedded-styles-menu').click();
command! togglestyleslinked  -js document.getElementById('web-developer-disable-linked-style-sheets-menu').click();
command! togglestylesinline  -js document.getElementById('web-developer-disable-inline-styles-menu').click();
" note: toggle all styles has binding <Alt-Shift-A>
command! togglestylesall -js document.getElementById('web-developer-disable-all-styles-menu').click();
command! togglestylesbrowser  -js document.getElementById('web-developer-disable-browser-default-styles-menu').click();
command! hidebackground -js WebDeveloper.Images.hideBackgroundImages([content.document]);

 js <<EOF

function wdtToggleMagnifier() {
    if (document.getElementById("web-developer-page-magnifier-container").hidden)
        WebDeveloper.PageMagnifier.createPageMagnifier();
    else
        WebDeveloper.PageMagnifier.removePageMagnifier();
}

function wdtGetMagnification() {
    return parseFloat(WebDeveloper.Preferences.getExtensionStringPreference("magnification.level"));
}

function wdtSetMagnification(level) {
    // WebDeveloper.PageMagnifier.updateMagnificationLevel({ value: level });
    WebDeveloper.Preferences.setExtensionStringPreference("magnification.level", level);
}

function wdtSetMagnifierSize(w, h=w) {
    var magnifier = document.getElementById("web-developer-page-magnifier");
    magnifier.width = w;
    magnifier.height = h;
}

EOF

map zx -ex magnifier!

" -------------------------------------------------------------------------------
" ,---------,
" | Stylish |
" '---------'

" Manage Styles
command! stylishmanage tabopen chrome://stylish-custom/content/info.xul
map <goto>S -ex tabopen chrome://stylish-custom/content/info.xul
map <browser>sm -ex tabopen chrome://stylish-custom/content/info.xul

" New Style
command! stylishnew -js stylishCommon.openEdit('new');
map <browser>sn -js stylishCommon.openEdit('new');

" =============================================================================
"                                      _________
"                                     |         |
"                                     | CONTENT |
"                                     |_________|

" TODO: Write command to work on remote PDFs being viewed
"       - preferably by accessing file in cache
"       - otherwise by re-downloading

" PDF (local): view in Okular
command! oku -description "Open local file in Okular"
    \ execute `run okular "${decodeURIComponent(buffer.URL.substring(7))}"`


" =============================================================================
"                                 __________________
"                                |                  |
"                                | OTHER EXTENSIONS |
"                                |__________________|

" ,--------------,
" | Autopagerize |
" '--------------'
command! pagezipper :open javascript:(function(){if(window['pgzp']){_pgzpToggleBookmarklet();}else{window._page_zipper_is_bookmarklet=true;window._page_zipper=document.createElement('script');window._page_zipper.type='text/javascript';window._page_zipper.src='//www.printwhatyoulike.com/static/pagezipper/pagezipper_10.js';document.getElementsByTagName('head')[0].appendChild(window._page_zipper);}})();

map <extra>z -ex open javascript:(function(){if(window['pgzp']){_pgzpToggleBookmarklet();}else{window._page_zipper_is_bookmarklet=true;window._page_zipper=document.createElement('script');window._page_zipper.type='text/javascript';window._page_zipper.src='//www.printwhatyoulike.com/static/pagezipper/pagezipper_10.js';document.getElementsByTagName('head')[0].appendChild(window._page_zipper);}})();
map <autopager> -ex open javascript:(function(){if(window['pgzp']){_pgzpToggleBookmarklet();}else{window._page_zipper_is_bookmarklet=true;window._page_zipper=document.createElement('script');window._page_zipper.type='text/javascript';window._page_zipper.src='//www.printwhatyoulike.com/static/pagezipper/pagezipper_10.js';document.getElementsByTagName('head')[0].appendChild(window._page_zipper);}})();
map <Space><Space> <autopager>

" Print What You Like:
command! prwul -description "run PrintWhatYouLike"
    \ :o javascript:(function(){if(window['ppw']&&ppw['bookmarklet']){ppw.bookmarklet.toggle();}else{window._pwyl_home=%22http://www.printwhatyoulike.com/%22;_pwyl_bmkl=document.createElement('script');_pwyl_bmkl.setAttribute('type','text/javascript');_pwyl_bmkl.setAttribute('src',_pwyl_home+'static/compressed/pwyl_bookmarklet_10.js');_pwyl_bmkl.setAttribute('pwyl','true');document.getElementsByTagName('head')[0].appendChild(_pwyl_bmkl);}})();

" ,-------------,
" | DownThemAll |
" '-------------'
command! dtamaagr -description "Open DownThemAll manager"
    \ -js self.DTA.openManager()

" ,---------------------------------,
" | Wiktionary and Google Translate |
" '---------------------------------'
js <<EOF
if (typeof gd12 != 'undefined') {
    gd12.prefs.applyUserStyle();
    var gd12style_default = ".gDicClassPopup { background-color: white !important; border: 2px solid gray !important; }";

    gd12.prefs.myStyle = ".gDicClassPopup { background-color: #FFDDDD !important; border: 2px solid gray !important; }"
    gd12.prefs.applyUserStyle()
}
EOF

" ,-----------,
" | Rikaisama |
" '-----------'
" notes:
" CSS - chrome://rikaichan/skin/popup-blue.css
" keybindings: stored as ASCII codes in rcxConfig.kb* entries
" functions:
"   rcxData.convertKatakanaToHiragana(word)
"   rcxData.kanjiSearch(text)
"   rcxData.textSearch(text)
"   rcxData.wordSearch(text)
"   rcxData.translate(word, noKanji)
"   rcxMain.containsKanji(text)
"   rcxMain.htmlParser(aHTMLString)
"   rcxMain.lookupSearch(text)            // perform lookupbar search (results in popup)
"   rcxMain.showPopup(text)               // show text using Rikaisama popup
map <extra>x -js rcxMain.saveToFile()
command! riklbaron -description "Rikaisama lookupbar on"
    \ -js rcxMain.lbToggle()
command! riklbaroff -description "Rikaisama lookupbar off"
    \ -js rcxMain.lbHide()
command! rikplayaudio -bang -js rcxMain.playJDicAudio(bang);
command! rikcopydef -description "Rikaisama: copy definition to clipboard"
    \ -js rcxMain.copyToClip();
command! rikcopy -description "Rikaisama: copy word to clipboard"
    \ -js rikCopyWordToClipboard();
command! rikstick  -description "Rikaisama: make current popup sticky"
    \ -js rcxMain.allowOneTimeSuperSticky();
command! rikEpwingToggle -description "Rikaisama: toggle epwing mode"
    \ -js rikEpwingToggle();
command! rikSanseidoToggle -description "Rikaisama: toggle sanseido mode"
    \ -js rikSanseidoToggle();

map <ext>r -ex rikLbOn
map <ext>R -ex rikLbOff
map <ext>s -ex rikSanseidoToggle
js <<EOF
function rikPlayAudio() {
    rcxMain.playJDicAudio();
}
function rikCopyWordToClipboard() {
    dactyl.clipboardWrite(rcxMain.word);
}
function rikStick() {
    rcxMain.allowOneTimeSuperSticky();
}
function rikEpwingToggle() {
    if (rcxMain.epwingMode) {
        rcxMain.epwingMode = false;
        dactyl.utils.message("epwing mode off");
    } else {
        rcxMain.epwingMode = true;
        dactyl.utils.message("epwing mode on");
    }
}
function rikSanseidoToggle() {
    if (rcxMain.sanseidoMode) {
        rcxMain.sanseidoMode = false;
        dactyl.utils.message("sanseido mode off");
    } else {
        rcxMain.sanseidoMode = true;
        dactyl.utils.message("sanseido mode on");
    }
}
EOF

" ===============================================================================
"                                  ________________
"                                 |                |
"                                 | Other Commands |
"                                 |________________|


command! yanktrueURL
    \ -description "Yank the uncoded URL of the current buffer"
    \ -js var text=decodeURIComponent(buffer.URL);
    \     dactyl.clipboardWrite(text);
    \     dactyl.utils.message(text);
command! yankfilenameorURL
    \ -description "Yank the unencoded filename or the hierarchical part of the current buffer's URL. Removes queries and fragments."
    \ -js var text=decodeURIComponent(buffer.URL.replace(/^file:\/\//,'').replace(/[?#].*/,''));
    \     dactyl.clipboardWrite(text);
    \     dactyl.utils.message(text);

command! openDirectoryInDired
    \ -description "Open the current file's directory in Dired."
    \ -js var file = decodeURIComponent(buffer.URL.replace(/^file:\/\//,'').replace(/[?#].*/,''));
    \     var dir = file.replace(/[^/]*$/,'');
    \     dactyl.execute(`!emacsclient -e '(dired "${dir}")'`);

command! openFileInEmacs
    \ -description "Open the current file for editing in Emacs."
    \ -js dactyl.execute('!emacsclient "' + getFilenameOrURL() + '"');

command! pwhash
    \ -description "Open Password Hasher"
    \ -nargs=0
    \ -js pwHash();

command! pwhashgen
    \ -description "Generate short password from URL using Password Hasher"
    \ -nargs=1
    \ -js pwHashGen(args[0]);

command! pwhashsite
    \ -description "Generate short password from current site's URL using Password Hasher"
    \ -nargs=0
    \ -js var domain = decodeURIComponent(buffer.URL.replace(/^\w+:\/\//,'').replace(/\/.*/,'').replace(/www\./,'')); pwHashGen(domain);

command! prefsuffsearch
    \ -description "Search for prefix/suffix on macroevolution.net"
    \ -nargs=1
    \ -js prefsuffSearch(args[0]);

command! tr
    \ -description "Translate: tr FROM TO TEXT"
    \ -nargs=*
    \ -js dactyl.open(`https://translate.google.com.au/#${args[0]}/${args[1]}/${args[2]}`, {where:dactyl.NEW_TAB});

command! editcontent
    \ -description "Make content editable"
    \ -js elts = content.document.getElementsByTagName("*");
    \     for (i=0; i<elts.length; ++i)
    \         if (elts[i].hasAttribute("contentEditable") && elts[i].contentEditable === "true")
    \             elts[i].contentEditable = "false";
    \         else
    \             elts[i].contentEditable = "true";

command! setbodybyid
    \ -nargs=1
    \ -complete=javascript
    \ -js setBodyById(args[0]);

command! imgsalttotitle
    \ -description "Add ALT text to TITLE for all images on page"
    \ -js imgsAddAltTextToTitle();

command! hidefooter -js toggleFooter();
command! removefooter -js removeFooter();
command! removecruft -js removeCruft();

" -----------------------------------------------------------------------------
" shortcut to Wikipedia episode lists.
command! eplist -nargs=1 -js (eplist(args[0]))

" -----------------------------------------------------------------------------
" toggleWayback

map <extra>w :toggleWayback<CR>
command! toggleWayback
    \ -bang
    \ -description "Toggle web page and archive.org copy"
    \ -js bang ? toggleWayback({where: dactyl.NEW_TAB}) : toggleWayback()

" -----------------------------------------------------------------------------

map <site>s :toggleHTTPS<CR>
command! toggleHTTPS
   \ -description "Toggle protocol between HTTP and HTTPS"
   \ -js toggleHTTPS()

" -----------------------------------------------------------------------------
" kanji

map <extra>k :kanjisearch!<CR>
command! kanjisearch
    \ -bang -description "kanji search on jisho.org"
    \ -js kanjiSearchJisho(dactyl.clipboardRead(), bang);

command! popjisyo
    \ -bang
    \ -description "Add hints for Japanese via POPjisyo.com. With !, adds hints for English"
    \ -js bang ? popJisyoEtoJ() : popJisyo();

" -----------------------------------------------------------------------------

map <leader>la -ex appendlinks
map <leader>lu -ex appendlinkurls
map <leader>ll -ex listlinks
command! appendlinks
    \ -description "Append links to end of page"
    \ -js appendLinks();
command! appendlinkurls
    \ -description "Append link destinations to end of page"
    \ -js appendLinkUrls();
" trigger listlinks keyword bookmarklet
command! listlinks
    \ -description "List all links in page"
    \ :open listalllinks

" -------------------------------------------------------------------------------
" ,----------------,
" | Image Commands |
" '----------------'
map <leader>ia -ex imgsalttotitle

" -------------------------------------------------------------------------------
" ,----------------,
" | Table Commands |
" '----------------'

" Table2CSV
map <leader>tc -ex table2csv
" table2csv JS from https://snipt.net/whiskybar/ (via http://marklets.com/CSV from HTML tables.aspx)
command! table2csv
    \ -description "Convert table contents to CSV in box under table"
    \ :open javascript:(function(){$('table').each(function(){var%20$table=$(this);$('<textarea>').css('width',$table.width()).css('height','400px').html($.map($table.find('tr'),function(tr){return%20$.map($(tr).find('th,%20td'),function(e){return'"'+$(e).text().replace('"','""').replace('\n','%20')+'"'}).join(',')}).join('&#13;&#10;')).insertAfter($table);})})()

" Widen table

map <leader>tw -ex tablewiden
style -name=table_widen
    \ file://*
    \ body { max-width: 250em !important; }
command! tablewiden -description "widen table" styletoggle -name table_widen

style -name=table_wrap
    \ file://*
    \ td:first-of-type { white-space: pre-wrap !important; }
command! tablewrap -description "wrap text in table cells" styletoggle -name table_wrap
map <leader>tW -ex tablewrap


" -------------------------------------------------------------------------------

command! activator -description "Lightbend (Typesafe) Activator"
     \ :!/opt/activator-dist/bin/activator && firefox http://127.0.0.1:8888/home &


" =============================================================================
"                              _________________________
"                             |                         |
"                             | COMMAND IMPLEMENTATIONS |
"                             |_________________________|
"  ______________________________________________________________________________________
" /                                                                                      \
" | JAVASCRIPT                                                                           |
" | *  js ... code operates in chrome window namespace                                   |
" | *  :open javascript:(function(){ ... })() code operates in document window namespace |
" | note: FF's browser console <C-S-J> can be used to try out code in the chrome window  |
" |       (although some Pentadactyl variables aren't available)                         |
" |                                                                                      |
" | settings:                                                                            |
" |   dom.event.contextmenu.enabled                                                      |
" |   dom.disable_window_flip (allow window raising/lowering)                            |
" |   dom.disable_window_move_resize                                                     |
" |                                                                                      |
" \______________________________________________________________________________________/

" Function stub for opening a site and filling in a text field
" function (s) {
"     var newtab = gBrowser.addTab('');
"     gBrowser.selectedTab = newtab;
"     var tb = gBrowser.getBrowserForTab(newtab);
"     tb.addEventListener("DOMContentLoaded", function () {
"         var box = content.document.getElementById('')
"         box.value=s;
"         // box.focus();
"     });
" }

js <<EOF

var openAllLinksInCB = function () {
    var a = window.readFromClipboard().split(/[ \t\n]+/);
    for (i = 1; i < a.length; ++i) {
        dactyl.open(a[i], {where:dactyl.NEW_TAB});
    };
}

undob = function() {
    var currT = gBrowser.selectedTab;
    var altT = tabs.alternate;
    var ssService = Components.interfaces.nsISessionStore;
    var ssClass = Components.classes['@mozilla.org/browser/sessionstore;1']
    var ss = ssClass.getService(ssService);
    var closedTabs = JSON.parse(ss.getClosedTabData(window));
    var ct0 = closedTabs[0];
    ss.undoCloseTab(window, ct0);
    gBrowser.selectedTab = altT;
    gBrowser.selectedTab = currT;
}

" Create adjacent duplicate tab and go back in the browser history "
backt = function () {
    tabs.cloneTab(tabs.getTab(), true);
    var backtListener = function () {
        gBrowser.goBack();
        document.removeEventListener("DOMContentLoaded", backtListener, false);
    };
    document.addEventListener("DOMContentLoaded", backtListener, false);
}

" Create adjacent duplicate tab and go forward in the browser history "
forwardt = function() {
    tabs.cloneTab(tabs.getTab(), true);
    var forwardtListener = function () {
        gBrowser.goForward();
        dupTB.removeEventListener("DOMContentLoaded", forwardtListener);
    };
    dupTB.addEventListener("DOMContentLoaded", forwardtListener);
}

" Create adjacent duplicate tab "
tabdupa = function() {
    var currT = gBrowser.selectedTab;
    var dupT = gBrowser.duplicateTab(currT);
    var dupTB = gBrowser.getBrowserForTab(dupT);
    getBrowser().moveTabForward();
}

function toggleUrl (x, y, x_canon, y_canon) {
    " General purpose URL toggle function: swaps x and y in URL "
    " If an argument is a regex, then canonical strings corresponding "
    " to x and y must be provided to be used in replacement."
    " If one of the search expressions may be a substring of the other,"
    " the larger must be passed as the first argument x."
    if (x_canon === undefined) x_canon = x;
    if (y_canon === undefined) y_canon = y;
    var url = content.location.href;
    var newurl;
    if (url.search(x) >= 0)
        newurl = url.replace(x, y_canon);
    else if (url.search(y) >= 0)
        newurl = url.replace(y, x_canon);
    dactyl.open(newurl);
}

viewPageSource = function() {
    var loc = content.location;
    if (loc.protocol === 'view-source:')
        loc.href = loc.href.substring(12);
    else
        loc.href = 'view-source:' + loc.href;
}

function imgToDataUri(img) {
    var canvas = content.document.createElement("canvas");
    canvas.width = img.width;
    canvas.height = img.height;
    var ctx = canvas.getContext("2d");
    ctx.drawImage(img, 0, 0);
    var dataUri = canvas.toDataURL("image/png");
    // data only, return dataUri.replace(/^data:image\/(png|jpg);base64,/, "");
    return dataUri;
}
dactyl.utils.imgToDataUri = imgToDataUri;

String.prototype.capitalize = function() {
    return this.replace(/\b\w/g,
                        function (c) { return c.toUpperCase(); });
}

function eplist (s) {
    var sConv = s.capitalize().replace(" ", "_");
    dactyl.open(`www.wikipedia.org/wiki/List_of_${sConv}_episodes`);
}

popJisyoUrl = 'http://www.popjisyo.com/WebHint/AddHint.aspx?r=e';

function popJisyo(url) {
    if (!url)
        url = content.location.href;
    content.location.href = `${popJisyoUrl}&d=7&u=${encodeURIComponent(url)}`;
}

function popJisyoEtoJ(url) {
    if (!url)
        url = content.location.href;
    content.location.href = `${popJisyoUrl}&d=1&u=${encodeURIComponent(url)}`;
}

function toggleWayback(opts={}) {
    var url = content.location.href.toLowerCase();
    var waybackRegex = /https?:\/\/web\.archive\.org\/web\/(\d+)(id_)?\/(.*)/;
    var match = waybackRegex.exec(url);
    if (match) {
        dactyl.open(match[3], opts);
    }
    else {
        dactyl.open(`http://web.archive.org/web/${url}`, opts);
    }
}

function toggleHTTPS () {
    var url = content.location.href;
    var newurl;
    var sc_http  = "http://";
    var sc_https = "https://";
    if (url.indexOf(sc_http) == 0)
        newurl = url.replace(sc_http, sc_https);
    else if (url.indexOf(sc_https) == 0)
        newurl = url.replace(sc_https, sc_http);
    dactyl.open(newurl);
}

function appendLinks () {
    tmpStr = '';
    d = content.document;
    s = d.getElementsByTagName('A');
    la = new Array(s.length);
    lc=0;
    for(i = 0;i<s.length;i++)
        if(s[i].innerText != '' && s[i].innerText!= ' ') {
            lc++;
            la[lc] = s[i];
        }
    for(i = 1; i<=lc; i++)
        tmpStr += `<a href=${la[i].href}> ${la[i].href} </a><br>`;
    d.body.insertAdjacentHTML(
        'beforeEnd',
        `<br style = clear:both;><div><hr>Link Footnotes:<hr>${tmpStr}</div><hr>`
    );
}

function appendLinkUrls () {
    tmpStr = '';
    d = content.document;
    s = d.getElementsByTagName('A');
    la = new Array(s.length);
    lc=0;
    for(i = 0;i<s.length;i++)
        if(s[i].innerText != '' && s[i].innerText!= ' ') {
            lc++;
            la[lc] = s[i];
        }
    for(i = 1; i<=lc; i++)
        tmpStr += la[i].href + '<br>';
    d.body.insertAdjacentHTML(
        'beforeEnd',
        `<br style = clear:both;><div><hr>Link Footnotes:<hr><p>${tmpStr}</div><hr>`
    );
}

function kanjiSearchJisho (s, newtab) {
    if (newtab)
        dactyl.open(`http://jisho.org/search/${s}%20%23kanji`,
                    {where:dactyl.NEW_TAB});
    else
        dactyl.open(`http://jisho.org/search/${s}%20%23kanji`);
}

function filenameOrURL(s) {
    var text=decodeURIComponent(s.replace(/^file:\/\//,'').replace(/[?#].*/,''));
    return text;
}

function getFilenameOrURL() {
    var text=decodeURIComponent(buffer.URL.replace(/^file:\/\//,'').replace(/[?#].*/,''));
    return text;
}

function removeFooter() {
    var footers=content.document.body.getElementsByTagName("footer");
    for (i=footers.length-1; i>=0; --i) {
        footers[i].remove();
    }
}

function toggleFooter() {
    var footers=content.document.body.getElementsByTagName("footer");
    for (i=footers.length-1; i>=0; --i) {
        if (footers[i].style.display=="none")
            footers[i].style.display="";
        else footers[i].style.display="none";
    }
}

function removeCruft() {
    var elts = [];
    var toarray = Array.prototype.slice;
    var doc = content.document;
    var coll = doc.getElementsByTagName("header");
    if (coll) elts = elts.concat(toarray.call(coll));
    var coll = doc.getElementsByClassName("header");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("header");
    if (coll) elts.push(item);
    var coll = doc.getElementsByTagName("aside");
    if (coll) elts = elts.concat(toarray.call(coll));
    var coll = doc.getElementsByClassName("aside");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("aside");
    if (coll) elts.push(item);
    var coll = doc.getElementsByTagName("footer");
    if (coll) elts = elts.concat(toarray.call(coll));
    var coll = doc.getElementsByClassName("footer");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("footer");
    if (coll) elts.push(item);
    var coll = doc.getElementsByTagName("form");
    if (coll) elts = elts.concat(toarray.call(coll));
    var coll = doc.getElementsByClassName("topbar");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("topbar");
    if (coll) elts.push(item);
    var coll = doc.getElementsByClassName("sidebar");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("sidebar");
    if (coll) elts.push(item);
    var coll = doc.getElementsByClassName("comments");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("comments");
    var item = doc.getElementById("feed-link");
    if (coll) elts.push(item);
    if (coll) elts.push(item);
    for (i=elts.length-1; i>=0; --i) {
        if (elts[i])
            elts[i].remove();
    }
}

function pwHash() {
    var newtab = gBrowser.addTab('file:///opt/webapps/password-hasher.html');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        var box = content.document.getElementById('master-key')
        box.value=user.mymasterpw;
        var sitefield = content.document.getElementById('site-tag')
        sitefield.focus();
    });
}

function pwHashGen(s) {
    var newtab = gBrowser.addTab('file:///opt/webapps/password-hasher.html');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        var box = content.document.getElementById('master-key')
        box.value=user.mymasterpw;
        var siteEntryBox = content.document.getElementById("site-tag");
        var noSpecial = content.document.getElementById("noSpecial");
        noSpecial.click();
        var shortPWButton = content.document.getElementById("hash-word").nextElementSibling;
        siteEntryBox.value = s;
        shortPWButton = content.document.getElementsByTagName("details")[0].getElementsByTagName("button")[0];
        shortPWButton.click();
    });
}

function pwHashGenerateShortPassword(s) {
    var siteEntryBox = content.document.getElementById("site-tag");
    var shortPWButton = content.document.getElementById("hash-word").nextElementSibling;
    siteEntryBox.value = s;
    shortPWButton = click();
}

function prefsuffSearch(s) {
             var newtab = gBrowser.addTab('http://www.macroevolution.net/site-search.html')   ;
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        var entrybox = content.document.getElementsByTagName('input')[0];
        entrybox.click();
        entrybox.value = s;
        var srchBtn = content.document.getElementsByClassName('gsc-search-button gsc-search-button-v2')[0];
        srchBtn.click();
    });

}

function convertMdUrlToOrg(url) {
    if (typeof(url) == 'undefined' || !url)
        url = content.location.href;
    var regex = /\.md$|.md(?=#)/;
    var newurl = url.replace(regex, '.org');
    if (newurl !== url)
       dactyl.open(newurl);
}

function convertLastSlashToHash(url) {
    if (typeof(url) == 'undefined' || !url)
        url = content.location.href;
    var regex = /(.*)(\/)/;
    var newurl = url.replace(regex, '$1#');
    dactyl.open(newurl);
}

"FIXME: event listener not working"
function googledef (word) {
    var newtab = gBrowser.addTab(`https://www.google.com.au/search?q=define:${word}`);
    var tb = gBrowser.getBrowserForTab(newtab);
    var callback = function () {
        googleDefExpand();
        tb.removeEventListener("domloaded", callback, false);
    };
    tb.addEventListener("domloaded", callback, false);
    gBrowser.selectedTab = newtab;
}

 googleDefExpand = function() {
     var div = content.document.getElementById('uid_0');
     var link = div.getElementsByClassName('xcae')[0];
     link.click();
 };

function narrowPage(width, lmarg, rmarg) {
    var doc = content.document.getElementsByTagName('html')[0];
    doc.setAttribute('style',
                     `width: ${width}px; margin-left: ${lmarg}px; margin-right: ${rmarg}px;`);
}

function wiktionaryWordToIndexPage (word)
{
    word = word.toLowerCase();
    word = word.replace(/^-*/, '');
    var page, id;

    Number.prototype.inRange = function (a, b) {
        return (a <= this && this < b);
    }
    String.prototype.isAlphaAt = function (i) {
        ord = this.charCodeAt(i);
        return (ord.inRange(97, 123));
    }
    var wordord = "".charCodeAt.bind(word);

    if (word.isAlphaAt(0))    // word starts with letter
    {
        page = word[0];
        // letters split into 2 pages by second letter (a-m and n-z)
        if ("abcdmnprst".contains(word[0]))
            if (wordord(1).inRange(97, 110))          // a-m
                page += "1";
            else if (wordord(1).inRange(110, 123))    // n-z
                page += "2";

        id = word[0];
        if (word.isAlphaAt(1))
            id += word[1];
    }
    else                     // word starts with digit or symbol
    {
        page = "0";
        if (word.charCodeAt(1).inRange(48, 58))
            id = word(1);
        else
            id = "Symbols";
    }

    return page + "#" + id;
}

function searchKanjiDamage(s) {
    var newtab = gBrowser.addTab('http://www.kanjidamage.com');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        var box = content.document.getElementById('q')
        box.value=s;
        box.form.submit();
    });
}

function setBody(elt) {
    var body = content.document.body;
    for (i = body.children.length-1; i>=0; --i)
        body.children[i].remove();
    body.appendChild(elt);
}

function setBodyById(eltId) { setBody(content.document.getElementById(eltId)); }

function imgsAddAltTextToTitle() {
    var imgs = content.document.getElementsByTagName('img');
    var img, alt, title;
    for (i=0; i<imgs.length; ++i) {
        img = imgs[i];
        alt = img.getAttribute('alt') || '';
        title = img.getAttribute('title') || '';
        if (alt !== '') {
            if (title === '')
                img.setAttribute('title', alt);
            else
                img.setAttribute('title', title + "\nALT TEXT:\n" + alt);
        }
    }
}

EOF

" =============================================================================
"                                   _______________
"                                  |               |
"                                  | SITE SPECIFIC |
"                                  |_______________|

" -----------------------------------------------------------------------------
" ,--------,
" | Google |
" '--------'
group google -locations=google.com,google.com.*

" =================
" searchbox command
" =================

" FIXME: completion drop-down remains open after search
js <<EOF
function searchBox(s) {
    var isTextField = function(e) { return (e.getAttribute("type") == "text"); }
    var isSubmitButton = function(e) { return (e.getAttribute("type") == "submit"); }
    var inputElts = content.document.getElementsByTagName("input");
    var searchbox = [].find.call(inputElts, isTextField);
    searchbox.value = s;
    var searchbutton = [].find.call(inputElts, isSubmitButton);
    searchbutton.click();
}
EOF

command! searchbox -description "Enter string search box." -nargs="*" -js searchBox(args.join(' '));
map <site>s :searchbox<Space>

"              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

map <site>c -ex pagezipper

" restrict search to pages in a specific language
map -b <site>gl O&lr=lang_
" restrict search to pages originating in a specific country
map -b <site>gc O&cr=

group user

" -----------------------------------------------------------------------------
" ,-----,
" | EdX |
" '-----'
group edx -locations=edx.org
autocmd! -group edx

command! edx :runtime! edx.penta
autocmd DOMload courses.edx.org :edx

" if syllabus won't stay open
command! edxshowsyllabus -js edxShowSyllabus();

command! edxtogglesyllabus -js edxToggleSyllabus();
map <site>l -js edxToggleSyllabus();

js <<EOF
function edxShowSyllabus() {
    var syllabusDiv = content.document.getElementsByClassName("toggled-content")[0];
    syllabusDiv.style="height: 1500px;";
}
function edxToggleSyllabus() {
    var showLink = content.document.getElementsByClassName("show-content-cta")[0];
    var hideLink = content.document.getElementsByClassName("hide-content-cta")[0];
    var link = showLink.classList.contains("hidden") ? hideLink : showLink;
    link.click();
}
EOF

group user

" -----------------------------------------------------------------------------
" ,----------,
" | Coursera |
" '----------'
group coursera -locations=www.coursera.org

set passkeys+='https://class.coursera.org/.*/lecture/.*':'hp-+fc<up><down><left><right>'

js <<EOF
function togglePaused() {
    var v = content.document.getElementById('c-video_html5_api');
    if (v.paused)
        v.play();
    else
        v.pause();
}
EOF
map <Space> -js togglePaused();

group user

" -----------------------------------------------------------------------------
" ,-----------------,
" | AnimeLyrics.com |
" '-----------------'
group animelyrics -locations=animelyrics.com

" Go to "Print view with kanji" if it exists, or else "Print view"
map -b <site>P <C-v>'Print<Space>view<f3><CR>

" -----------------------------------------------------------------------------
" ,----------,
" | about: * |
" '----------'
group about -locations=about:*,chrome:*

map -g about -b j <C-v><Down>
map -g about -b k <C-v><Up>
"
map -g about -b J <C-v><PageDown>
map -g about -b K <C-v><PageUp>
map -g about -b <C-d> <C-v><PageDown>
map -g about -b <C-u> <C-v><PageUp>
map -g about -b gg <C-v><Home>
map -g about -b G <C-v><End>

group user

" -------------------------------------------------------------------------------
" ,--------------,
" | About:addons |
" '--------------'
group aboutaddons -locations=about:addons

js <<EOF

function addonsGet() {
    var getAddonsButton = content.document.getElementById("category-discover");
    getAddonsButton.click();
}

function addonsClickCategory(category) {
    var getButton = content.document.getElementById(category);
    getButton.click();
}

EOF

command! addonsget        -js addonsClickCategory("category-discover");
command! addonsextension  -js addonsClickCategory("category-extension");
command! addonsuserscript -js addonsClickCategory("category-greasemonkey-user-script");
command! addonsuserstyle  -js addonsClickCategory("category-userstyle");
command! addonsappearance -js addonsClickCategory("category-theme");
command! addonsplugin     -js addonsClickCategory("category-plugin");
command! addonsservice    -js addonsClickCategory("category-service");
map <site>a -js addonsClickCategory("category-discover");
map <site>e -js addonsClickCategory("category-extension");
map <site>u -js addonsClickCategory("category-greasemonkey-user-script");
map <site>U -js addonsClickCategory("category-userstyle");
map <site>t -js addonsClickCategory("category-theme");
map <site>p -js addonsClickCategory("category-plugin");
map <site>s -js addonsClickCategory("category-service");

group user

" -----------------------------------------------------------------------------
" ,-------------,
" | Archive.org |
" '-------------'
group wayback -locations=archive.org

map <site>t -ex toggleWaybackToolbar
map g<site>t -ex toggleWaybackToolbar!

" Wayback Toolbar Go To Previous Capture:
" ( Searches for a year (starting with '20' using FF link search,
"   then tabs backwards twice to land on back link and activates )
map -b <site>b <C-v>'20<S-Tab><S-Tab><CR>

command! toggleWaybackToolbar
    \ -bang
    \ -description "Hides/shows Wayback Machine toolbar. With [!], toggles between regular and no-toolbar URLs"
    \ -js bang ? toggleWaybackToolbarUrl() : toggleWaybackToolbar();

js <<EOF

function toggleWaybackToolbar() {
    var url = content.location.href
    var waybackRegex = /(https?:\/\/web\.archive\.org\/web\/\d+)(id_)?(\/.*)/;
    var match = waybackRegex.exec(url);
    if (match[2]) {
        dactyl.open(match[1] + match[3]);
    }
    else {
        var toolbar = content.document.getElementById("wm-ipp");
        if (toolbar.style.display == "none")
            toolbar.style.display = "block";
        else
            toolbar.style.display = "none";
    }
}

function toggleWaybackToolbarUrl() {
    var url = content.location.href
    var waybackRegex = /(https?:\/\/web\.archive\.org\/web\/\d+)(id_)?(\/.*)/;
    var match = waybackRegex.exec(url);
    if (match[2]) {
        dactyl.open(match[1] + match[3]);
    }
    else {
        dactyl.open(match[1] + "id_" + match[3]);
    }
}

EOF

group user

" -----------------------------------------------------------------------------
" ,--------,
" | BookZZ |
" '--------'
group bookzz -locations=bookzz.org

map <site>z -ex loginAndSearch

command! loginAndSearch
    \ -description "Sign in and repeat search for ID in input field"
    \ -js loginAndSearch(getSearchField());
map <extra>z
    \ -description "Sign in and repeat search for ID in input field"
    \ -js loginAndSearch(getSearchField());

js <<EOF

var signinurl = "http://singlelogin.org/";

function loginAndSearch() {
    var searchId = content.document.getElementsByTagName("input")[0].value;
    var curT = gBrowser.selectedTab;
    var curTB = gBrowser.getBrowserForTab(curT);
    function searchForId() {
        var searchFields = content.document.getElementsByTagName("input");
        searchFields[0].value = searchId;
        searchFields[1].click();
        curTB.removeEventListener("DOMContentLoaded", searchForId);
    }
    curTB.loadURI(signinurl);
    curTB.addEventListener("DOMContentLoaded", searchForId);
}

EOF

group user

" -----------------------------------------------------------------------------
" ,------------,
" | Github.com |
" '------------'

js function ghTabopenRepo (s) { dactyl.tabopen(`https://github.com/${s}`); }
command! ghtabopenrepo -nargs=1 -js ghTabopenRepo(args[0]);
map <goto>gh :tabopen https://github.com/
map <goto>gH :open https://github.com/

" ===== GROUP START =====
group github -locations=github.com,githubusercontent.com,rawgit.com

map <site>h -ex togglehtmlview
map <site>y -js copyRepoLink();

command! togglehtmlview
     \ -description "Toggle between HTML file and rendered view"
     \ -js toggleHTMLView();

command! gotolines -nargs=+ -js goToLines(args);

command! ghsavethisreadmetodoc
    \ -bang
    \ -description "Download README for current repo to /opt/doc/"
    \ -js ghSaveThisReadmeToDoc(bang);
map <site>r -ex ghsavethisreadmetodoc

map <site>c -js ghClickReadme();

js <<EOF

function toggleHTMLView() {
    var url = buffer.URL.toLowerCase();
    var newurl;
    if (url.contains("https://github.com")) {
        var rx = /https:\/\/github.com\/([^/\s]+\/[^/\s]+)\/blob(\/.*)/;
        var match = rx.exec(url);
        newurl = `https://rawgit.com/${match[1]}${match[2]}`;
    }
    else {
        if (url.contains("https://raw.githubusercontent.com"))
            url = url.replace("raw.githubusercontent", "rawgit");
        if (url.contains("https://rawgit.com")) {
            var rx = /https:\/\/rawgit.com\/([^/\s]+\/[^/\s]+)(\/.*)/;
            var match = rx.exec(url);
            newurl = `https://github.com/${match[1]}/blob${match[2]}`;
        }
    }
    dactyl.open(newurl);
}

function goToLines(args) {
    var loc = content.location;
    var url = loc.href.replace(/#.*$/, '');
    var frag = `#L${args[0]}`;
    if (args.length > 1) frag += `-L${args[1]}`;
    loc.href = url + frag;
}

function copyRepoLink() {
    var url=buffer.URL.toLowerCase();
    return url + ".git";
}

function ghDownloadReadmeToDoc(repo, name, ext, overwrite) {
    var overwrite = overwrite ? 't' : '';    // to be interpolated into shell script
    var rawurl = `https://raw.githubusercontent.com/${repo}/master/README.${ext}`;
    var filename = `/opt/doc/${name}-README.${ext}`;
    dactyl.execute(`! if [[ -e ${filename} ]] && [[ -z '${overwrite}' ]]; then kdialog --error "${filename} already exists"; else curl ${rawurl} > ${filename}; fi`);
}
function ghSaveThisReadmeToDoc(overwrite) {
    var matches = buffer.URL.match(/github.com\/([^/]+\/([^/]+))\/blob\/master\/README\.(.+)/);
    var repo = matches[1];
    var name = matches[2];
    var ext = matches[3];
    ghDownloadReadmeToDoc(repo, name, ext, overwrite);
}

function ghClickReadme() {
    var links = content.document.getElementsByTagName( 'a' );
    for ( var i = 0; i < links.length; i++ ) {
        if ( links[i].textContent.contains('README.') )
            links[i].click();
    }
}

EOF


" ===== Spacemacs GROUP START =====
group spacemacs -locations https://github.com/syl20bnr/*

command! markdowntoorg -nargs=? -js convertMdUrlToOrg(args.length ? args[0] : null);
map <site>o -js convertMdUrlToOrg();
command! slashtohash -nargs=? -js convertLastSlashToHash(args.length ? args[0] : null);
map <site>O -js convertLastSlashToHash();
" To use navigation menu when there are no ids:
"     use ;; to focus the link, then * to jump to it.
autocmd! -group spacemacs
" FIXME!
" autocmd PageLoad https://github.com/syl20bnr/spacemacs -javascript convertMdUrlToOrg(buffer.URL);

group user

" -------------------------------------------------------------------------------
" ,-----------,
" | GoGoAnime |
" '-----------'
group gogoanime -locations=gogoanime.io

js <<EOF

function togglePlay() {
    var player = content.document.getElementById("my_video_1");
    var playButton = player.getElementsByClassName("vjs-play-control")[0];
    playButton.click();
}

function toggleFullscreen() {
    var player = content.document.getElementById("my_video_1");
    var fullscreenButton = player.getElementsByClassName("vjs-fullscreen-control")[0];
    fullscreenButton.click();
}

EOF

command! toggleplay -description "GoGoAnime.io: Toggle Play/Pause" -js togglePlay();
command! togglefullscreen -description "GoGoAnime.io: Toggle Fullscreen" -js toggleFullscreen();
map <Space> -ex toggleplay
map <C-f11> -ex togglefullscreen

group user

" -------------------------------------------------------------------------------
" ,-------,
" | Gmail |
" '-------'
group gmail -locations=mail.google.com

js <<EOF

function gmailFilterScreen () {
    var filterlink = content.document.getElementsByTagName("tr")[2].getElementsByTagName("a")[1];
    if (filterlink.innerHTML === "Create&nbsp;a&nbsp;filter") {
        filterlink.click();
    }
}

function gmailFilterFillFrom (from) {
    var fromField = content.document.getElementsByName("cf1_from")[0];
    fromField.value=from;
    var nextStep = content.document.getElementsByName("nvp_bu_nxsb")[0];
    nextStep.click();
}

function gmailFilterFillToLabel (label) {
    var skipInputBox = content.document.getElementById("cf2_ar");
    var applyLabelBox = content.document.getElementById("cf2_cat");
    var alsoApplyBox = content.document.getElementsByName("irf")[0];
    var chooseLabelDropdown = content.document.getElementsByName("cf2_sel")[0];
    skipInputBox.checked = true;
    applyLabelBox.checked = true;
    alsoApplyBox.checked = true;
    chooseLabelDropdown.value = label;
    var createFilter = content.document.getElementsByName("nvp_bu_cftb")[0];
    createFilter.click();
    if (chooseLabelDropdown.value === label) {
        return value;
    } else {
        return null;
    }
}

function gmailFilterMailFrom (from, label) {
    // TODO: add callbacks
    var curT = gBrowser.selectedTab;
    var curTB = gBrowser.getBrowserForTab(curT);
    function doFillFrom() {
        curTB.removeEventListener("DOMContentLoaded", doFillFrom);
        function doFillLabel() {
            gmailFilterFillToLabel(label);
            curTB.removeEventListener("DOMContentLoaded", doFillLabel);
        }
        curTB.addEventListener("DOMContentLoaded", doFillLabel);
        gmailFilterFillFrom(from);
    }
    curTB.addEventListener("DOMContentLoaded", doFillFrom);
    gmailFilterScreen();
}

EOF

command! gmailcreatefilter
    \ -description "Create a filter for mail from $1, archive to label $2"
    \ -nargs=1
    \ -js gmailFilterMailFrom(args[0], args[1]);

command! gmailcreatefiltertonewsletters
    \ -description "Create a filter for mail from $1, archive to label MISC/newsletter"
    \ -nargs=1
    \ -js gmailFilterMailFrom(args[0], "MISC/newsletter");

 group user

" -----------------------------------------------------------------------------
" ,-----------------------------,
" | Google Translate (Japanese) |
" '-----------------------------'

" Note: Handwriting entry box:
" - S-Enter copies top candidate to input field.
" - Esc clears the box.

group gtransja -locations=translate.google.com/#ja,translate.google.com.au/#ja,translate.google.com/#zh-CN,translate.google.com.au/#zh-CN

set hinttags+="div.ita-hwt-candidate"

js <<EOF

var gtrImeShowHandWriteInput = function() {
    content.document.getElementsByClassName("ita-hwt-ime")[0].style = "left: 28px; top: 364px;"
}

var gtrImeHideHandWriteInput = function() {
    content.document.getElementsByClassName("ita-hwt-ime")[0].style = "-moz-user-select: none; left: 28px; top: 364px; display: none;"
}

var gtrImeIsVisibleHandWriteInput = function() {
    var hwBox = content.document.getElementsByClassName("ita-hwt-ime")[0];
    return ! hwBox.style.cssText.contains('display: none');
}

var gtrImeToggleHandWriteInput = function() {
    if (gtrImeIsVisibleHandWriteInput())
        gtrImeHideHandWriteInput();
    else
        gtrImeShowHandWriteInput();
}

function gtrImeGetCandidates() {
    var candidatesDiv = content.document.getElementsByClassName("ita-hwt-candidates")[0];
    return candidatesDiv.innerText;
}

function gtrImeGetCandidate(n=1) {
    var candidatesDiv = content.document.getElementsByClassName("ita-hwt-candidates")[0];
    var candidateDiv = candidatesDiv.children[n-1];
    return candidateDiv.innerText;
}

function gtrImeSelectCandidate(n=1) {
    var candidatesDiv = content.document.getElementsByClassName("ita-hwt-candidates")[0];
    var candidateDiv = candidatesDiv.children[n-1];
    return candidateDiv.click();
}

function gtrImeCopyCandidate(n=1) {
    var candidatesDiv = content.document.getElementsByClassName("ita-hwt-candidates")[0];
    var candidateDiv = candidatesDiv.children[n-1];
    dactyl.clipboardWrite(candidateDiv.innerText);
    return candidateDiv.innerText;
}

function gtrImeMoveHandWriteBox(h="365px") {
    var hwBox = content.document.getElementsByClassName("ita-hwt-ime")[0];
    hwBox.style.top = h;
}

function gtrImeSetWidth(w) {
    var hwBox = content.document.getElementsByClassName("ita-hwt-ime")[0];
    hwBox.style.width = w;
}

function gtrImeGetWidth() {
    var hwBox = content.document.getElementsByClassName("ita-hwt-ime")[0];
    return hwBox.style.width;
}

EOF

command! handwrite -description "Show Handwritten Input box. With [!], toggle."
    \ -bang
    \ -js bang ? gtrImeToggleHandWriteInput() : gtrImeShowHandWriteInput();
command! nohandwrite -description "Hide Handwritten Input box." -js gtrImeHideHandWriteInput();
command! hwboxrepos -description "Reposition Handwritten Input box." -js gtrImeMoveHandWriteBox();
command! hwgetwidth -js dactyl.utils.message(gtrImeGetWidth());
command! hwsetwidth -nargs=? -js gtrImeSetWidth((args[0] || "425") + "px");
command! hwtogglewidth -description "Toggle normal-width/wide IME box"
    \ -js if (gtrImeGetWidth() != "800px") gtrImeSetWidth("800px"); else gtrImeSetWidth("425px");
map <site><C-l> -js gtrImeMoveHandWriteBox();
map <site><C-S-L> -ex hwtogglewidth
map <site>l -js gtrImeMoveHandWriteBox();
map <site>w -ex hwtogglewidth
map <site>h -js gtrImeToggleHandWriteInput()
map <site>k
    \ -description "Open Jisho.org kanji page (new tab)"
    \ -js dactyl.open(`http://jisho.org/search/${gtrImeGetCandidate()}%23kanji`, {where:dactyl.NEW_TAB})
map <site>K
    \ -description "Open Jisho.org kanji page (current tab)"
    \ -js dactyl.open(`http://jisho.org/search/${gtrImeGetCandidate()}%23kanji`)


" map -b <SPACE><SPACE> <SPACE><SPACE>
" unmap -group gtransja <SPACE><SPACE>
map <SPACE><SPACE> -js gtrImeShowHandWriteInput();

group user

" -----------------------------------------------------------------------------
" ,----------------,
" | Graphemica.com |
" '----------------'

js <<EOF

var graphemicaCharSelect = function (words) {
    var s = words.join(' ');
    dactyl.execute(`tabopen http://graphemica.com/search?q=${s}`);
    var charselectListener = function () {
        dactyl.execute('normal <link_desc>');
        document.removeEventListener("DOMContentLoaded", charselectListener, false);
    };
    document.addEventListener("DOMContentLoaded", charselectListener, false);
}

EOF

command! graphemicacharselect
    \ -desc "Search for a character on Graphemica.com and select with hints to copy to clipboard."
    \ -nargs=*
    \ -js graphemicaCharSelect(args);

" -------------------------------------------------------------------------------
" ,---------------------------------,
" | Japanese Compound Verb Database |
" '---------------------------------'

js <<EOF
function japDoSearchCompVerb(type, s) {
    var searchComp = content.document.getElementById('V1_V2_mode');
    var searchV1 = content.document.getElementById('V1_mode');
    var searchV2 = content.document.getElementById('V2_mode');
    switch (type) {
      case 0:
        searchComp.click();
        break;
      case 1:
        searchV1.click();
        break;
      case 2:
        searchV2.click();
        break;
    } ;
    var searchbox = content.document.getElementById('searchbox');
    searchbox.value=s;
    var doClick = function(){
        var searchbutton = content.document.getElementById('filterButton');
        searchbutton.click();
    }
    window.setTimeout(doClick, 1500);
    return true;
}

function japSearchCompVerb(type, s) {
    var newtab = gBrowser.addTab('http://vvlexicon.ninjal.ac.jp/db/');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    japSearchCompCallback = function() { japDoSearchCompVerb(type, s) };
    tb.addEventListener("DOMContentLoaded", japSearchCompCallback);
}
EOF

command! jcompvb
\ -desc "Search for japanese compound verb"
\ -nargs=1
\ -js japSearchCompVerb(0, args)
command! jcompvb1
\ -desc "Search for japanese compound verb by verb 1"
\ -nargs=1
\ -js japSearchCompVerb(1, args)
command! jcompvb2
\ -desc "Search for japanese compound verb by verb 2"
\ -nargs=1
\ -js japSearchCompVerb(2, args)
command! jdocompvb2
\ -desc "Search for japanese compound verb by verb 2"
\ -nargs=1
\ -js japDoSearchCompVerb(2, args)

" -------------------------------------------------------------------------------
group vvlex -locations=vvlexicon.ninjal.ac.jp

js <<EOF
function vvlexSearchV1(s) {
    var searchbox = content.document.getElementById('searchbox');
    searchterm = s || searchbox.value;
    var v1search = content.document.getElementById('V1_mode');
    v1search.click();
    searchbox.value = searchterm;
    searchbox.value = searchterm;
    var doClick = function(){
        var searchbutton = content.document.getElementById('filterButton');
        searchbutton.click();
    }
    window.setTimeout(doClick, 1500);
}
function vvlexSearchV2(s) {
    var searchbox = content.document.getElementById('searchbox');
    searchterm = s || searchbox.value;
    var v2search = content.document.getElementById('V2_mode');
    v2search.click();
    searchbox.value = searchterm;
    var doClick = function(){
        var searchbutton = content.document.getElementById('filterButton');
        searchbutton.click();
    }
    window.setTimeout(doClick, 1500);
}
EOF

command! vvlexsearchv1 -nargs=? -js vvlexSearchV1(args[0]);
command! vvlexsearchv2 -nargs=? -js vvlexSearchV2(args[0]);
map <site>1 -js vvlexSearchV1();
map <site>2 -js vvlexSearchV2();

group user

" -----------------------------------------------------------------------------
" ,-----------,
" | JSBin.com |
" '-----------'
group jsbin -locations=jsbin.com

" remove all existing jsbin autocmds
autocmd! -group jsbin

map <site>m -js toggleMenu();

js <<EOF

function toggleMenu() {
    var menu = content.document.getElementsByClassName('menu')[0];
    if (menu.className.endsWith(' open'))
        menu.className = menu.className.slice(0,-5);
    else
        menu.className += ' open';
}

EOF

set eht+=[m]:.menu,select[id=library]

js <<EOF

hints.addMode(
  'm','JSBin menu',
  function(e) {
    if (e.className.contains('toppanel-hide'))
      e.click();
    else if (e.className.contains(' open'))
        e.className = e.className.replace(' open', '');
    else
        e.className += ' open';
  }
);

EOF

group user

" -----------------------------------------------------------------------------
" ,-----------,
" | Jisho.org |
" '-----------'
group jisho -locations=jisho.org

" remove all existing jisho autocmds
autocmd! -group jisho

map <site>s -ex jishoshrinksod
map <site>M -ex jishofixmodal
map <site>R -ex jishotoggleromaji
map <site>k -ex jishotogglekanji
map <site>r -ex jishotoggleradicalinput
map <site>l -ex jishotogglelinklists
map <site>x -ex jishotogglesentences
map <site>* :jishoscalesod<Space>

" -----------------
" jishotoggleromaji
" -----------------
js <<EOF

var jishoToggleRomaji = function() {
    var url = buffer.URL;
    var romtag = "%23romaji";
    if (url.contains(romtag))
        newurl = url.replace(romtag,"");
    else
        newurl = `${url}%23romaji`;
    dactyl.open(newurl);
}

var jishoToggleKanji = function() {
    var url = buffer.URL;
    var kanjitag = "%23kanji";
    if (url.contains(kanjitag))
        newurl = url.replace(kanjitag,"");
    else
        newurl = `${url} ${kanjitag}`;
    dactyl.open(newurl);
}

var jishoToggleSentences = function() {
    var url = buffer.URL;
    sentencetag = "%23sentences";
    if (url.contains(sentencetag))
        newurl = url.replace(sentencetag,"");
    else
        newurl = `${url} ${sentencetag}`;
    dactyl.open(newurl);
}

var jishoToggleRadicalInput = function() {
    var radicalButton = content.document.getElementById("radical_button");
    radicalButton.click();
}

EOF

" adds/removes #romaji tag to toggle between kana and romaji:

command! jishotoggleromaji
     \ -description "Toggle between kana and romaji"
     \ -js jishoToggleRomaji();

command! jishotoggleradicalinput
     \ -description "Toggle kanji radical input dialog"
     \ -js jishoToggleRadicalInput();

command! jishotogglekanji
     \ -description "Toggle between kanji page and regular results"
     \ -js jishoToggleKanji();

command! jishotogglesentences
     \ -description "Toggle between sentences page and regular results"
     \ -js jishoToggleSentences();

" ----------
" Hint modes
" ----------
" TODO: work out site/group-specific hinting.
"       - autocmd to reset eht and hints.addMode?
"       - use common dispatch function in hints.addMode?
"
set eht+=[kgKG\']:div.concept_light-representation>span.text
set eht+=[l]:a[class="concept_light-status_link"]
set eht+=[r]:li.radical.available,li.radical.selected

js <<EOF

var dec = decodeURIComponent;

hints.addMode(
  'r','select kanji radical',
  function(e) {
      e.click();
  }
);

hints.addMode(
  '\'','yank entry',
  function(e) {
      dactyl.clipboardWrite(e.innerText);
  }
);

hints.addMode(
  'k','open kanji details in new tab',
  function(e) {
    dactyl.open(dec(`http://jisho.org/search/${e.textContent}%2523kanji`),
                {where:dactyl.NEW_TAB});
  }
);

hints.addMode(
  'K','open kanji details',
  function(e) {
    dactyl.open(dec(`http://jisho.org/search/${e.textContent}%2523kanji`));
  }
);

hints.addMode(
  'g','open sentence examples',
  function(e) {
    dactyl.open(dec(`http://jisho.org/search/${e.textContent}%2523sentences`));
  }
);

hints.addMode(
  'G','open sentence examples in new tab',
  function(e) {
    dactyl.open(dec(`http://jisho.org/search/${e.textContent}%2523sentences`),
                {where:dactyl.NEW_TAB});
  }
);

hints.addMode(
  'l','links drop down',
  function(e) {
    var dd_id = e.getAttribute("data-dropdown");
    var dd = content.document.getElementById(dd_id);
    dactyl.echo(dd.style.left);
    if (parseInt(dd.style.left) < -100) {
      dd.style.left = "0px";
    } else {
      dd.style.left = "-99999px";
    }
  }
);

EOF

" -----------
" Kanji style
" -----------
style -name=kanji_light
    \ jisho.org
    \ .kanji .character, .kanji_light .character {
    \     font-family: "HiraMinPro-W3","Hiragino Mincho Pro W3","Hiragino Mincho Pro","ヒラギノ明朝 Pro W3","游明朝",YuMincho,"HG明朝E","ＭＳ Ｐ明朝","MS PMincho","MS 明朝","MS Mincho",serif !important;
    \ }
    \ .kanji .character:hover, .kanji_light .character:hover {
    \     font-family:  "HiraKakuPro-W3","Hiragino Kaku Gothic Pro W3","Hiragino Kaku Gothic Pro","ヒラギノ角ゴ Pro W3","メイリオ",Meiryo,"游ゴシック",YuGothic,"ＭＳ Ｐゴシック","MS PGothic","ＭＳ ゴシック","MS Gothic",sans,sans-serif !important;
    \ }
command! jishokanjilight
    \ -description "Light style kanji"
    \ styleenable -group jisho -name kanji_light
command! jishokanjiheavy
    \ -description "Heavy style kanji"
    \ styledisable -group jisho -name kanji_light
command! jishokanjitoggle
    \ -description "Toggle heavy/light kanji style"
    \ styletoggle -group jisho -name kanji_light

" --------------------------------
" Remove arrows from details links
" --------------------------------
js <<EOF

function jishoFixDetailsLinks() {
    var links = content.document.getElementsByClassName("light-details_link")
    for (i=0; i<links.length; ++i)
        links[i].textContent = links[i].textContent.slice(0, -2);
}

EOF

command! jishofixdetailslinks
     \ -description "Remove arrows from `details' links"
     \ -js jishoFixDetailsLinks();
autocmd DOMLoad jisho.org :jishofixdetailslinks


" -------------------------------------------------------------
" jishoshrinksod: Halve the dimensions of stroke order diagrams
" -------------------------------------------------------------
js <<EOF

function jishoScaleSOD(scale=0.5, ignore_min=false) {
    var svgelts=content.document.getElementsByTagName("svg");
    var MINHEIGHT = 40;

    // NOTE: sod class must be first or only class
    function isSOD(x) {
        return x.getAttribute('class').slice(0,20)=="stroke_order_diagram";
    }
    var sods = [].filter.call(svgelts, isSOD);

    // NOTE: assume length unit is "px" or other 2-char unit
    for (i=0; i<sods.length; ++i) {
        var style = sods[i].style;
        var newheight = parseInt(style.height) * scale;
        var newwidth = parseInt(style.width) * scale;

        // NOTE: crude test to see if previously shrunken
        if (!ignore_min && newheight<MINHEIGHT) continue;

        var hunit = style.height.slice(-2);
        var wunit = style.width.slice(-2);
        sods[i].setAttribute(
            "style",
            `height: ${newheight}${hunit}; width: ${newwidth}${wunit};`
        );
    }
}

EOF

command! jishoshrinksod
     \ -description "Halve the dimensions of stroke order diagrams"
     \ -js jishoScaleSOD();
command! jishoscalesod
     \ -description "Scale kanji stroke order diagrams by a factor"
     \ -nargs=?
     \ -js jishoScaleSOD(args[0], true);
command! ss
     \ -description "Scale kanji stroke order diagrams by a factor"
     \ -nargs=?
     \ -js jishoScaleSOD(args[0], true);

autocmd PageLoad jisho.org :jishoshrinksod

" ----------------------------------------------------
" jishofixmodal: fix position of modal box in viewport
" ----------------------------------------------------
" TODO: have :jishofixmodal applied automatically.

js <<EOF

function jishoFixModal() {
    var modal = content.document.getElementById('inflection_modal');
    var modalbg = content.document.getElementsByClassName('reveal-modal-bg')[0];
    var basestyle = modal.getAttribute("style");
    var bgbasestyle = modalbg.getAttribute("style");
    modal.setAttribute("style", `${basestyle}; position: fixed;`)
    modalbg.setAttribute("style", `${bgbasestyle}; position: fixed;`)
}

EOF

command! jishofixmodal
     \ -description "Fix modal in viewport"
     \ -js jishoFixModal();

" --------------------
" jishotogglelinklists
" --------------------
js <<EOF

function jishoToggleLinkLists() {
    var linklists = content.document.getElementsByClassName("f-dropdown");
    for (i=0; i<linklists.length; ++i) {
        linklists[i].focus();
        var llstyle = linklists[i].style;
        leftvalmatch = llstyle.cssText.match(/left: *(-?\d+\w*);/);
        if (leftvalmatch && parseInt(leftvalmatch[1])>-200) {
            llstyle.cssText = "";
        } else {
            llstyle.cssText = "position: relative; left: -120px; top: 0;";
        }
    }
}

EOF

command! jishotogglelinklists
     \ -description "Show all link lists"
     \ -js jishoToggleLinkLists();


group user


" -------------------------------------------------------------------------------
" ,-----------------,
" | MaggiSensei.com |
" '-----------------'
group maggiesensei -locations=maggiesensei.com
autocmd! -group maggiesensei

" For now, use :togglestylesembedded
" TODO: work out how to fix the style (the '.post-content' class has post in it).
command! maggiefix
    \ -description "Fix regions of missing content on maggiesensei.com"
    \ :togglestylesembedded<CR>

autocmd LocationChange :execute "emenu Tools.Web Developer Extension.CSS.Disable Styles.Disable Individual Style Sheet.http://maggiesensei.com/wp-content/themes/custom-community/style.css"
" autocmd LocationChange :emenu Tools.Web Developer Extension.CSS.Disable Styles.Disable Individual Style Sheet.http://maggiesensei.com/wp-content/themes/custom-community/style.css

js <<EOF
function maggieRemoveCruft(removeImgs=false) {
    var article = content.document.getElementsByClassName("post-content")[0];
    var body = content.document.getElementsByTagName("body")[0];
    for (i=body.children.length-1; i>=0; --i) {
        body.children[i].remove();
    }
    body.appendChild(article);
    article.style["background-color"]="white";
    article.style["margin"]="4em";
    article.style["padding"]="4em";
    var torem = content.document.getElementsByClassName("wp_social_bookmarking_light");
    if (torem.length) torem[0].remove();
    torem = content.document.getElementsByClassName("wp_social_bookmarking_light_clear");
    if (torem.length) torem[0].remove();
    if (removeImgs) {
        var imgs = content.document.getElementsByTagName("img");
        for (i=imgs.length-1; i>=0; --i) {
            imgs[i].remove();
        }
    }
}
EOF

command! maggieremovecruft -bang -js maggieRemoveCruft(bang);
map <site>c -js maggieRemoveCruft(count);

group user

" -------------------------------------------------------------------------------
" ,-------------,
" | OReilly.com |
" '-------------'
group oreilly -locations=oreilly.com

js <<EOF
function oreillyFreeEbookFillForm() {
    var fields = content.document.getElementsByClassName("tar mt mb")[0].getElementsByTagName("input");
    fields[0].value = user.myfirstname;
    fields[1].value = user.mylastname;
    fields[2].value = user.myemail2;
    fields[4].click();
}
function oreillyFreeEbookGetPdfHref() {
  var pdf = content.document.getElementsByClassName("download format-pdf mr")[0];
  if (typeof pdf != 'undefined')
    return pdf.children[0].href;
  else return '';
}
function oreillyFreeEbookGetEpubHref() {
  var epub = content.document.getElementsByClassName("download format-epub mr")[0];
  if (typeof epub != 'undefined')
    return epub.children[0].href;
  else return '';
}
function oreillyFreeEbookWgetEpubHref() {
  var epubhref = oreillyFreeEbookGetEpubHref();
  return (epubhref === '') ? '' : `wget ${epubhref}`;
}
function oreillyFreeEbookWgetPdfHref() {
  var pdfhref = oreillyFreeEbookGetPdfHref();
  return (pdfhref === '') ? '' : `wget ${pdfhref}`;
}
EOF
command! oreillyFreeEbookAutofill -js oreillyFreeEbookFillForm();
map <site>eo -js oreillyFreeEbookFillForm();
command! oreillyFreeEbookDlPdf -js dactyl.open(oreillyFreeEbookGetPdfHref(), {where:dactyl.NEW_TAB});
command! oreillyFreeEbookDlEpub -js dactyl.open(oreillyFreeEbookGetEpubHref(), {where:dactyl.NEW_TAB});
map <site>eD -ex oreillyFreeEbookDlEpub | oreillyFreeEbookDlPdf
command! oreillyFreeEbookDl -js dactyl.execute(`!roxterm -e zsh -c 'cd ~/Downloads && {${oreillyFreeEbookWgetEpubHref()}} && {${oreillyFreeEbookWgetPdfHref()}}'`);
map <site>ed -ex oreillyFreeEbookDl

group user

" -----------------------------------------------------------------------------
" ,-------------------,
" | StackOverflow.com |
" '-------------------'
group stackexchange -locations=stackoverflow.com,stackexchange.com,superuser.com

map -modes insert -b <A-k> <S-<>kbd<S->><S-<>/kbd<S->><Left><Left><Left><Left><Left><Left>

set editor='gvim -f +<line> +"sil! call cursor(0, <column>)" +"set ft=markdown" <file>'

group user

" -------------------------------------------------------------------------------
" ,-------------,
" | Subs.com.ru |
" '-------------'

js <<EOF

function subsRuSearch(s){
    var searchForm = content.document.getElementById("search");
    var inputs = searchForm.getElementsByTagName("input");
    var searchField = inputs[1];
    var searchButton = inputs[2];
    searchField.value = (s);
    searchButton.click();
}

function searchSubsRu(s) {
    var newtab = gBrowser.addTab('subs.com.ru');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    subsRuCallback = function() { subsRuSearch(s); }
    tb.addEventListener("DOMContentLoaded", subsRuCallback);
}

EOF

command! subsrusearch
    \ -description "Search subs.com.ru"
    \ -nargs=1
    \ -js searchSubsRu(args[0]);


" -------------------------------------------------------------------------------
" ,--------------,
" | TheHylia.com |
" '--------------'
group hylia -locations=anime.thehylia.com

" FIXME!

command! hyliacurlsonglinks
  \ -description "Generate curl commands to download song links and copy to clipboard."
  \ -js hyliaFollowSongLinks();

command! hyliacurlsong
  \ -description "Generate curl command to download the current song link and copy to clipboard."
  \ -js hyliaGetSong();
map <site>d -js hyliaGetSong();


js <<EOF
function hyliaFollowSongLinks() {
    var tbl = content.document.getElementsByClassName("blog")[0];
    var albumName = tbl.getElementsByTagName("h2")[0].innerText;
    var rows = tbl.getElementsByTagName("table")[0].getElementsByTagName("tr");
    for (i=0; i<rows.length; ++i) {
        var row = rows[i];
        var pageLink = row.getElementsByTagName("a")[0].href;
        var trackName = row.getElementsByTagName("a")[0].innerText;
        var filename = `"${albumName} - ${trackName}"`;
        dactyl.clipboardWrite(filename);
        hyliaFetchSongPage(albumName, trackName, pageLink);
    }
}
function hyliaFetchSongPage(albumName, trackName, pageLink) {
    var newtab = gBrowser.addTab(pageLink);
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function() {
        var tbl = content.document.getElementsByClassName("blog")[0];
        var allLinks = tbl.getElementsByTagName("a");
        var link = allLinks[allLinks.length-1];
        var linkurl = decodeURIComponent(link.href);
        hyliaCopyCurlCommand(albumName, trackName);
    });
}
function hyliaCopyCurlCommand(albumName, trackName) {
        if (typeof trackName == 'undefined')
            var curlCmd = `curl ${linkurl} `;
        else
            var curlCmd = `curl ${linkurl} > "${albumName} - ${trackName}";`;
        dactyl.utils.message(curlCmd);
        dactyl.clipboardWrite(curlCmd);
}
function hyliaGetSong(albumName, trackName) {
    var tbl = content.document.getElementsByClassName("blog")[0];
    var allLinks = tbl.getElementsByTagName("a");
    var link = allLinks[allLinks.length-1];
    var linkurl = decodeURIComponent(link.href);
    if (typeof trackName == 'undefined')
        var curlCmd = `curl ${linkurl} `;
    else
        var curlCmd = `curl ${linkurl} > "${albumName} - ${trackName}";`;
    dactyl.utils.message(curlCmd);
    dactyl.clipboardWrite(curlCmd);
}
EOF

group user

" -----------------------------------------------------------------------------
" ,-----------------,
" | Userscripts.org |
" '-----------------'

js <<EOF

function userscriptsMirror(url) {
    var rx = /https?:\/\/(www.)?userscripts.org\/(.*)/;
    var match = rx.exec(url.toLowerCase());
    if (match)
        dactyl.open(`http://userscripts-mirror.org/${match[2]}`);
    else
        dactyl.utils.message(`userScriptsMirror: Address doesn't match: ${url}`);
}

EOF

command! userscriptsmirror -nargs=?
    \ -js if (args.length==0)
    \         userscriptsMirror(dactyl.clipboardRead());
    \     else
    \         userscriptsMirror(args[0]);

" -------------------------------------------------------------------------------
" ,-----------,
" | Wikia.com |
" '-----------'
group wikia -locations='.*\.wikia\.com/'
autocmd! -group wikia

command! removefandomads
    \ -description "Remove 'Trending Fandom' ads"
    \ -js removeFandomAds();
js <<EOF
function removeFandomAds() {
  var fads = content.document.getElementsByClassName("recirculation-rail")[0];
  fads.style.display="none";
}
EOF
map <site>c -js removeFandomAds();

group user

" -----------------------------------------------------------------------------
" ,---------------,
" | Wikipedia.org |
" '---------------'
group wikipedia -locations=wikipedia.org

command! wpapplycss :source ~/.pentadactyl/wikipedia.css

js <<EOF
var wpLatest = function() {
   var newurl = buffer.URL.replace(/\?.*$/, '');
   dactyl.open(newurl);
}
var wpContent = function() {
    var heading = content.document.getElementById("firstHeading");
    var articletext = content.document.getElementById("bodyContent");
    return heading.innerText + "\n\n" + articletext.innerText;
}
var wpHtml = function() {
    var heading = content.document.getElementById("firstHeading");
    var articletext = content.document.getElementById("bodyContent");
    return `<h1>${heading.innerHTML}</h1>\n${articletext.innerHTML}`;
}
var wpCopyContent = function() {
    articletext = wpContent();
    dactyl.clipboardWrite(articletext);
    dactyl.utils.message(`COPIED: ${articletext.slice(0, 20)} ... ${articletext.slice(-20)}`);
}
var wpCopyHtml = function() {
    articlehtml = wpHtml();
    dactyl.clipboardWrite(articlehtml);
    dactyl.utils.message(`COPIED: ${articlehtml.slice(0, 20)} ... ${articlehtml.slice(-20)}`);
}
EOF
command! wplatest -description "Go to latest revision" -js wpLatest();
map <site>l -ex wplatest
command! wpcopycontent -description "Copy article text to clipboard" -js wpCopyContent();
command! wpcopyhtml -description "Copy article HTML to clipboard" -js wpCopyHtml();

group user

" -------------------------------------------------------------------------------
" ,-------------,
" | Youtube.com |
" '-------------'
group youtube -locations=youtube.com

js <<EOF
var ytplayer = function () {
    return content.document.getElementById("movie_player").wrappedJSObject;
}
var ytMinSpeed = 0.25;
var ytGetSpeed = function() { return ytplayer().getPlaybackRate(); }
var ytSetSpeed = function(r) { ytplayer().setPlaybackRate(Math.max(r, ytMinSpeed)); }
var ytAdjustSpeed = function(delta) { ytSetSpeed(ytGetSpeed()+delta); }
var ytPlay = function() { ytplayer().playVideo(); }
var ytPause = function() { ytplayer().pauseVideo(); }
var ytIsPaused = function() { return (ytplayer().getPlayerState() == 2); }
var ytTogglePause = function() {
    if (ytIsPaused()) ytPlay();
    else ytPause();
}

EOF

command! ytincrate -description "increase playback rate" -js ytAdjustSpeed(0.25);
command! ytdecrate -description "decrease playback rate" -js ytAdjustSpeed(-0.25);
command! ytshowrate
    \ -description "show playback rate"
    \ -js dactyl.utils.message(ytGetSpeed());

command! ytrate
    \ -description "set playback rate"
    \ -nargs=1
    \ -js ytSetSpeed(args[0]/10);

map <site>yr :ytrate<Space>
map <site>yR -ex ytshowrate
map <site>\> -js ytAdjustSpeed(0.25);
map <site>\< -js ytAdjustSpeed(-0.25);

command! ytdl -description "Download video/playlist with youtube-dl"
    \ -js dactyl.execute(`! cd ~/Downloads && youtube-dl '${buffer.URL}'`);
map <site>yd -ex ytdl

map <site><Space> -js ytTogglePause();
map <Space> -js ytTogglePause();
command! ytBindSpacebar -ex map <Space> -js ytTogglePause();

group user

" -------------------------------------------------------------------------------
" ,-------------,
" | OTHER SITES |
" '-------------'

group tipsonjap -locations=meadowlake001.blogspot.jp
" Tips on Japanese
" http://meadowlake001.blogspot.jp
command! widenSidebar -group tipsonjap
    \ -js <<EOF
    var s=content.document.getElementById('sidebar');
    var c=content.document.getElementById('content');
    s.style.width='400px';
    c.style['margin-left']='400px';
EOF

group user

" =============================================================================
"                                       _______
"                                      |       |
"                                      | NOTES |
"                                      |_______|

" -----------------------------------------------------------------------------
" ,-----------------,
" | USEFUL COMMANDS |
" '-----------------'
"
" call function defined in document: content.wrappedJSObject.page_func()
" echo in dactyl status bar: dactyl.echo('');
" current tab:  tabs.getTab()
" current tab number:  tabs.getTab().dactylOrdinal
" current selection: buffer.currentWord
" current URL: buffer.URL
" alternative to :execute: :js CommandExMode().open(exCommandString)
" number of tabs: tabs.count
" get tab with index i: tabs.getTab(i)
" NOTE: index used in tabs.getTab is zero-based
"       ordinal returned from .dactylOrdinal is 1-based
"

" =============================================================================
