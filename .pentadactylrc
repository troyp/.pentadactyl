"     ___________________
"    /                   \
"    | ,---------------, |
"    | | PENTADACTYLRC | |
"    | '---------------' |
"    \___________________/
"
"
group user

" load javascript utilities
runtime! utils.js
" load utils into current context
js var utils = dactyl.utils.getPlugin("utils");

" load personal details
runtime! personal.js
js var user = dactyl.utils.getPlugin("personal");

runtime! js/jquery.min.js
runtime! js/sprintf.js
set passkeys=

" -------------------------------------------------------------------------------
" ,------------------------,
" | Javascript helper code |
" '------------------------'

js <<EOF

var Cc = Components.classes;
var Ci = Components.interfaces;
var Cu = Components.utils;

"imports"
Cu.import("resource://gre/modules/BookmarkHTMLUtils.jsm");
Cu.import("resource://gre/modules/FileUtils.jsm");

"components"
var Cc = Components.classes;
function XpcService(url, ifc) {
    try {
        var interface = Ci[ifc];
        return Cc[url].getService(interface);
    } catch(e) {
        utils.message("XpcService: Cannot get service " + url + ", " + ifc + "\n" + e);
        return null;
    }
}
window.XpcService = XpcService;

function XpcInstance(url, ifc) {
    try {
        var interface = Ci[ifc];
        return Cc[url].createInstance(interface);
    } catch(e) {
        utils.message("XpcInstance: Cannot create instance " + url + ", " + ifc + "\n" + e);
        return null;
    }
}
window.XpcInstance = XpcInstance;

function XpcQueryInterface(elt, ifc) {
    try {
        var interface = Ci[ifc];
        return elt.QueryInterface(interface);
    } catch(e) {
        utils.message("XpcQueryInterface: Cannot query interface " + ifc + " of " + elt + "\n" + e);
	      return null;
    }
}
window.XpcQueryInterface = XpcQueryInterface;

"System"
var env = XpcService("@mozilla.org/process/environment;1",
                      Components.interfaces.nsIEnvironment);
window.env = env;

var nsIFilePicker = Ci.nsIFilePicker;
var fp = XpcInstance("@mozilla.org/filepicker;1", nsIFilePicker);

"Firefox Preferences"
var prefservice = Cc["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefService);
function prefbranch(branch) { return prefservice.getBranch(branch); }
var prefroot = Cc["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefBranch);
window.prefservice = prefservice
window.prefbranch = prefbranch
window.prefroot = prefroot
" String Preferences: prefroot.(g|s)etCharPref for ASCII, prefroot.getComplexValue for unicode... "
function getStrPref(pref) { return prefroot.getComplexValue(pref, Components.interfaces.nsISupportsString); }
function setStrPref(pref, value) {
    prefroot.setComplexValue(pref, Components.interfaces.nsISupportsString, value);
}

"utility functions"
// Array methods for other collections
A = {
    map:         (coll, f) => Array.from(coll).map(f),
    filter:      (coll, f) => Array.from(coll).filter(f),
    forEach:     (coll, f) => Array.from(coll).forEach(f),
    find:        (coll, f) => Array.from(coll).find(f),
    every:       (coll, f) => Array.from(coll).every(f),
    some:        (coll, f) => Array.from(coll).some(f),
    findIndex:   (coll, f) => Array.from(coll).find(f),
    includes:    (coll, f, fromIndex=undefined) => Array.from(coll).includes(f, fromIndex),
    indexOf:     (coll, f, fromIndex=undefined) => Array.from(coll).indexOf(f, fromIndex),
    concatMap:   (coll, f) => [].concat.apply([], Array.from(coll).map(e=>Array.from(f(e)))),
    mapProperty: (coll, p) => Array.from(coll).map(e=>e[p]),
    zip:         (coll1, coll2) => Array.from(coll1).map((e,i)=>[e, coll2[i]])
}
window.A = A;

function runProcess(exec, ...args) {
    var executable = XpcInstance("@mozilla.org/file/local;1", Components.interfaces.nsILocalFile);
    executable.initWithPath(exec);
    var process = XpcInstance("@mozilla.org/process/util;1", Components.interfaces.nsIProcess);
    process.init(executable);
    process.runAsync(args, args.length);
}

function makeDisplayToggle(selector) {
    function displayToggle() {
        var elt = content.document.querySelector(selector);
        if (elt) {
          if (elt.style.display == 'none')
          elt.style.display = 'block';
          else elt.style.display = 'none';
        } else dactyl.echoerr(`no match for selector ${selector}`);
    }
    return displayToggle;
}
window.makeDisplayToggle = makeDisplayToggle;

"Patched Classes"
String.prototype.capitalize = function() {
    return this.replace(/\b\w/g,
                        function (c) { return c.toUpperCase(); });
}
String.prototype.isAlphaAt = function (i) {
    ord = this.charCodeAt(i);
    return (ord.inRange(97, 123));
}
Number.prototype.inRange = function (a, b) {
    return (a <= this && this < b);
}

window.AUDperUSD = 1.32;

EOF

" -----------------------------------------------------------------------------
" ,---------,
" | Options |
" '---------'
"
set runtimepath=/home/troy/.pentadactyl
set guioptions=bBCrmNsT
set incfind
set hlfind
set findcase=smart
set showstatuslinks=status
"set wildmode=list:longest,list:full
set wildmode=list:longest,list:full
set altwildmode=list:full
set strictfocus=mail.google.com:laissez-faire,'chrome:*':laissez-faire,*:moderate
set scrolltime=0
set scrollsteps=1

" nextpattern, previouspattern
" default: '^\s*Next Page\s*$','^\s*Next [>»]','\bnext\b',^>$,'^(>>|»)$','^(>|»)','(>|»)$','\bmore\b',
" default: '^\s*Prev(ious)? Page\s*$','[<«] Prev\s*$','\bprev(ious)?\b',^<$,'^(<<|«)$','^(<|«)',
set nextpattern='^\W*\bForward\b\W*$','^\s*Next( Page\s*)?$','^\s*Next [>»]','\bnext\b',^>$,'^(>>|»)$','^(>|»)','(>|»|▸)$','\bMore Words\b','\bmore\b'
set previouspattern='^\W*\bBack\b\W*$','^\s*Prev(ious)?( Page\s*)?$','[<«] Prev\s*$','\bprev(ious)?\b',^<$,'^(<<|«)$','^(<|«)','(<|«|◂)$'

set wildignore='~$','^(.*/)?\..*\.sw[m-p]$','^(.*/)?#.+#$'


" Ex commands output in a new tab by default (prefs, addons...)
set newtab=all

" make yanks go to clipboard
js editor.defaultRegister="+"

set! browser.tabs.closeWindowWithLastTab=false

command! editorvim :set editor='gvim -f +<line> +"sil! call cursor(0, <column>)" +"set ft=markdown" <file>'
command! editoremacs :set editor='emacsclient'
command! editoremacsnewwin :set editor='emacsclient -c'
command! editoremacsnw :set editor='roxterm --replace -e emacsclient -tc +<line> <file>'
" set editor='roxterm --replace -e vim -f +<line> +"sil! call cursor(0, <column>)" +"set ft=markdown" <file>'
set editor='roxterm --replace -e emacsclient -tc +<line> <file>'

" =============================================================================
"                                   ______________
"                                  |              |
"                                  | KEY BINDINGS |
"                                  |______________|

" -------------------------------------------------------------------------------

unmap!

" ,-------------,
" | Prefix Keys |
" '-------------'

" Unmap prefix keys
map s <Nop>
" map S <Nop>
" map <C-x><C-h> <Nop>
" map <C-x> <Nop>

" Map prefix keys to prefix pseudokeys
map e <goto>
map c <site>
imap <A-return> <Esc><site>
" " The <sel> and <sidebar> pseudokeys were broken for some reason
" map s <sel>
" map S <sidebar>
map x <xtra>
map X <S-xtra>
map , <leader>
map v <browser>
map a <ext>
map <A-enter> <option>
map y <yank>

" List mappings by prefix (using commandline completion)
map <leader>hka :map <Lt>ext
map <leader>hkc :map <Lt>site
map <leader>hkg :map g
map <leader>hke :map <Lt>goto
map <leader>hks :map s
map <leader>hkx :map <Lt>xtra
map <leader>hkX :map <Lt>S-xtra
map <leader>hkv :map <Lt>browser
map <leader>hky :map <Lt>yank
map <leader>hk, :map <Lt>leader
map <leader>hk<C-x> :map <Lt>C-x
map <leader>hk<A-enter> :map <Lt>option

map <site><C-h>    -description "(show bindings)" -js CommandExMode().open("map <site>")
map <leader><C-h>  -description "(show bindings)" -js CommandExMode().open("map <leader>")
map <goto><C-h>    -description "(show bindings)" -js CommandExMode().open("map <goto>")
map <ext><C-h>     -description "(show bindings)" -js CommandExMode().open("map <ext>")
map <xtra><C-h>    -description "(show bindings)" -js CommandExMode().open("map <xtra>")
map <S-xtra><C-h>  -description "(show bindings)" -js CommandExMode().open("map <S-xtra>")
map <browser><C-h> -description "(show bindings)" -js CommandExMode().open("map <browser>")
map <yank><C-h>    -description "(show bindings)" -js CommandExMode().open("map <yank>")
map <option><C-h>  -description "(show bindings)" -js CommandExMode().open("map <option>")
map <C-x><C-h>     -description "(show bindings)" -js CommandExMode().open("map <C-x>")
map g<C-h>         -description "(show bindings)" -js CommandExMode().open("map g")
map s<C-h>         -description "(show bindings)" -js CommandExMode().open("map s")
map z<C-h>         -description "(show bindings)" -js CommandExMode().open("map z")

" -------------------------------------------------------------------------------
" ,------------------,
" | Other Pseudokeys |
" '------------------'

map <link_desc> ;Y

" -----------------------------------------------------------------------------
" ,--------------------------,
" | Normal mode key bindings |
" '--------------------------'

" PREFIX KEYS: c e s ss x , \ <C-x>
" c : site-specific bindings
" x : global bindings
" s : selection bindings
" ss : sidebar bindings
" <C-x> : GUI commands, etc.
" y : yank

" REPLACE DEFAULT BINDINGS:
" free C-h, use C-,, C-. to replace h, l
map -modes normal -b <C-,> <Left>
map -modes normal -b <C-.> <Right>
" use h, l for tab changing
"   note: <C-n>,gT are opposite motions. gt with arg goes to arg'th tab
map -modes normal -b h gT
map -modes normal -b l <C-n>
" <C-n> and <C-p> for down and up
map -modes normal -b <C-n> <C-v><down>
map -modes normal -b <C-p> <C-v><up>
" replace h, l with A-k, A-j for horizontal movement
map -modes normal -b <C-A-h> h
map -modes normal -b <C-A-l> l
" A-k/j and A-,/. can be reused...
map -modes normal -b <A-k> h
map -modes normal -b <A-j> l
map -modes normal -b <A-,> h
map -modes normal -b <A-.> l
" free C-N, C-P bindings for tab movement
map <C-S-P> <Nop>
map <C-S-N> <Nop>
" focus frame
map -modes normal -b vf ;F

" bind gs as :viewpagesource, free gf for g;b
map gf <Nop>
map gs -ex viewpagesource
" replace builtin <C-a> and <C-x> bindings (inrease/decrease URL by 1)
map <C-a> <Nop>
map -modes normal -b <A-=> <C-a>
map -modes normal -b <A--> <C-x>
" passthrough
map -b \\ <C-v>

" Paste and Search
" swap p and P
map -modes normal -b p P
map -modes normal -b P p

" disable <C-q> for quitting
map -modes main <C-q> <Nop>

" Passthrough
map -b <ext>a <C-v>
map -b <C-a> <C-z>
" Repeat last ex command
map -modes normal -b g. @:

" Save "
map <C-x><C-s>
\ -modes normal,insert,visual,command-line
\ -js saveDocument(getBrowser().selectedBrowser.contentDocument);
map <C-x><C-S-S>
\ -modes normal,insert,visual,command-line
\ -js saveDocument(getBrowser().selectedBrowser.contentDocument,
\                  {mafAskSaveArchive: true});
" Close browser "
map <C-x><C-c> -description "Quit browser" -ex quitall
" Copying
map -modes normal -b <A-w> Y
" A-Esc: Pass-through Escape
map -b <A-Esc> <C-v><Esc>
" C-w closes tab; if last in window closes window.
map <C-w> :q<CR>
" movement
map -modes normal -b <C-S-D> <C-u>
map -modes normal -b J <C-d>
map -modes normal -b K <C-u>
" Restart with C-x C-x:
map <C-x><C-x> -ex restart
" reload .pentadactylrc
map <browser>r -ex rc
" edit .pentadactylrc
map <browser>R -ex rce
" hide messages
map <C-x>; :<Esc>
" hide and clear messages
map <C-x>: :messclear<Cr>
" redraw screen
map gR -ex redraw
" (Re-)Maximize window (when Pentadactyl pushes command line offscreen)
map <browser>x -js window.restore(); window.maximize();
" select all
map -modes normal -b <C-x>h iGvggy
" second input area
map -modes normal -b <xtra>gi 2gi
" open in google chrome "
map <xtra>c -ex ochrome
map <xtra>C :ochromeurl
" open in firefox "
map <xtra>f -ex ofox
" open in qutebrowser "
map <xtra>q -ex oqute
" open local file with xdg-open
map <xtra>x :xopen<Space>
" open file in Emacs
map <xtra>e -ex openFileInEmacs
" open page in EWW
map <xtra>E -ex openUrlInEWW
" open directory in Dired
map <xtra>d -ex openDirectoryInDired
" jumplist
map <C-j> -ex jumps
" password hasher
map <xtra>P -ex pwhash
" password hasher: hash site domain
map <xtra>p -ex pwhashsite
" open www.packtpub.com/packt/offers/free-learning in google chrome "
map <xtra>op -ex ochromeurl "https://www.packtpub.com/packt/offers/free-learning"
" Google Translate handwritten input
map <goto>jk -ex tabopen https://translate.google.com.au/#ja/en/
" word highlight
map <leader>uh -ex emenu Tools.Greasemonkey.word highlight
" TeX The World
map <leader>ut -ex emenu Tools.Greasemonkey.TeX the world
" PageZipper
" activate pagezipper bookmark (keyword pz)
map <A-p> :open pz<CR>
" Remove selector. "
map <leader>nn :removeselector<Space>
" Remove cruft. "
map <leader>nr -ex removecruft
" Remove images "
map <leader>ni -ex removeimages
" Enable Right-click "
map <leader>vr -js content.document.onmousedown=null;content.document.onclick=null;content.document.oncontextmenu=null

" -------------------------------------------------------------------------------
" ,-----------------,
" | Japanese Search |
" '-----------------'
" Popjisyo SearchJapanese hints "
map <leader>jp -ex popjisyo
" Jisho.org "
map <leader>j<C-h> -description "(show bindings)" -js CommandExMode().open("map <leader>j")
map <leader>jm :cbjishomultisearch<Space>
map <leader>jj -count -js jishoSearch(dactyl.clipboardRead(), count?'here':'tab');
map <leader>jk -count -js jishoKanjiSearch(dactyl.clipboardRead(), count?'here':'tab');
map <leader>jf -count -js window._dactylargs=[jishoKanjiSearch]; hints.show('カ');

" ,---------------------,
" | <leader>t - toggles |
" '---------------------'
map <leader>t<C-h> -js CommandExMode().open("map <Leader>t")
map <leader>ta -description "Toggle User Agent Override" -ex actoggleuaoverride
map <leader>te -description "Toggle Edit Content" -ex editcontent
map <leader>tj -description "Toggle Javascript" -ex actogglejs
map <leader>ts -description "Toggle HTTPS" -js toggleHTTPS()
map <leader>tu -description "Toggle User Mode" -ex set usermode!
map <leader>tv -description "Toggle Visited Links Styling" -ex styletoggle -name visitedlinks
map <leader>tw -description "Toggle Wayback Machine" -ex waybacktoggle

" ,-------------------------,
" | <leader>T - GUI toggles |
" '-------------------------'
map <leader>T<C-h> -js CommandExMode().open("map <Leader>T")
" <A-Up>:     show the navigation and bookmarks toolbars:
" <A-Down>:   hide the navigation and bookmarks toolbars:
" <leader>Ta: toggle the navigation and bookmarks toolbars:
map <A-Up> -ex set guioptions-=TB | set showtabline=never
map <A-Down> -ex set guioptions+=TB | set showtabline=always
map <leader>Ta -ex set guioptions!=TB | set showtabline!=always,never
" <leader>T<C-m|t|e|b|d|s|o>: toggle toolbars/menubars
"(  menu|tab|navigation|bookmark|web-developer toolbar )
map <leader>Tm -ex set guioptions!=m
map <leader>Tt -ex set showtabline!=always,never
map <leader>Te -ex set guioptions!=T
map <leader>Tb -ex set guioptions!=B
map <leader>Ts -ex set guioptions!=s
map <leader>To -ex toolbartoggle Add-on Bar
map <leader>Td -ex toolbartoggle Web Developer Toolbar

" ,-----------------,
" | Manipulate Page |
" '-----------------'
map <leader>ms -js openHTML(getSelectionHtml(), 'tab');
map <leader>mS -js openHTML(getSelectionHtml(), 'here');

" ,----------------------, ,-----------,
" | Web Sites & Web Apps | | <leader>a |
" '----------------------' '-----------'
map <leader>a<C-h> -js CommandExMode().open("map <leader>a")
" Weather
map <leader>aw -count -ex js openInNewOrCurrentTab('http://www.bom.gov.au/nsw/forecasts/lismore.shtml')(<count>)
" Banking
map <leader>ab -count -ex js openInNewOrCurrentTab(user.mybankurl)(<count>);

" Keepvid "
command! keepvid -js
    \ s=content.document.createElement('script');
    \ s.src="http://keepvid.com/js/bm.js";
    \ content.document.body.appendChild(s);

" ,------------,
" | Conversion |
" '------------'
map <leader>c<C-h> -js CommandExMode().open("map <leader>c")
map -description "Convert inches to centimeters" <leader>xci -js hints.show("”");

command! usd2aud
    \ -nargs *
    \ -description "convert $US prices to $AU"
    \ -js utils.message(args.map(USDtoAUD).join(" "));
command! sumusd2aud
    \ -nargs *
    \ -description "Sum $US prices and convert to $AU"
    \ -js utils.message(USDtoAUD(args.reduce((a,b)=>parseFloat(a)+parseFloat(b))));

command! sum -nargs * -js utils.message(args.reduce((a,b)=>parseFloat(a)+parseFloat(b)));

" ,-------------,
" | Translation |
" '-------------'
" Translation Prefix: <xtra>t "
map <xtra>t<C-h> -js CommandExMode().open("map <xtra>t")

js <<EOF

function googleTranslateText(s, from='auto', to='en', where=dactyl.NEW_TAB) {
    dactyl.open(`https://translate.google.com.au/#${from}/${to}/${s}`, where);
}

function googleTranslateUrl(url, from='auto', to='en', where=dactyl.NEW_TAB) {
    dactyl.open(`http://translate.google.com/translate?hl=&sl=${from}&tl=${to}&u=${url}`, where);
}

function googleFetchTranslation(s) {
    var newtab = gBrowser.addTab(`https://translate.google.com.au/#auto/en/${s}`);
    var fromtab = tabs.getTab();
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        window.setTimeout(()=>{
            var translation = content.document.getElementById('gt-res-content').innerText;
            utils.cbWrite(translation);
            gBrowser.selectedTab = fromtab;
            newtab.remove();
        }, 1000);
    });
}

function googleInsertTranslationForElement(elt) {
    var s = elt.innerText;
    var newtab = gBrowser.addTab(`https://translate.google.com.au/#auto/en/${s}`);
    var fromtab = tabs.getTab();
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        window.setTimeout(()=>{
            var translation = content.document.getElementById('gt-res-content').innerText;
            gBrowser.selectedTab = fromtab;
            newtab.remove();
            var transDiv = content.document.createElement('div');
            transDiv.style = "background: #FFC; border: solid #822 1px;";
            transDiv.innerText = translation;
            elt.parentNode.insertBefore(transDiv, elt);
        }, 1000);
    });
}
window.googleInsertTranslationForElement = googleInsertTranslationForElement;

function bingAddWebWidget() {
    var d=content.document.createElement('div');
    d.id='MicrosoftTranslatorWidget';
    d.class='Dark';
    d.style='color:white;background-color:#555555';
    content.document.body.insertBefore(d, content.document.body.firstChild);
    var s=content.document.createElement('script');
    s.type='text/javascript';
    code="setTimeout(function(){{var s=document.createElement('script');s.type='text/javascript';s.charset='UTF-8';s.src=((location && location.href && location.href.indexOf('https') == 0)?'https://ssl.microsofttranslator.com':'http://www.microsofttranslator.com')+'/ajax/v3/WidgetV3.ashx?siteData=ueOIGRSKkd965FeEGM5JtQ**&ctf=False&ui=true&settings=Manual&from=';var p=document.getElementsByTagName('head')[0]||document.documentElement;p.insertBefore(s,p.firstChild); }},0)";
    s.innerText = code;
    content.document.body.insertBefore(s, content.document.body.firstChild);
}

// WHERE parameter can be 'here', 'tab', 'background-tab' or 'window'
// which are the values of the variables dactyl.CURRENT_TAB etc

function bingTranslateUrl(url, from='auto', to='en', where=dactyl.NEW_TAB) {
    dactyl.open(`http://www.microsofttranslator.com/bv.aspx?from=${from}&to=${to}&a=${url}`, where);
}

function bingTranslateText(s, from='auto', to='en', where=dactyl.NEW_TAB) {
    dactyl.open(`http://www.bing.com/translator/?from=${from}&to=${to}&text=${s}`, where);
}

EOF

command! googletranslatetext
    \ -description "googletranslatetext TEXT [FROM] [TO] [WHERE]"
    \ -nargs=+
    \ -js googleTranslateText(args[0], args[1]||undefined, args[2]||undefined, args[3]||undefined);
command! googletranslateurl
    \ -description "googletranslateurl URL [FROM] [TO] [WHERE]"
    \ -nargs=+
    \ -js googleTranslateUrl(args[0], args[1]||undefined, args[2]||undefined, args[3]||undefined);
command! googletranslatepage
    \ -description "Google translate page (!: in new tab)"
    \ -bang
    \ -js googleTranslateUrl(buffer.URL, undefined, undefined, bang?'tab':'here');
command! googletranslateselection
    \ -description "Google translate selection"
    \ -nargs=*
    \ -bang
    \ -js googleTranslateText(dactyl.clipboardRead(), args[0]||undefined, args[1]||undefined);
command! googletranslatetextcb
    \ -description "Google translate text: store translation in clipboard"
    \ -nargs=+
    \ -js googleFetchTranslation(args.join(" "));

command! bingwebwidget -js bingAddWebWidget();
command! bingtranslatetext
    \ -description "bingtranslatetext TEXT [FROM] [TO] [WHERE]"
    \ -nargs=+
    \ -js bingTranslateText(args[0], args[1]||undefined, args[2]||undefined, args[3]||undefined);
command! bingtranslateurl
    \ -description "bingtranslateurl URL [FROM] [TO] [WHERE]"
    \ -nargs=+
    \ -js bingTranslateUrl(args[0], args[1]||undefined, args[2]||undefined, args[3]||undefined);
command! bingtranslatepage
    \ -description "Bing translate page (!: in new tab)"
    \ -bang
    \ -js bingTranslateUrl(buffer.URL, undefined, undefined, bang?'tab':'here');
command! trans
    \ -description "Google translate text"
    \ -nargs=+
    \ -js googleTranslateText(args.join(" "));


map -description "Bing translate page" <xtra>tt -ex bingtranslatepage
map -description "Google translate page" <xtra>tg -ex googletranslatepage
map -description "Google translate text" <xtra>tx :trans<Space>
map -description "Google translate text to clipboard" <xtra>tc :googletranslatetextcb<Space>
map -description "Google translate selection" <xtra>tv -ex googletranslateselection
map -description "Google translate text (HINTS)" <xtra>tf -js hints.show("ţ");
map -description "Google translate element (HINTS)" <xtra>td -js hints.show("Ţ");
map -description "Google append translation (HINTS)" <xtra>ta -js hints.show("ʈ");
map -description "Google append translation (div) (HINTS)" <xtra>tb -js hints.show("Ʈ");


" ,------,
" | Yank |
" '------'
map -b -description "Yank buffer URL"
    \ <yank>y y
map <yank>t -description "Yank page title"
    \ -js utils.cbWrite(buffer.title)
map <yank>l -description "Yank link reference (page title and url)"
    \ -js utils.cbWrite(`${buffer.title}: ${buffer.URL}`)
map <yank>m -description "Yank markdown link"
    \ -js utils.cbWrite(`[${buffer.title}](${buffer.URL})`)
map <yank>L -description "Yank link reference (page title and heading)"
    \ -js utils.cbWrite(`${content.document.querySelector('h1').innerText}: ${buffer.URL}`)
map <yank>M -description "Yank markdown link (using H1 heading as title)"
    \ -js utils.cbWrite(`[${content.document.querySelector('h1').innerText}](${buffer.URL})`)
map <yank>u -description "Yank buffer URL (unencoded)"
    \ -ex yanktrueURL
map <yank>d -description "Yank page domain"
    \ -js utils.cbWrite(buffer.URL.match(/:\/+([^/]+)/)[1])
map <yank>f -description "Yank filename or buffer URL (unencoded)"
    \ -ex yankfilenameorURL
map <yank>x -description "Yank page text"
    \ -js utils.cbWrite(content.document.body.innerText);
map <yank>h -description "Yank page heading (<H1>)"
    \ -js utils.cbWrite(content.document.querySelector('h1').innerText);
map <yank>p -description "Yank paragraph (HINTS)"
    \ -js hints.show("ÿ");
map <yank>a -description "Yank text area #N contents"
    \ :yanktextarea<Space>
map <yank>c -description "Yank a table's CSV contents (use after :table2csv)."
    \ :yanktablecsvarea<Space>
map <yank>s -description "Yank element content by selector"
    \ :yankselectorcontent<Space>
map <yank>k -description "Yank kanji (HINTS)" -js hints.show("字");

" Yank commands "
command! yanktrueURL
    \ -description "Yank the uncoded URL of the current buffer"
    \ -js var text=decodeURIComponent(buffer.URL);
    \     utils.cbWrite(text);
command! yankfilenameorURL
    \ -description "Yank the unencoded filename or the hierarchical part of the current buffer's URL. Removes queries and fragments."
    \ -js var text=decodeURIComponent(buffer.URL.replace(/^file:\/\//,'').replace(/[?#].*/,''));
    \     utils.cbWrite(text);
command! yanktextarea
    \ -description "Yank the contents of textarea N."
    \ -nargs=1
    \ -js yankTextarea(Number(args[0]));

" yankselectorcontent - note: if second arg contains quotes, they must be escaped (or the whole argument quoted) "
command! yankselectorcontent
    \ -description "Yank the contents of an element by selector."
    \ -nargs=+
    \ -js yankSelectorContent(args[0], evalStringOrFunction(args[1])||'innerText');

js <<EOF
function yankTextarea(n) {
    var contents = getTextArea(n);
    utils.cbWriteWithMessageLimit(contents);
}
EOF

" ,------,
" | Zoom |
" '------'
set! zoom.minPercent=10
set! zoom.maxPercent=1000
set! toolkit.zoomManager.zoomValues=.1,.2,.3,.5,.67,.8,.9,1,1.1,1.2,1.33,1.5,1.7,2,2.4,3,4,5,6,7,8,9

" note: text and full zoom can't be used independently. Using one cancels the other
map = +
map <C-=> zI
map <C--> zO
map z; -description "Toggle Text/Full Zoom" -js zoomToggle();

js <<EOF
function zoomToggle() {
    ZoomManager.toggleZoom();
    utils.message(`Full Zoom: ${ZoomManager.useFullZoom ? 'ON':'OFF'}`);
}
EOF

" ,----------------------,
" | Option Key Sequences |
" '----------------------'

" ,--------,
" | Search |
" '--------'
map <findbarOpenFocus> <C-v><C-f>
js <<EOF
findbarToggle = function() {
    if (gFindBar.hidden)
        dactyl.execute("normal <findbarOpenFocus>");
    else
        gFindBar.close();
}
EOF
" clear the search term highlighting
map <C-/> -ex noh
" Regex search
map -modes normal -b g/ /\r
map -modes normal -b g? ?\r
" Link search
map -modes normal -b s/ /\l
map -modes normal -b s? ?\l
" Search from top of page
map -modes normal -b <C-x>/ gg/
" Search for word starting with...
map -modes normal -b <xtra>/ /\r\w*<Left><Left><left>
" Search for word containing...
map <S-xtra>/ /\r\w*\w*<Left><Left><left>
" Firefox find box
map <browser>/ -js findbarToggle();
map -mode base <A-/> -js findbarToggle();
" C-' Firefox link search
map -modes normal -b "<C-'>" <C-v>'

" -----------------------------------------------------------------------------
" ,---------------------------------------,  MAP COMMANDS.
" | Command mode and insert mode bindings |  cmap: command-line mode
" '---------------------------------------'  imap: insert mode

" Useful pseudo-keys
map -modes command-line -b <copy-command-to-cb> <A-a><C-v><C-c>
map -modes command-line -b <cut-command-to-cb> <A-a><C-v><C-x>
map -modes command-line -b <paste> <C-v><C-v>
map -modes command-line -b <copy> <C-v><C-c>
map -modes command-line -b <cut> <C-v><C-x>
map -modes command-line -b <forward-word> <C-Right>
map -modes command-line -b <backward-word> <C-Left>
map -modes command-line -b <insert-after-command> <Home><C-Right><Space>

map -modes command-line <A-b> <backward-word>
map -modes command-line <A-f> <forward-word>

" select all
map -modes command-line -b <C-x>h <Home><S-End><C-v><C-c>
" use c_<C-,>, c_<C-.> for cycling WildMode completion
cmap -b <C-,> <Tab>
cmap -b <C-.> <S-Tab>
" use c_<A-/> for AltWildMode completion
map -modes command-line -b <A-/> <A-Tab>
map -modes command-line -b <A-S-/> <A-S-Tab>

map -modes command-line,insert -b <C-y> <C-v><C-v>
map -modes command-line,insert -b <C-p> <Up>
map -modes command-line,insert -b <C-n> <Down>
map -modes command-line,insert -b <C-S-P> <S-Up>
map -modes command-line,insert -b <C-S-N> <S-Down>
map -modes command-line,insert -b <C-f> <Right>
map -modes command-line,insert -b <C-b> <Left>
map -modes command-line,insert -b <C-g> <C-u><Escape>

" repeat last search with a new keyword:
"   uses clipboard and javascript to do text processing, since <C-Del>, <C-BS>, <C-S-Left>, etc aren't working in map commands
"   TODO: remove dependence on clipboard and ad-hoc pseudo-keyword (either by getting delete-word keys working in `map`, or finding
"         javascript commands for retrieving command history and entering text in command line)
map <cb-change-first-arg> -js var cmd=dactyl.clipboardRead(0).split(/\s+/); dactyl.clipboardWrite(cmd[0]+' '+cmd.slice(2).join(' '));
map -modes command-line <cb-change-first-arg> -js var cmd=dactyl.clipboardRead(0).split(/\s+/); dactyl.clipboardWrite(cmd[0]+' '+cmd.slice(2).join(' '));
map -modes command-line <C-r> <up><A-a><C-v><C-c><down><cb-change-first-arg><C-v><C-v><Home><C-Right><Space>
map -modes command-line <change-first-arg> <A-a><C-v><C-x><cb-change-first-arg><C-v><C-v><Home><C-Right><Space>
map -modes command-line <C-s> <A-a><C-v><C-x><cb-change-first-arg><C-v><C-v><Home><C-Right><Space>
" map -modes command-line <C-s> <change-first-arg>

" SPACES (TODO)
" insert space with C-SPACE (When typing search keywords in
" a japanese IME, double-width spaces don't work. If F10
" won't convert spaces to single width, C-SPACE can be used.
map -modes command-line,insert -b <C-SPACE> <SPACE>
" TODO: Work out how to get current textarea. See insertAtCaret()
" nbsp
map -modes command-line,insert <C-S-s> -js alert("not implemented");
" em-space
" FIXME: Doesn't work.
"map -modes insert -b <C-s> \u2003
"execute "map -modes insert -b <C-s> \u2003"

execute "map -modes command-line,insert -b <C-m> " + user.myemail
execute "map -modes command-line,insert -b <C-S-m> " + user.myemail2
execute "map -modes command-line,insert -b <C-S-I> " + user.myname
execute "map -modes command-line,insert -b <C-S-T> " + user.myfirstname
execute "map -modes command-line,insert -b <C-S-L> " + user.mylastname
execute "map -modes command-line,insert -b <C-S-A> " + user.mystreet
execute "map -modes command-line,insert -b <C-S-S> " + user.mysuburb
execute "map -modes command-line,insert -b <C-S-D> " + user.myaddress
execute "map -modes command-line,insert -b <C-S-P> " + user.myphone
execute "map -modes command-line,insert -b <C-S-Z> " + user.mypostcode
execute "map -modes command-line,insert -b <C-S-Q> " + user.mymasterpw
execute "map -modes command-line,insert -b <C-S-C> " + user.mycreditcard
map -modes insert <C-S-W> <pwhashsite>

" ,---------------------------------------,
" | Normal mode bindings for Command-line |
" '---------------------------------------'
" Search clipboard contents using search keyword
map -b <leader>s :<C-v><C-v><Home>tabopen<Space><Space><Left>
map -b <leader>S :<C-v><C-v><Home>open<Space><Space><Left>
" Repeat search just entered with keyword changed
map <leader>r :<C-r>
" Repeat default just entered search with keyword
map <leader>R :<up><Home><forward-word><Space>

" ,-------------------,
" | Command-line only |
" '-------------------'
" regex search: word boundary
cmap <C-1> (?= |^)
cmap <C-2> (?= |$)

" -----------------------------------------------------------------------------
" ,--------------------------------,  MAP COMMANDS.
" | Caret and visual mode bindings |  vmap: visual mode
" '--------------------------------'

" Caret and Visual mode:
" C-e end of line, C-a start of line.
" C-y scroll down, C-Y scroll up.
map -modes caret,visual -b <C-a> 0
map -modes caret,visual -b <C-e> $
map -modes caret,visual -b <C-S-Y> <C-e>

" select from caret mode "
map -modes caret H <S-left>
map -modes caret L <S-right>
map -modes caret J <S-down>
map -modes caret K <S-up>

" to search and select:
" 1. press / and type search term
" 2. when satisfied, press enter
" 3. press C-/ to clear highlighting of other matches
" 4. press i to enter insert mode
" 5. press <left> to move to start of match
" 6. press v to enter visual mode
" 7. use visual mode keys j,k,h,l,C-a,C-e, etc to extend selection

" -----------------------------------------------------------------------------
" ,--------------------,
" | Menu mode bindings |
" '--------------------'

map -modes menu -b <C-n> <Down>
map -modes menu -b <C-p> <Up>
map -modes menu -b <C-j> <Down>
map -modes menu -b <C-k> <Up>
map -modes menu -b <C-h> <Left>
map -modes menu -b <C-l> <Right>

" -----------------------------------------------------------------------------
" ,--------------------------------------,
" | Text-edit and operator mode bindings |
" '--------------------------------------'

map -modes text-edit,operator -b <C-a> ^
map -modes text-edit,operator -b <C-e> $
map -modes text-edit,operator -b <A-=> <C-a>
map -modes text-edit,operator -b <A--> <C-x>


" -----------------------------------------------------------------------------
" ,----------------------------,
" | Pass-through mode bindings |
" '----------------------------'

map -modes pass-through -b <A-;> :normal "<Esc><C-^>"<CR>


" -----------------------------------------------------------------------------
" ,----------,
" | Commands |
" '----------'

command! undob -description "Undo tab in background" -js undob()
command! backt -description "Create adjacent duplicate tab and go back in the browser history" -js backt()
command! forwardt -description "Create adjacent duplicate tab and go forward in the browser history" -js forwardt()
command! tabdupa -description "Create adjacent duplicate tab" -js tabCopyLeftBg()

command! pasteall -description "open all links in clipboard" -js openAllLinksInCB();
map gp -ex pasteall

command! viewpagesource -description "Toggle viewing page / viewing page source" -js viewPageSource();

command! rc source ~/.pentadactylrc
"command! rce viewsource! file:/home/troy/.pentadactylrc
command! rce !emacsclient ~/.pentadactylrc 2> /dev/null

command! loadutils runtime! utils.js | js var utils = dactyl.utils.getPlugin("utils");

command! showsource -nargs=1 -js (alert(self[args[0]].toString()))

" enable jQuery in content document
command! jQueryLoad -js <<EOF
    var scripttag = content.document.createElement('script');
    scripttag.type = 'text/javascript';
    scripttag.async = true;
    scripttag.src = 'https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js';
    var parent = ( content.document.getElementsByTagName('head') ||
                    content.document.getElementsByTagName('body') )[0];
    parent.appendChild(scripttag);
EOF
" Stop page from intercepting key events:
command! nointercept -js document.addEventListener('keydown', function(e) { e.stopImmediatePropagation(); return false;}, true);

" open file with xdg-open
" FIXME: issue with maff files with spaces in directory (not name)
command! xopen -nargs=1 -complete=file !xdg-open <args>

" Open in Google Chrome "
command! ochrome :exec `!google-chrome --disable-infobars "${buffer.URL}" &`
command! ochromeurl -nargs 1 :exec `!google-chrome --disable-infobars "<args>" &`
" Open in Firefox "
command! ofox :exec `!/opt/firefox/firefox -new-tab "${buffer.URL}" &`
" Open in Qutebrowser "
command! oqute :exec `!qutebrowser "${buffer.URL}" &`

" Show all marks (quickmarks and url/local marks)
command! allmarks,amarks,am :qmarks | marks

" Set/unset autoplay
command! autoplayon,autop :set! media.autoplay.enabled=true
command! autoplayoff,noautop :set! media.autoplay.enabled=false

" Troubleshooting information
command! info :tabopen about:support<CR>

" Unicode code of character
command! uni
   \ -js dactyl.echo(
   \     dactyl.clipboardRead().charCodeAt(0).toString() +
   \     "\tU+" +
   \     dactyl.clipboardRead().charCodeAt(0).toString(16));

command! yanktitle js dactyl.clipboardWrite(buffer.title)

" Text encodings
"command! encuni :execute "emenu View.Text Encoding.Unicode"
"command! encjis :execute "emenu View.Text Encoding.Japanese (Shift_JIS)"
command! encuni :emenu View.Text Encoding.Unicode
command! encjis :emenu View.Text Encoding.Japanese (Shift_JIS)
command! enceuc :emenu View.Text Encoding.Japanese (EUC-JP)

" Search commands "
command! jkdamage -nargs=1 -js searchKanjiDamage(args[0]);
command! prefsuffsearch
    \ -description "Search for prefix/suffix on macroevolution.net"
    \ -nargs=1
    \ -js prefsuffSearch(args[0]);

" run shell command in terminal
command! -nargs=1 runinterminal -js runInZSH(args[0]);

" rubular
command! rubular -nargs=+ -js rubular(args[0], args[1]);

" Open in Emacs "
command! openDirectoryInDired
    \ -description "Open the current file's directory in Dired."
    \ -js var file = decodeURIComponent(buffer.URL.replace(/^file:\/\//,'').replace(/[?#].*/,''));
    \     var dir = file.replace(/[^/]*$/,'');
    \     dactyl.execute(`!emacsclient -e '(dired "${dir}")'`);
command! openFileInEmacs
    \ -description "Open the current file for editing in Emacs."
    \ -js dactyl.execute('!emacsclient "' + getFilenameOrURL() + '"');
command! openUrlInEWW -description "Open in EWW in Emacsclient"
    \ -js dactyl.execute("!emacsclient -e '(eww "+'"'+buffer.URL+'")'+"'");


" Password Hasher "
command! pwhash
    \ -description "Open Password Hasher"
    \ -nargs=0
    \ -js pwHash();
command! pwhashgen
    \ -description "Generate short password from URL using Password Hasher"
    \ -nargs=1
    \ -js pwHashGen(args[0]);
command! pwhashsite
    \ -description "Generate short password from current site's URL using Password Hasher"
    \ -nargs=0
    \ -js var domain = decodeURIComponent(buffer.URL.replace(/^\w+:\/\//,'').replace(/\/.*/,'').replace(/www\./,'')); fromtab = tabs.getTab(); pwHashGen(domain, fromtab);
map -modes input <pwhashsite> -ex pwhashsite

" Page editing commands "
command! editcontent
    \ -description "Make content editable"
    \ -js elts = content.document.getElementsByTagName("*");
    \     for (i=0; i<elts.length; ++i)
    \         if (elts[i].hasAttribute("contentEditable") && elts[i].contentEditable === "true")
    \             elts[i].contentEditable = "false";
    \         else
    \             elts[i].contentEditable = "true";
command! setbodybyid
    \ -nargs=1
    \ -complete=javascript
    \ -js setBodyById(args[0]);
command! hidefooter -js toggleFooter();
command! removefooter -js removeSelectors('footer');
command! removeimages -js removeSelectors('img');
command! removeselector -nargs=* -js removeSelectors.call(null, ...args);
command! removefirstselector  -nargs=1 -js removeFirstSelector.call(null, args[0]);
command! removecruft -js removeCruft();
command! isolateselector -nargs=* -js isolateSelectors.call(null, ...args);
command! clickselector -nargs=1 -js clickSelector(content.document.querySelector(args[0]));
command! hideselector  -nargs=* -js hideSelectors.call(null, ...args);
command! hidefirstselector  -nargs=1 -js hideFirstSelector.call(null, args[0]);

" Page info commands "
command! imgsalttotitle
    \ -description "Add ALT text to TITLE for all images on page"
    \ -js imgsAddAltTextToTitle();

command! wget -nargs=* -js wget(args[0], args[1], args[2]);
command! wgetm -nargs=* -js wgetm(args[0], args[1], args[2]);
command! wget1 -nargs=* -js wget1(args[0], args[1], args[2]);

" Exchange Rate Info "
" command! updateUSDAUDexchange -js updateUSDAUDexchange();
command! updateUSDAUDexchange -js fetch("http://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20yahoo.finance.xchange%20where%20pair%20in%20%28%22USDAUD%22%29&env=store://datatables.org/alltableswithkeys&format=json").then(response=>response.json()).then(obj => window.AUDperUSD=(parseFloat(obj.query.results.rate.Ask)+parseFloat(obj.query.results.rate.Bid)/2));

" =============================================================================
"                                       ______
"                                      |      |
"                                      | TABS |
"                                      |______|
"
" -----------------------------------------------------------------------------

" <browser> prefix: "
" k    :  bookmark "
" r R  :  pentadactylrc "
" s    :  styling "
" x    :  restore window "

" move tabs "
map <browser>m<C-h> -description "Show bindings" -js CommandExMode().open("map <browser>m")
map <browser>mm :tabmove<SPACE>
map <browser>mn :moventabs<Space>
map <browser>mr -arg -ex movealltabsrightofn <arg>
map <browser>m> -count -ex movetabstoend <count>
map <browser>m.  -arg -count -ex movelastntabs <count> <arg>
map <browser>m\' -arg -count -ex moventabs <count> <arg>
map <browser>ma -description "Move tab after alternate" -js moveTabAfterAlternate();

" tile tabs "
map <browser>t -description "View Tiled" -js tileTabs.Tile();

"close tabs"
map <browser>c<C-h> -description "Show bindings" -js CommandExMode().open("map <browser>c")
" close other tabs "
map <browser>1        -description "Close all other tabs"           -ex tabonly
map <browser><        -description "Close tabs to left"             -ex closetabstoleft
map <browser>>        -description "Close tabs to right"            -ex closetabstoright
map <browser>cr       -description "Close tab range"                :tc<SPACE>
map <browser>cb       -description "Close tab from list"            :bdelete<SPACE>
" remove tabs "
map <browser>cc       -description "Close tabs matching REGEX"      :tabremoveregex<Space>""<C-b>
map <browser>c<Space> -description "Close tabs satisfying EXPR"     :tabremove<Space><C-b>
" filter tabs "
map <browser>co       -description "Close tabs not matching REGEX"  :tabfilterregex<Space>""<C-b>
map <browser>cf       -description "Close tabs not satisfying EXPR" :tabfilter<Space>""<C-b>

map gm :tabmove!<SPACE>
map <C-S-P> -ex tabmove! -1
map <C-S-N> -ex tabmove! +1
map <C-h> -ex tabmove! -1
map <C-l> -ex tabmove! +1
map <C-Left> -ex tabmove! -1
map <C-Right> -ex tabmove! +1
map <C-\<> -ex tabmove! 1
map <C-\>> -ex tabmove! $
map g\> -ex tabmove! $
map <A-S-1> -ex tabmove! 1
map <A-S-2> -ex tabmove! 2
map <A-S-3> -ex tabmove! 3
map <A-S-4> -ex tabmove! 4
map <A-S-5> -ex tabmove! 5
map <A-S-6> -ex tabmove! 6
map <A-S-7> -ex tabmove! 7
map <A-S-8> -ex tabmove! 8
map <A-S-9> -ex tabmove! $
" close tabs to right (inclusive) "
map <C-k> <browser>>d
map <C-S-K> <browser><d
" undo recent closed tab from list
map U :undo<SPACE>
" Select buffer:  b  (cycle with gb, gB)
map -b \< g0
map -b \> g$
" switch to alternate (previously selected buffer): A-;
map -modes command,embed -b <A-;> <C-^>
map -modes input -b <A-;> <Esc><C-^>
" delete and switch to alternate
map -modes command,embed -b <A-:> d<C-^>
map -modes input -b <A-:> <Esc>d<C-^>
" pin tabs "
map ! -ex pintab!
map <browser>p -ex pintab!


" ,------------------,
" | Buffer Selection |
" '------------------'

js <<EOF
function tabSelectLeft(n=1, wrap=true) {
    var currIdx = tabs.getTab()._tPos;
    targetIdx = currIdx - n;
    tabs.select(targetIdx);
    return targetIdx;
}
EOF

" -----------------------------------------------------------------------------
" ,--------------,
" | Pinning Tabs |
" '--------------'
command! unpinall tabdo unpintab
" toggle pinning of current tab

" -----------------------------------------------------------------------------
" ,--------------,
" | Closing Tabs |
" '--------------'

command! closetabstoleft
    \ -description "Close all tabs to the left of the current tab"
    \ -js
    \ var firstTab = tabs.getTab(0);
    \ var numToClose = tabs.getTab().dactylOrdinal - 1;
    \ tabs.remove(firstTab, numToClose);
command! closetabstoright
    \ -description "Close all tabs to the right of the current tab"
    \ -js
    \ tabIndex = tabs.getTab().dactylOrdinal - 1;
    \ var nextTabIndex = tabIndex + 1;
    \ var firstTab = tabs.getTab(nextTabIndex);
    \ var N = tabs.allTabs.length;
    \ var numToClose = N - nextTabIndex;
    \ tabs.remove(firstTab, numToClose);


" close tab range
" :tc START END : close tabs starting with START and ending with the tabs before END
" FIXME: doesn't work on last tab
command! tc
    \ -description "close tab range from START to END inclusive"
    \ -nargs=+
    \ -js if (args.length==2) { closeTabRange(args[0], args[1]); }
    \     else { closeTabsFromCurrentTo(args[0]); }

" filter tabs "
command! tabfilter
    \ -description "Close tabs that do not satisfy expression (t=tab, n0=init.ord, n=curr.ord, t.URL=url)"
    \ -nargs=1
    \ -js tabFilter(eval(`(t, n, n0)=>${args[0]};`));

command! tabremove
    \ -description "Close tabs that satisfy expression (t=tab, n0=init.ord, n=curr.ord, t.URL=url)"
    \ -nargs=1
    \ -js tabRemove(eval(`(t, n, n0)=>${args[0]};`));

command! tabremoveregex
    \ -description "Close tabs that satisfy regex"
    \ -nargs=1
    \ -js tabRemoveUrlRegex(RegExp(args[0]));

command! tabfilterregex
    \ -description "Close tabs that satisfy regex"
    \ -nargs=1
    \ -js tabFilterUrlRegex(RegExp(args[0]));

js <<EOF

var closeTabRange = function (firstOrd, endOrd) {
    if (firstOrd == '.') firstOrd = gBrowser.mCurrentTab.dactylOrdinal;  // current
    firstSpec = firstOrd - 1;
    if (endOrd === '$') endOrd = 0;  // last tab
    endOrd = tabNormalizeOrdinal(endOrd);
    endSpecInc = endOrd -1;        // ord  -> idx
    endSpecExc = endSpecInc +1;    // incl -> excl
    utils.closeTabsFromTo(firstSpec, endSpecExc, spec='');
}

var closeTabsFromCurrentTo = function (endOrd) {
    // start with next tab after current
    // ends with endOrd (closeTabRange endpoint is exclusive, but endOrd is spec+1)
    closeTabRange(gBrowser.mCurrentTab.dactylOrdinal, endOrd);
}

function tabIdxToOrd (idx) { return idx+1; }
function tabOrdToIdx (ord) { return ord-1; }

function tabNormalizeOrdinal (ord) {
    var N = tabs.allTabs.length;
    if (ord <= 0)
        return ord%N + Number(N) ;
    else
        return ord%N;
}

function tabURL(t) {
    "URL of t, where t is a tab or a tab index";
    if (Number.isInteger(t))
        t = tabs.getTab(t);
    return gBrowser.getBrowserForTab(t).contentDocument.URL;
}

function tabCount() { return tabs.allTabs.length; }
window.tabCount = tabCount;

function tabRemove(f) {
    // takes a function of 1 to 3 args (current tab, [current ordinal, [original ordinal]])
    var currentOrd = tabs.getTab().dactylOrdinal;
    var alltabs = Array.from(tabs.allTabs);
    var N_0 = alltabs.length;  // initial number of tabs
    var i, t;
    for (i=0; i<N_0; ++i) {
        tab_i = alltabs[i];
        t = tab_i.linkedBrowser.contentDocument;
        // alert(`${f}\n${f(t, i+1)}\n${i+1}\n${t.ord}`); // debug
        if (f(t, i+1, currentOrd)) tabs.remove(tab_i);
    }
    var N_closed = N_0 - tabCount();
    utils.message(`${N_closed} tabs closed`);
    return N_closed;
}

function tabFilter(f) {
    // takes a function of 1 to 3 args (current tab, [current ordinal, [original ordinal]])
    return tabRemove((t,n,n0)=>!f(t,n,n0));
}

" Note: :bdelete! does the same thing, but is much slower for some reason. "
function tabRemoveUrlRegex(regex) {
    return tabRemove((t)=>t.URL.match(regex));
}

function tabFilterUrlRegex(regex) {
    return tabFilter((t)=>t.URL.match(regex));
}

EOF

"
" -----------------------------------------------------------------------------
" ,-------------,
" | Moving Tabs |
" '-------------'
" alias tt=tabmove
command! tt -nargs=1 -bang
    \ -js dactyl.execute("tabmove" + (bang ? "! " : " ") + args[0]);
command! movealltabsrightofn -nargs ? -js moveAllTabsRightOfN(null, args[0]||1);
command! movetabstoend -nargs ? -js moveNTabs(tabs.getTab().dactylOrdinal, args[0]||1, "$");
command! movelastntabs -nargs + -js moveLastNTabs(args[0], args[1]||1);
command! moventabs -nargs + -js moveNTabs(tabs.getTab().dactylOrdinal, args[0], args[1]||1);

js <<EOF

moveNTabs = function (start, n, toOrd=1, wrap=false) {
    // we don't know which way tabs will move, so we can't predict how tab
    // numbers may change - thus, have to get references to each tab first
    if (toOrd == 0 || toOrd === "$") toOrd = tabCount();
    var targets = [];
    for (var i = 0; i < n; ++i)
        targets.push(tabs.getTab(start-1+i));
    if (toOrd < start) targets.reverse();
    for (var target of targets)
        tabs.move(target, toOrd, wrap);
}

moveLastNTabs = function (n, toOrd, wrap=false) {
    var N = tabs.allTabs.length;
    for (var i = 1; i <= n; ++i) {
        var target = tabs.getTab(N-1);
        tabs.move(target, toOrd, wrap)
    }
}

moveAllTabsRightOfN = function (fromOrd, toOrd, wrap=false) {
    fromOrd = fromOrd || tabs.getTab().dactylOrdinal;
    var N = tabs.allTabs.length;
    moveLastNTabs(N-fromOrd+1, toOrd, wrap);
}

function moveTabAfterAlternate() {
    var thisTab = tabs.getTab();
    var altOrd = tabs.alternate.dactylOrdinal;
    tabs.move(thisTab, altOrd+1);
}

EOF

" -----------------------------------------------------------------------------
" ,----------,
" | New Tabs |
" '----------'
" Duplicate tab, Back/Forward in New Tab
map C  -ex tabdupa
map gh -ex backt
map gl -ex forwardt
" Open multiple hints in background tabs
map -b gf g;b

" New tab
map gN  -js newTabPage();
map gON -ex open about:newtab
map <goto>N  -js newTabPage();
map <goto>eN -ex open about:newtab

js <<EOF
var newTabPage = function() {
    dactyl.open('about:newtab', {where:dactyl.NEW_TAB});
    dactyl.execute('normal f');
}
EOF

" -----------------------------------------------------------------------------
" ,------------,
" | Tab Groups |
" '------------'

command! tginit
    \ description "Initialize pentadactyl tabgroups commands"
    \ :runtime! tabgroups.penta

" ,-----------,
" | Tile Tabs |
" '-----------'

command! tabtile -description "View Tiled" -js tileTabs.Tile();


" =============================================================================
"       _______
"      |       |
"      |  GUI  |
"      |_______|

" -----------------------------------------------------------------------------
" ,----------,
" | Toolbars |
" '----------'

"map <C-x><C-f> -ex buftabs


" -------------------------------------------------------------------------------
" ,-------,
" | Menus |
" '-------'

js <<EOF
function showContextMenu(element, xpos, ypos, popuptype, anchoralignment, popupalignment) {
    var cmenu = document.getElementById('contentAreaContextMenu');
    cmenu.showPopup(
        element || document.body,
        xpos || 200,
        ypos || 200,
        anchoralignment,
        popupalignment
    );
}
EOF

map <C-f10> -js showContextMenu();

" -----------------------------------------------------------------------------
" ,---------,
" | Dialogs |
" '---------'

map <leader>hke -description "(Show bindings)" -js CommandExMode().open("map <goto>")
map <goto><C-h> -description "(Show bindings)" -js CommandExMode().open("map <goto>")

" downloads
map <goto>wd -ex dialog downloads
" about:config
command! ac
    \ -description "Open about:config in new window"
    \ :winopen about:config

" history (better dialog than `:dialog history`)
map <goto>wh -ex historydialog | ! wmctrl -F -r "Library" -b add,above,sticky
command! historydialog
    \ -description "Open history dialog"
    \ :feedkeys <C-S-H>

" bookmarks "
map <goto>wk -ex dialog bookmarks | normal <Tab>

map <goto>a -ex dialog addons
map -b <goto>c tabout:config<CR>
map -b <goto>ec oabout:config<CR>
map -b <goto>d tabout:downloads<CR><C-z>
map -b <goto>ed oabout:downloads<CR><C-z>
map -b <goto>k tchrome://browser/content/places/places.xul<CR>gi<C-z>
map -b <goto>ek ochrome://browser/content/places/places.xul<CR>gi<C-z>
map -b <goto>K tchrome://browser/content/bookmarks/bookmarksPanel.xul<CR>
map -b <goto>eK ochrome://browser/content/bookmarks/bookmarksPanel.xul<CR>
map -b <goto>l tchrome://passwordmgr/content/passwordManager.xul<CR>
map -b <goto>el ochrome://passwordmgr/content/passwordManager.xul<CR>
map -b <goto>p tabout:plugins<CR>
map -b <goto>ep oabout:plugins<CR>
map -b <goto>P tabout:preferences<CR><C-z>
map -b <goto>eP oabout:preferences<CR><C-z>
map -b <goto>r tabout:sessionrestore<CR>
map -b <goto>er oabout:sessionrestore<CR>
map -b <goto>s tabout:support<CR>
map -b <goto>es oabout:support<CR>
map -b <goto>s tabout:support<CR>
map -b <goto>es oabout:support<CR>
command! appcache
    \ -description "Open about:cache in new tab"
    \ :tabopen about:cache?storage=appcache

set passkeys+='chrome://browser/content/bookmarks/bookmarksPanel.xul':'<Up><Down><Left><Right>'
set passkeys+='chrome://browser/content/places/places.xul':'<Up><Down><Left><Right>'
set passkeys+='chrome://passwordmgr/content/passwordManager.xul':'<Up><Down><Left><Right>'

map <local-help> -ex tabopen ~/.pentadactyl/docs/help/index.html
map <goto>h <local-help>
" single-page pentadactyl help
map <local-help-all> -ex tabopen ~/.pentadactyl/docs/all.html
map <goto><f1> <local-help-all>

" Pentadactyl source
map <goto>D -ex tabopen resource://dactyl/

" Select:
map s;h :history! -max 30 -sort -date<SPACE>
map s;k :bmarks!  -max 30<SPACE>
map sj -ex jumps
map sa -ex addons
map sp :set<SPACE>
map sc :set!<SPACE>

" List/Search:
map sb -description "search buffers" :buffers -max 45<SPACE>
map sh -description "search history" :history -max 45 -sort -date<SPACE>
" Search bookmarks: sk ... (see Bookmarks section) "

" Menu access: "
map sm<C-h> -description "(Show bindings)" -js CommandExMode().open("map sm")
map smm :emenu<SPACE>
map smf :emenu File.
map sme :emenu Edit.
map smv :emenu View.
map smh :emenu History.
map smb :emenu Bookmarks.
map smt :emenu Tools.
map sm/ :emenu Help.

" -----------------------------------------------------------------------------
" ,--------------,
" | AiOS SideBar |
" '--------------'

" Manual sidebar selection with si, toggle with S
map si :sidebar<SPACE>
map sI -ex sbclose
" map <sidebar> -ex sidebar!
" Open/close AiOS, switch focus
"map <sidebar> :js aios_toggleSidebar()<CR><f6><f6>
" Open AiOS, switch focus and enter passthrough
"map sS :js aios_toggleSidebar()<CR><f6><f6><C-z>

" Sidebar selection:
" map sA -ex sidebar! Add-ons
" map <sidebar>A :sidebar! Add-ons<CR><f6><f6><C-z>
" map sM -ex sidebar! Bookmarks
" map <sidebar>M :sidebar! Bookmarks<CR><f6><f6><C-z>
" map sD -ex sidebar! Downloads
" map <sidebar>D :sidebar! Downloads<CR><f6><f6><C-z>
" map sH -ex sidebar! History
" map <sidebar>H :sidebar! History<CR><f6><f6><C-z>
" map sM -ex sidebar! Moji
" map <sidebar>M :sidebar! Moji<CR><f6><f6><C-z>
" map sO -ex sidebar! HeadingsMap
" map <sidebar>O :sidebar! HeadingsMap<CR><f6><f6><C-z>
" map sP -ex sidebar! Preferences
" map <sidebar>P :sidebar! Preferences<CR><f6><f6><C-z>

" -----------------------------------------------------------------------------
" ,---------------------,
" | Resizing and moving |
" '---------------------'

command! resize -description "Resize window to X Y"
    \ -nargs=* -js self.resizeTo(args[0], args[1])
command! resizeby -description "Resize window by X Y"
    \ -nargs=* -js self.resizeBy(args[-3], args[0])
command! maximize -description "Maximize window"
    \ -js self.maximize()
command! maximizeH -description "Maximize window height"
    \ -js self.resizeTo(self.outerWidth, screen.availHeight)
command! maximizeW -description "Maximize window width"
    \ -js self.resizeTo(screen.availWidth, self.outerHeight)
command! minimize -description "Minimize window"
    \ -js self.minimize()
command! maximizeRestore -description "Maximize and restore"
    \ -js self.resizeTo(null,null); window.setTimeout(()=>self.maximize(), 400);
command! move -description "Move window by X Y"
    \ -nargs=* -js self.moveBy(args[0], args[1])
command! moveto -description "Move window to X Y"
    \ -nargs=* -js self.moveTo(args[0], args[1])
command! moveTL -description "Move window to top left"
    \ :js self.moveTo(0,0)
command! moveTR -description "Move window to top right"
    \ :js self.moveTo(screen.availWidth-self.window.outerWidth, 0)
command! moveBL -description "Move window to bottom left"
    \ :js self.moveTo(0, screen.availHeight-self.window.outerHeight)
command! moveBR -description "Move window to bottom right"
    \ :js self.moveTo(screen.availWidth-self.window.outerWidth, screen.availHeight-self.window.outerHeight)

map -modes=base <C-\\> -ex maximizeRestore

" =============================================================================
"                                      _________
"                                     |         |
"                                     | STYLING |
"                                     |_________|

" define temp group for use by temp styles, etc
group temp
group user

js <<EOF
function narrowPage(width, lmarg, rmarg) {
    var doc = content.document.getElementsByTagName('html')[0];
    doc.setAttribute(
        'style',
        `width: ${width}px; margin-left: ${lmarg}px; margin-right: ${rmarg}px;`
    );
}
EOF

command! narrowpage
\   -description "Style/narrow page"
\    -nargs=*
\    -js narrowPage(args[0]||1000, args[1]||100, args[2]||1000);
command! cssapply
\ -nargs=*
\ -description "Style/apply CSS to current page (!; expands to !important;)"
\ -js dactyl.execute(`style -group temp -name ${Date().replace(/ /g,'',true)} '${buffer.URL}' ${args.join(' ').replace(/ !;/g, ' !important;')}`);

style -name=visitedlinks * a:visited { color: #8E73E6 !important; }

map    <browser>sN -description "Style/narrow page" :narrowpage<Space>
map -b <browser>st -description "Style/add temp style for page" y:style -group=temp <C-v><C-v><Space>
map    <browser>su -description "Style/toggle usermode (minimal styling)" -ex set usermode!
map    <browser>sv -description "Style/view:choose page style" :emenu View.Page Style.

" ,---------,
" | Stylish |
" '---------'

map <browser>sm -description "Stylish/manage styles" -ex stylishmanage
map <browser>sn -description "Stylish/new style" -js stylishCommon.openEdit('new');
map <browser>ss -description "Stylish/toggle overlay" -ex stylishtoggleoverlay

js <<EOF
function stylishGetOverlayStatus() {
    var prefs = Cc["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefBranch);
    return prefs.getBoolPref("extensions.stylish.styleRegistrationEnabled");
}
function stylishToggleOverlay() {
    var prefs = Cc["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefBranch);
    if (stylishGetOverlayStatus())
        prefs.setBoolPref("extensions.stylish.styleRegistrationEnabled", false);
    else
        prefs.setBoolPref("extensions.stylish.styleRegistrationEnabled", true);
}
EOF

command! stylishmanage -description "Stylish/manage styles" tabopen chrome://stylish-custom/content/info.xul
command! stylishnew -description "Stylish/new style" -js stylishCommon.openEdit('new');
command! stylishtoggleoverlay -description "Stylish/toggle overlay" -js stylishToggleOverlay();

" =============================================================================
"                            ___________________
"                           |                   |
"                           | DEVELOPMENT TOOLS |
"                           |___________________|

" ,------------------------, ,-----------,
" | Javascript Evalutation | | <leader>e |
" '------------------------' '-----------'
map <leader>e<C-h> -js CommandExMode().open("map <leader>e")

" JS Repl
command! jsrepl -js repl=CommandREPLMode.call(); repl.open(); repl.update();
map <xtra>r -ex js!
map <leader>ee :echo<Space>
map <leader>eE :echo doc=content.document;<Space>$=jQuery;<Space>
map <leader>er -ex js!
map <leader>eR -js dactyl.execute("js doc=content.document; $=jQuery;"); dactyl.execute("js!");
map <leader>em :js <<EOF
map <leader>eb :open javascript:

" -----------------------------------------------------------------------------
" ,---------------------------------, ,-----------,
" | Mozilla DevTools & DOM Inspector| | <leader>d |
" '---------------------------------' '-----------'
map <leader>d<C-h> -js CommandExMode().open("map <leader>d")

map <leader>dy -ex eyedropper
map <leader>dw -ex webide
map <leader>db -ex browserconsole
map <leader>ds -ex storageinspector
map <leader>,di -ex dominspector
map <S-f12> -ex devtools

command! webide :feedkeys! <S-f8>
command! browserconsole :feedkeys! <C-S-J>
command! devtools :execute "emenu Tools.Web Developer.Toggle Tools"
command! storageinspector :execute "emenu Tools.Web Developer.Storage Inspector"
command! togglegcli -description "Toggle Developer Toolbar" -js toggleGCLI();
command! eyedropper -description "Eyedropper" -js openEyedropper();
" inspect current content document
command! dominspector :feedkeys <C-S-I>
command! dominspector -js inspectDOMDocument(content.document);
command! dominspector :dialog dominspector
command! dominspectorchrome :js inspectDOMDocument(document.URL)
command! browsertoolbox :feedkeys <C-A-S-I>

" Toggle FF Developer command line
" <S-f2> requires <Esc> to enter normal mode after toggling off.
" <S-f2><Esc> cannot restore focus to command line once lost.
" <S-f2><Tab> is mostly fine, but has the drawback that when
"             restoring focus, it will select the current
"             tab-completion candidate, if one is visible.
" map -modes base -b <A-x> <S-f2><Tab>
map -modes base <A-x> -ex togglegcli

js <<EOF

function toggleGCLI() {
    var bar = DeveloperToolbar;
    if (bar.visible) bar.hide();
    else bar.show(true);
}

mozdevtools = {};
Array.from(gDevTools._tools.keys()).forEach(
    k => { mozdevtools[k] = gDevTools._tools.get(k).url; }
)
window.mozdevtools = mozdevtools;

DeveloperToolbar.show();
devtbar = document.getElementById('developer-toolbar');
[devtbar_stack, devtbar_tools_btn, devtbar_close_btn] = devtbar.childNodes;
DeveloperToolbar.hide();
EOF


" -----------------------------------------------------------------------------
" ,---------,
" | Firebug |
" '---------'
command! firebug :feedkeys! <C-f12>
command! firebugShow -js Firebug.showBar(true);
command! firebugHide -js Firebug.showBar(null);

" -----------------------------------------------------------------------------
" ,----------,
" | TileView |
" '----------'
js <<EOF

function viewTiledOn() {
    tileView.viewTiled = true;
    tileView.drawTiledLayout();
}

function viewTiledOff() {
    tileView.viewTiled = false;
    tileView.drawSelectedPanel();
}

function viewTiledToggle() {
    if (tileView.viewTiled)
        viewTiledOff();
    else
        viewTiledOn();
}

EOF

command! toggleViewTiled -js viewTiledToggle();
map <A-f1> -js viewTiledToggle()

" -----------------------------------------------------------------------------
" ,-----------------------,
" | Web Developer Toolbar |
" '-----------------------'

map <ext>d<C-h> -description "(show bindings)" -js CommandExMode().open("<ext>d")
map <ext>dww
    \ -description "Web Developer Extension commands"
    \ -js CommandExMode().open("emenu Tools.Web Developer Extension.")
map <ext>dwt -ex toolbartoggle Web Developer Toolbar
map <ext>dwr -ex ruler

command! magnifier
    \ -bang
    \ -description "Display magnifier (! toggles)"
    \ -js bang ? wdtToggleMagnifier() : WebDeveloper.PageMagnifier.createPageMagnifier();
command! magnifieroff
    \ -description "Turns off magnifier"
    \ -js WebDeveloper.PageMagnifier.removePageMagnifier();
command! magnifiersize
    \ -description "Sets magnifier size in pixels"
    \ -nargs=+
    \ -js wdtSetMagnifierSize(args[0], args[1])
command! magnifierzoom
    \ -description "Sets magnifier zoom level"
    \ -nargs=1
    \ -js wdtSetMagnification(args[0])
command! ruler
    \ -description "Toggle Web Developer Toolbar's ruler"
    \ emenu Tools.Web Developer Extension.Miscellaneous.Display Ruler
command! stylesoff
    \ -description "Turns off styles via Web Developer 'Toggle all Stylesheets'"
    \ -js WebDeveloper.CSS.toggleAllStyleSheets(true, content.document);
command! styleson
    \ -description "Turns on styles previously disabled via Web Developer 'Toggle all Stylesheets'"
    \ -js WebDeveloper.CSS.toggleAllStyleSheets(false, content.document);
command! styleinfo
    \ -description "Show styles for selected element"
    \ :execute "emenu Tools.Web Developer Extension.CSS.Display Style Information"
command! togglestylesembedded -js document.getElementById('web-developer-disable-embedded-styles-menu').click();
command! togglestyleslinked  -js document.getElementById('web-developer-disable-linked-style-sheets-menu').click();
command! togglestylesinline  -js document.getElementById('web-developer-disable-inline-styles-menu').click();
" note: toggle all styles has binding <Alt-Shift-A>
command! togglestylesall -js document.getElementById('web-developer-disable-all-styles-menu').click();
command! togglestylesbrowser  -js document.getElementById('web-developer-disable-browser-default-styles-menu').click();
command! hidebackground -js WebDeveloper.Images.hideBackgroundImages([content.document]);

 js <<EOF

function wdtToggleMagnifier() {
    if (document.getElementById("web-developer-page-magnifier-container").hidden)
        WebDeveloper.PageMagnifier.createPageMagnifier();
    else
        WebDeveloper.PageMagnifier.removePageMagnifier();
}

function wdtGetMagnification() {
    return parseFloat(WebDeveloper.Preferences.getExtensionStringPreference("magnification.level"));
}

function wdtSetMagnification(level) {
    // WebDeveloper.PageMagnifier.updateMagnificationLevel({ value: level });
    WebDeveloper.Preferences.setExtensionStringPreference("magnification.level", level);
}

function wdtSetMagnifierSize(w, h=w) {
    var magnifier = document.getElementById("web-developer-page-magnifier");
    magnifier.width = w;
    magnifier.height = h;
}

EOF

map zx -ex magnifier!

" -------------------------------------------------------------------------------
" ,--------------,
" | GreaseMonkey |
" '--------------'

set! extensions.greasemonkey.editor=/usr/local/bin/emacsclient
set! extensions.greasemonkey.fileIsGreaseable=true
set! extensions.greasemonkey.unmhtIsGreaseable=true
command! gmopenscriptsdirectory -js dactyl.execute("!dolphin "+GM_util.scriptDir().path)
command! gmscriptsdirectory -js dactyl.open(GM_util.scriptDir().path, {where:dactyl.NEW_TAB});
command! -bang gmnew -js dactyl.open('chrome://greasemonkey/content/newscript.xul', { where: bang ? 'here' : 'tab' });


" ,------------,
" | HackTheWeb |
" '------------'
command! hacktheweb -js hacktheweb.start();

" -------------------------------------------------------------------------------
" ,-----------,
" | Bookmarks |
" '-----------'

js <<EOF
function bookmarkExportBuku() {
    var filename = `/tmp/firefox-buku-${(new Date).toISOString()}`;
    BookmarkHTMLUtils.exportToFile(filename);
    runProcess("/usr/local/bin/buku", "--import", filename);
}
EOF

command! bookmarkExportHTML -nargs=1 -js BookmarkHTMLUtils.exportToFile(args[0]);
command! bookmarkExportBuku -js bookmarkExportBuku();
command! bukurun !buku_run
command! bookmarkpage :normal <bookmark-page>
map -b <bookmark-page> <C-v><C-d>
map <browser>k <bookmark-page>

map sk<C-h> -description "bindings for prefix sk" -js CommandExMode().open("map sk")
map sk<space> -description "search bookmarks" :bmarks  -max 45<SPACE>
map skk -description "search bookmarks by keyword" :bmarks -max 45<SPACE> -keyword<SPACE>
map skt -description "search bookmarks by title" :bmarks -max 45<SPACE> -title<SPACE>
map skg -description "search bookmarks by tags" :bmarks -max 45<SPACE> -tags<SPACE>
map sks -description "search static keyword bookmarks (keyword contains :::)" :bmarks -max 45<SPACE> -keyword :::<CR>
map skw -description "search bookmarks with buku" -ex !buku_run

" ===============================================================================
"                               _______________________
"                              |                       |
"                              | about:config SETTINGS |
"                              |_______________________|

command! toggleconfig
    \ -description "Toggle boolean about:config setting."
    \ -nargs=1
    \ -js dactyl.utils.togglePref(args[0]);

" enable/disable javascript
command! acsetjs    :set! javascript.enabled=true
command! acunsetjs  :set! javascript.enabled=false
command! actogglejs toggleconfig javascript.enabled

" strict origin "
command! acsetstrictorigin   :set! security.fileuri.strict_origin_policy=true
command! acunsetstrictorigin :set! security.fileuri.strict_origin_policy=false
command! actogglestrictorigin toggleconfig security.fileuri.strict_origin_policy

" OCSP stapling "
command! acsetocspstapling   :set! security.ssl.enable_ocsp_stapling=true
command! acunsetocspstapling :set! security.ssl.enable_ocsp_stapling=false
command! actoggleocspstapling toggleconfig security.ssl.enable_ocsp_stapling

" User Agent "
command! acsetuaoverride :set! general.useragent.override='Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36'
command! acunsetuaoverride :set! general.useragent.override=''
command! actoggleuaoverride -js utils.toggleCharPref('general.useragent.override', 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36');

" =============================================================================
"                                      _________
"                                     |         |
"                                     | CONTENT |
"                                     |_________|

" TODO: Write command to work on remote PDFs being viewed
"       - preferably by accessing file in cache
"       - otherwise by re-downloading

" PDF (local): view in Okular
command! oku -description "Open local file in Okular"
    \ execute `run okular "${decodeURIComponent(buffer.URL.substring(7))}"`

" Dump webpage text
command! dumptextw3m
    \ -description "Dump page text with w3m"
    \ -js dumpTextW3m(args[0]||undefined, args[1]||undefined, args[3]||undefined);
command! yanktextw3m
    \ -description "Extract page text with w3m and yank to clipboard"
    \ -js yankTextW3m(args[0]||undefined, args[1]||undefined);

js <<EOF

function yankTextW3m(columns=80, charset=null) {
    var url = buffer.URL;
    if (charset)
        dactyl.execute(`yank :!w3m -dump -cols ${columns} -o display_charset=${charset} ${url}`);
    else
        dactyl.execute(`yank :!w3m -dump -cols ${columns} ${url}`);
}

function dumpTextW3m(columns=80, charset=null, where=dactyl.NEW_TAB) {
    var url = buffer.URL;
    var urlname = urlLastComponent(url);
    var file = FileUtils.getFile("TmpD", [`${urlname}.txt`]);
    file.createUnique(Components.interfaces.nsIFile.NORMAL_FILE_TYPE, 0o666);
    var fname = file.path;
    if (charset)
        dactyl.execute(`!w3m -dump -cols ${columns} -o display_charset=${charset} ${url} > ${fname}`);
    else
        dactyl.execute(`!w3m -dump -cols ${columns} ${url} > ${fname}`);
    dactyl.open(`file://${fname}`, {where:where});
}

EOF


" =============================================================================
"                                   ____________
"                                  |            |
"                                  | EXTENSIONS |
"                                  |____________|

js <<EOF

function toggleAddon(id) {
    AddonManager.getAddonByID(id, function(addon) {
        if (addon) {
            addon.userDisabled = !addon.userDisabled;
        } else {
            dactyl.echoerr(`addon ${id} not found`);
            return;
        }
    });
}
window.toggleAddon = toggleAddon;

// getExtensions produces an array and passes it to an optional callback.
// By default, it prints the result list and copies it to clipboard.
function getExtensions(arrayCallback) {
    if (!arrayCallback) arrayCallback = arrayCbWriteItems;
    AddonManager.getAddonsByTypes(["extension"], function(exts) {
        var result = [];
        for (let ext of exts)
            result.push(ext.name+': '+ext.id);
        arrayCallback.call(null, result);
    });
}
window.getExtensions = getExtensions;

EOF

command! listextensions
    \ -description "List extensions and copy to clipboard."
    \ -js getExtensions();


" ,--------------,
" | Autopagerize |
" '--------------'
command! pagezipper :open javascript:(function(){if(window['pgzp']){_pgzpToggleBookmarklet();}else{window._page_zipper_is_bookmarklet=true;window._page_zipper=document.createElement('script');window._page_zipper.type='text/javascript';window._page_zipper.src='//www.printwhatyoulike.com/static/pagezipper/pagezipper_10.js';document.getElementsByTagName('head')[0].appendChild(window._page_zipper);}})();

map <xtra>z -ex open javascript:(function(){if(window['pgzp']){_pgzpToggleBookmarklet();}else{window._page_zipper_is_bookmarklet=true;window._page_zipper=document.createElement('script');window._page_zipper.type='text/javascript';window._page_zipper.src='//www.printwhatyoulike.com/static/pagezipper/pagezipper_10.js';document.getElementsByTagName('head')[0].appendChild(window._page_zipper);}})();
map <autopager> -ex open javascript:(function(){if(window['pgzp']){_pgzpToggleBookmarklet();}else{window._page_zipper_is_bookmarklet=true;window._page_zipper=document.createElement('script');window._page_zipper.type='text/javascript';window._page_zipper.src='//www.printwhatyoulike.com/static/pagezipper/pagezipper_10.js';document.getElementsByTagName('head')[0].appendChild(window._page_zipper);}})();
map <C-Space> <autopager>

" Print What You Like:
command! prwul -description "run PrintWhatYouLike"
    \ :o javascript:(function(){if(window['ppw']&&ppw['bookmarklet']){ppw.bookmarklet.toggle();}else{window._pwyl_home=%22http://www.printwhatyoulike.com/%22;_pwyl_bmkl=document.createElement('script');_pwyl_bmkl.setAttribute('type','text/javascript');_pwyl_bmkl.setAttribute('src',_pwyl_home+'static/compressed/pwyl_bookmarklet_10.js');_pwyl_bmkl.setAttribute('pwyl','true');document.getElementsByTagName('head')[0].appendChild(_pwyl_bmkl);}})();

" ,-------------,
" | DownThemAll |
" '-------------'

js <<EOF
var dta_id = "{DDC359D1-844A-42a7-9AA1-88A850A938A8}";
AddonManager.getAddonByID(dta_id, a=>{ window.dta = a; });
dta = window.dta;
EOF

command! dtamanager -description "Open DownThemAll manager"
    \ -js window.openDialog('chrome://dta/content/dta/manager.xul');
command! dta -description "DownThemAll"
    \ -js document.getElementById('dtaCtxDTA-direct').click();

" ,---------------------------------,
" | Wiktionary and Google Translate |
" '---------------------------------'
js <<EOF
if (typeof gd12 != 'undefined') {
    gd12.prefs.applyUserStyle();
    var gd12style_default = ".gDicClassPopup { background-color: white !important; border: 2px solid gray !important; }";

    gd12.prefs.myStyle = ".gDicClassPopup { background-color: #FFDDDD !important; border: 2px solid gray !important; }"
    gd12.prefs.applyUserStyle()
}
EOF

" ,-----------,
" | Rikaisama |
" '-----------'
" notes:
" CSS - chrome://rikaichan/skin/popup-blue.css
" keybindings: stored as ASCII codes in rcxConfig.kb* entries
" functions:
"   rcxData.convertKatakanaToHiragana(word)
"   rcxData.kanjiSearch(text)
"   rcxData.textSearch(text)
"   rcxData.wordSearch(text)
"   rcxData.translate(word, noKanji)
"   rcxMain.containsKanji(text)
"   rcxMain.htmlParser(aHTMLString)
"   rcxMain.lookupSearch(text)            // perform lookupbar search (results in popup)
"   rcxMain.showPopup(text)               // show text using Rikaisama popup
command! riklbaron -description "Rikaisama lookupbar on"
    \ -js rcxMain.lbToggle();
command! riklbaroff -description "Rikaisama lookupbar off"
    \ -js rcxMain.lbHide();
command! riklbartoggle -description "Rikaisama lookupbar toggle"
    \ -js rikLBToggle();
command! rikplayaudio -bang -js rcxMain.playJDicAudio(bang);
command! rikcopydef -description "Rikaisama: copy definition to clipboard"
    \ -js rcxMain.copyToClip();
command! rikcopy -description "Rikaisama: copy word to clipboard"
    \ -js rikCopyWordToClipboard();
command! rikstick -description "Rikaisama: make current popup sticky"
    \ -js rcxMain.allowOneTimeSuperSticky();
command! rikstickytoggle -description "Rikaisama: toggle sticky popups"
    \ -js rikStickyToggle();
command! riksetpos -description "Rikaisama: set popup position (normal, top, bottom)"
    \ -nargs=? -js rikSetPosition(args[0]||0);
command! rikepwing -description "Rikaisama: toggle epwing mode"
    \ -js rikEpwingToggle();
command! riksanseido -description "Rikaisama: toggle sanseido mode"
    \ -js rikSanseidoToggle();

style -name=rikaisama-bigkanji * .w-kanji { font-size: 200% !important; }
style -name=rikaisama-on-top * #rikaichan-window { z-index: 8888888888 !important; }

map <ext>r<C-h> -js CommandExMode().open("map <ext>r");
map <ext>rl -description "Rikai: Toggle Lookup Bar" -ex riklbartoggle
map <ext>ro -description "Rikai: Toggle Sanseido mode" -ex riksanseido
map <ext>rr -description "Rikai: Toggle sticky" -ex rikstickytoggle
map <ext>rs -js rcxMain.saveToFile()
map <ext>rtk -ex styletoggle -name rikaisama-bigkanji
map <ext>rto -ex styletoggle -name rikaisama-on-top

js <<EOF
function rikLBIsVisible() {
    var lbar = document.querySelector('#rikaichan-lbar');
    return lbar && !lbar.getAttribute('hidden');
}
function rikLBToggle() {
    if (rikLBIsVisible())
        rcxMain.lbHide();
    else
        rcxMain.lbToggle();
}
function rikStickyToggle() {
    var newval =  !rcxMain.sticky;
    rcxMain.sticky = newval;
    utils.message(`rikai: sticky = ${newval ? 'ON':'OFF'}`);
}
function rikStick() {
    rcxMain.allowOneTimeSuperSticky();
}
function rikSetPosition(pos=0) {
    switch (pos) {
        case 'normal':
            pos = 0;
            break;
        case 'top':
            pos = 1;
            break;
        case 'bottom':
            pos = 2;
            break;
    }
    rcxMain.altView = pos;
}
function rikPlayAudio() {
    rcxMain.playJDicAudio();
}
function rikCopyWordToClipboard() {
    dactyl.clipboardWrite(rcxMain.word);
}
function rikEpwingToggle() {
    if (rcxMain.epwingMode) {
        rcxMain.epwingMode = false;
        dactyl.utils.message("epwing mode off");
    } else {
        rcxMain.epwingMode = true;
        dactyl.utils.message("epwing mode on");
    }
}
function rikSanseidoToggle() {
    if (rcxMain.sanseidoMode) {
        rcxMain.sanseidoMode = false;
        dactyl.utils.message("sanseido mode off");
    } else {
        rcxMain.sanseidoMode = true;
        dactyl.utils.message("sanseido mode on");
    }
}
EOF

" -------------------------------------------------------------------------------
" ,-------,
" | gDict |
" '-------'
js var gdict_id='jid1-6OFSXFbACQthzQ@jetpack';
map <ext>g -description "Toggle gDict" -js toggleAddon(gdict_id);

" -----------------------------------------------------------------------------
" shortcut to Wikipedia episode lists.
command! eplist -nargs=1 -js (eplist(args[0]))

" -----------------------------------------------------------------------------

" kanji

command! popjisyo
    \ -bang
    \ -description "Add hints for Japanese via POPjisyo.com. With !, adds hints for English"
    \ -js bang ? popJisyoEtoJ() : popJisyo();

style -name=popjisyo
    \ www.popjisyo.com
    \ td.charDat2,td.charDat3 { display: none !important; }
command! popjisyochinesecolumns
    \ -description "toggle display of chinese data"
    \ styletoggle -name popjisyo

map <ext>jp -ex popjisyo
map <ext>jtc -ex popjisyochinesecolumns

" -----------------------------------------------------------------------------
" ,-------, ,-----------,
" | Links | | <leader>l |
" '-------' '-----------'
map <leader>l<C-h> -js CommandExMode().open("map <leader>l")

map <leader>la -ex appendlinks
map <leader>lu -ex appendlinkurls
map <leader>ll -ex listlinks
map <leader>ls -ex dlselectlinks
command! appendlinks
    \ -description "Append links to end of page"
    \ -js appendLinks();
command! appendlinkurls
    \ -description "Append link destinations to end of page"
    \ -js appendLinkUrls();
" trigger listlinks keyword bookmarklet
command! listlinks
    \ -description "List all links in page"
    \ :open listalllinks

js <<EOF
appendLinksAndAlt = function() {
    s = '';
    for (var l of content.document.links) {
        var title = l.parentElement.parentElement.getAttribute('data-title');
        if (title) title = title.replace(/ /g, '_');
        var url = l.href;
        s += `${title} <a href='${url}'>${url}</a><br>`
    }
    var linklist = content.document.createElement('div');
    linklist.innerHTML = s;
    content.document.body.appendChild(linklist);
}

function dlLinks(dir=null) {
    home = env.get("HOME");
    dir = dir || `${home}/Downloads`;
    var title = buffer.title;
    var newdir = `${dir}/${title}`;
    if (title)
        dactyl.execute(`!mkdir "${newdir}"`);
    s = '';
    for (var l of content.document.links) {
        var title = l.parentElement.parentElement.getAttribute('data-title');
        s += l.href + "\\\\n";
    }
    dactyl.execute(`!roxterm -e zsh -c 'cd "${newdir}"; echo -e "${s}" | iselect -ma -kj:KEY_DOWN -kk:KEY_UP | while read -r x || [[ -n $x ]]; do wget $x; done; $SHELL'`);
}
EOF
command! appendlinksandalt -js appendLinksAndAlt();
command! dlselectlinks -js dlLinks();

" -------------------------------------------------------------------------------
" ,----------------,
" | Image Commands |
" '----------------'
map <leader>ia -ex imgsalttotitle

" -------------------------------------------------------------------------------
" ,----------------,
" | Table Commands |
" '----------------'
map <leader>x<C-h> -js CommandExMode().open("map <leader>x")
map <leader>xt<C-h> -js CommandExMode().open("map <leader>xt")

map <leader>xt, -ex table2csv
map <leader>xtw -ex tablewiden
map <leader>xtW -ex tablewrap
map <leader>xtd :tableDeleteColumns<Space>
map <leader>xtc
    \ -description "Copy table columns"
    \ :copytablecols<Space>
map <leader>xtC
    \ -description "Copy table columns (omit rows with too few columns)"
    \ :copytablecols-strict<Space>
map <leader>xt/
    \ -description "Filter Table Rows with function (arguments are the contents of each cell as strings)"
    \ :filtertablerows<Space>

" Table2CSV
" table2csv JS from https://snipt.net/whiskybar/ (via http://marklets.com/CSV from HTML tables.aspx)
command! table2csv
    \ -description "Convert table contents to CSV in box under table"
    \ :open javascript:(function(){$('table').each(function(){var%20$table=$(this);$('<textarea>').css('width',$table.width()).css('height','400px').html($.map($table.find('tr'),function(tr){return%20$.map($(tr).find('th,%20td'),function(e){return'"'+$(e).text().replace('"','""').replace('\n','%20')+'"'}).join(',')}).join('&#13;&#10;')).insertAfter($table);})})()
command! yanktablecsvarea
    \ -description "Yank the contents of table N's CSV. Use after :table2csv"
    \ -nargs=1
    \ yanktextarea <args>

command! filtertablerows
    \ -description "Filter Table Rows with function (arguments are the contents of each cell as strings)"
    \ -complete javascript
    \ -nargs=1
    \ -js dactylArgsSet(args); hints.show('Ⓣ');

command! copytablecols
    \ -description "Copy specified columns from table chosen by HINT"
    \ -nargs=*
    \ -js dactylArgsSet(args); hints.show('ŧ');

command! copytablecols-strict
    \ -description "Copy specified columns from table chosen by HINT (omit rows with too few columns)"
    \ -nargs=*
    \ -js dactylArgsSet(args); hints.show('Ŧ');

js <<EOF
function yankTableCSVArea(n) {
    var tareas = content.document.querySelectorAll('table+textarea');
    var contents = tareas[n].textContent;
    utils.cbWriteWithMessageLimit(contents);
}
EOF

" Widen table

style -name=table_widen
    \ file://*
    \ body { max-width: 250em !important; }
command! tablewiden -description "widen table" styletoggle -name table_widen

style -name=table_wrap
    \ file://*
    \ td:first-of-type { white-space: pre-wrap !important; }
command! tablewrap -description "wrap text in table cells" styletoggle -name table_wrap

command! tableDeleteColumns
    \ -description "Delete given columns from all tables."
    \ -nargs=*
    \ -js tableDeleteCols(args.map(parseInt));

js <<EOF

function tableDeleteCols(cols) {
    var tables = content.document.getElementsByTagName('table');
    for (var t of Array.from(tables))
        for (var r of Array.from(t.rows))
            for (var i of cols) {
                var cell = r.children[i];
                if (cell) cell.remove();
            }
}

function tableFilterRows(table, filter) {
    /* first row is column headings */
    /* filter takes one argument for each column */
    var rows = Array.from(table.rows).slice(1);
    for (var row of rows) {
        var cells = Array.from(row.cells);
        var cellsText = cells.map(c=>c.innerText);
        if (!filter.apply(null, cellsText))
            row.remove();
    }
}

function tableToCSV(table) {
    var output = "";
    for (row of table.rows) {
        var cells = Array.from(row.cells);
        var cellstrs = cells.map(cell=>`"${cell.innerText}"`);
        output += cellstrs.join(", ") + "\n";
    }
    return output;
}

function CopyTableAsCSV(table) {
    var csv = tableToCSV(table);
    utils.cbWriteWithMessageLimit(csv);
}

function CopyTableAsCSVbySelector(sel) {
    var table = content.document.querySelector(sel);
    var csv = tableToCSV(table);
    utils.cbWriteWithMessageLimit(csv);
}

function extractTableColumns(table, columns, strict=false) {
    var output = "";
    var rows = Array.from(table.rows).slice(1);
    for (var row of rows) {
        var cells = Array.from(row.cells);
        if (strict && cells.length < Math.max.apply(null, columns))
            continue;
        function processCols(i) {
            var cellValue = cells[i-1] && cells[i-1].innerText.trim();
            if ( typeof(cellValue)=="string" &&
                 cellValue.startsWith('"') &&
                 cellValue.endsWith('"') )
                cellValue = cellValue.slice(1, -1).trim();
            return cellValue;
        }
        var colstrs = Array.from(columns).map(processCols);
        output += colstrs.join("\t") + "\n";
    }
    return output;
}
window.extractTableColumns = extractTableColumns;

function copySpecifiedTableColumns(table, strict=false) {
    var extracted = extractTableColumns(table, window._dactylargs, strict);
    var result = extracted.replace(/\n\s*\n/mg, '\n');
    utils.cbWriteWithMessageLimit(result);
}

EOF


" -------------------------------------------------------------------------------

command! activator -description "Lightbend (Typesafe) Activator"
     \ :!/opt/activator-dist/bin/activator && firefox http://127.0.0.1:8888/home &


" =============================================================================
"                              _________________________
"                             |                         |
"                             | COMMAND IMPLEMENTATIONS |
"                             |_________________________|
"  ______________________________________________________________________________________
" /                                                                                      \
" | JAVASCRIPT                                                                           |
" | *  js ... code operates in chrome window namespace                                   |
" | *  :open javascript:(function(){ ... })() code operates in document window namespace |
" | note: FF's browser console <C-S-J> can be used to try out code in the chrome window  |
" |       (although some Pentadactyl variables aren't available)                         |
" |                                                                                      |
" | settings:                                                                            |
" |   dom.event.contextmenu.enabled                                                      |
" |   dom.disable_window_flip (allow window raising/lowering)                            |
" |   dom.disable_window_move_resize                                                     |
" |                                                                                      |
" \______________________________________________________________________________________/

" Function stub for opening a site and filling in a text field
" function (s) {
"     var newtab = gBrowser.addTab('');
"     gBrowser.selectedTab = newtab;
"     var tb = gBrowser.getBrowserForTab(newtab);
"     tb.addEventListener("DOMContentLoaded", function () {
"         var box = content.document.getElementById('')
"         box.value=s;
"         // box.focus();
"     });
" }

js <<EOF

var openAllLinksInCB = function () {
    var a = window.readFromClipboard().split(/[ \t\n]+/);
    for (i = 1; i < a.length; ++i) {
        dactyl.open(a[i], {where:dactyl.NEW_TAB});
    };
}

undob = function() {
    var currT = gBrowser.selectedTab;
    var altT = tabs.alternate;
    var ssService = Components.interfaces.nsISessionStore;
    var ssClass = Components.classes['@mozilla.org/browser/sessionstore;1']
    var ss = ssClass.getService(ssService);
    var closedTabs = JSON.parse(ss.getClosedTabData(window));
    var ct0 = closedTabs[0];
    ss.undoCloseTab(window, ct0);
    gBrowser.selectedTab = altT;
    gBrowser.selectedTab = currT;
}

" Create adjacent duplicate tab and go back in the browser history "
backt = function () {
    tabs.cloneTab(tabs.getTab(), true);
    var backtListener = function () {
        gBrowser.goBack();
        document.removeEventListener("DOMContentLoaded", backtListener, false);
    };
    document.addEventListener("DOMContentLoaded", backtListener, false);
}

" Create adjacent duplicate tab and go forward in the browser history "
forwardt = function() {
    tabs.cloneTab(tabs.getTab(), true);
    var forwardtListener = function () {
        gBrowser.goForward();
        dupTB.removeEventListener("DOMContentLoaded", forwardtListener);
    };
    dupTB.addEventListener("DOMContentLoaded", forwardtListener);
}

" Create adjacent duplicate tab to right "
tabCopyRight = function() {
    var currT = gBrowser.selectedTab;
    var dupT = gBrowser.duplicateTab(currT);
    gBrowser.selectedTab = dupT;
}
" ...basically equivalent to tabCopyRight, but without waiting for the new tab to load. "
tabCopyLeftBg = function() {
    var currT = gBrowser.selectedTab;
    var dupT = gBrowser.duplicateTab(currT);
    getBrowser().moveTabForward();
}

function toggleUrl (x, y, x_canon, y_canon) {
    " General purpose URL toggle function: swaps x and y in URL "
    " If an argument is a regex, then canonical strings corresponding "
    " to x and y must be provided to be used in replacement."
    " If one of the search expressions may be a substring of the other,"
    " the larger must be passed as the first argument x."
    if (x_canon === undefined) x_canon = x;
    if (y_canon === undefined) y_canon = y;
    var url = content.location.href;
    var newurl;
    if (url.search(x) >= 0)
        newurl = url.replace(x, y_canon);
    else if (url.search(y) >= 0)
        newurl = url.replace(y, x_canon);
    dactyl.open(newurl);
}

viewPageSource = function() {
    var loc = content.location;
    if (loc.protocol === 'view-source:')
        loc.href = loc.href.substring(12);
    else
        loc.href = 'view-source:' + loc.href;
}

function imgToDataUri(img) {
    var canvas = content.document.createElement("canvas");
    canvas.width = img.width;
    canvas.height = img.height;
    var ctx = canvas.getContext("2d");
    ctx.drawImage(img, 0, 0);
    var dataUri = canvas.toDataURL("image/png");
    // data only, return dataUri.replace(/^data:image\/(png|jpg);base64,/, "");
    return dataUri;
}
dactyl.utils.imgToDataUri = imgToDataUri;

// monkey-patched capitalize method
function eplist (s) {
    var sConv = s.capitalize().replace(" ", "_");
    dactyl.open(`www.wikipedia.org/wiki/List_of_${sConv}_episodes`);
}

popJisyoUrl = 'http://www.popjisyo.com/WebHint/AddHint.aspx?r=e';

function popJisyo(url) {
    if (!url)
        url = content.location.href;
    content.location.href = `${popJisyoUrl}&d=7&u=${encodeURIComponent(url)}`;
    var tb = gBrowser.selectedBrowser;
    function popJisyoRemoveCruft () {
        hideSelectors('#Table1', '#Table2', '.pqpControlBar');
        removeFirstSelector('hr');
        "TODO: removal not working?";
        tb.removeEventListener(popJisyoRemoveCruft);
    }
    tb.addEventListener('DOMContentLoaded', popJisyoRemoveCruft);
}

function popJisyoEtoJ(url) {
    if (!url)
        url = content.location.href;
    content.location.href = `${popJisyoUrl}&d=1&u=${encodeURIComponent(url)}`;
    var tb = gBrowser.selectedBrowser;
    function popJisyoRemoveCruft () {
        hideSelectors('#Table1', '#Table2', '.pqpControlBar');
        removeFirstSelector('hr');
        tb.removeEventListener(popJisyoRemoveCruft);
    }
    tb.addEventListener('DOMContentLoaded', popJisyoRemoveCruft);
}

function toggleHTTPS () {
    var url = content.location.href;
    var newurl;
    var sc_http  = "http://";
    var sc_https = "https://";
    if (url.indexOf(sc_http) == 0)
        newurl = url.replace(sc_http, sc_https);
    else if (url.indexOf(sc_https) == 0)
        newurl = url.replace(sc_https, sc_http);
    dactyl.open(newurl);
}

function appendLinks () {
    tmpStr = '';
    d = content.document;
    s = d.getElementsByTagName('A');
    la = new Array(s.length);
    lc=0;
    for(i = 0;i<s.length;i++)
        if(s[i].innerText != '' && s[i].innerText!= ' ') {
            lc++;
            la[lc] = s[i];
        }
    for(i = 1; i<=lc; i++)
        tmpStr += `<a href=${la[i].href}> ${la[i].href} </a><br>`;
    d.body.insertAdjacentHTML(
        'beforeEnd',
        `<br style = clear:both;><div><hr>Link Footnotes:<hr>${tmpStr}</div><hr>`
    );
}

function appendLinkUrls () {
    tmpStr = '';
    d = content.document;
    s = d.getElementsByTagName('A');
    la = new Array(s.length);
    lc=0;
    for(i = 0;i<s.length;i++)
        if(s[i].innerText != '' && s[i].innerText!= ' ') {
            lc++;
            la[lc] = s[i];
        }
    for(i = 1; i<=lc; i++)
        tmpStr += la[i].href + '<br>';
    d.body.insertAdjacentHTML(
        'beforeEnd',
        `<br style = clear:both;><div><hr>Link Footnotes:<hr><p>${tmpStr}</div><hr>`
    );
}

function filenameOrURL(s) {
    var text=decodeURIComponent(s.replace(/^file:\/\//,'').replace(/[?#].*/,''));
    return text;
}

function getFilenameOrURL() {
    var text=decodeURIComponent(buffer.URL.replace(/^file:\/\//,'').replace(/[?#].*/,''));
    return text;
}

function toggleFooter() {
    var footers=content.document.body.getElementsByTagName("footer");
    for (i=footers.length-1; i>=0; --i) {
        if (footers[i].style.display=="none")
            footers[i].style.display="";
        else footers[i].style.display="none";
    }
}

function removeCruft() {
    var elts = [];
    var toarray = Array.prototype.slice;
    var doc = content.document;
    var coll = doc.getElementsByTagName("header");
    if (coll) elts = elts.concat(toarray.call(coll));
    var coll = doc.getElementsByClassName("header");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("header");
    if (coll) elts.push(item);
    var coll = doc.getElementsByTagName("aside");
    if (coll) elts = elts.concat(toarray.call(coll));
    var coll = doc.getElementsByClassName("aside");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("aside");
    if (coll) elts.push(item);
    var coll = doc.getElementsByTagName("footer");
    if (coll) elts = elts.concat(toarray.call(coll));
    var coll = doc.getElementsByClassName("footer");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("footer");
    if (coll) elts.push(item);
    var coll = doc.getElementsByTagName("form");
    if (coll) elts = elts.concat(toarray.call(coll));
    var coll = doc.getElementsByClassName("topbar");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("topbar");
    if (coll) elts.push(item);
    var coll = doc.getElementsByClassName("sidebar");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("sidebar");
    if (coll) elts.push(item);
    var coll = doc.getElementsByClassName("comments");
    if (coll) elts = elts.concat(toarray.call(coll));
    var item = doc.getElementById("comments");
    var item = doc.getElementById("feed-link");
    if (coll) elts.push(item);
    if (coll) elts.push(item);
    for (i=elts.length-1; i>=0; --i) {
        if (elts[i])
            elts[i].remove();
    }
}

function pwHash() {
    var newtab = gBrowser.addTab('file:///opt/webapps/password-hasher.html');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        var box = content.document.getElementById('master-key')
        box.value=user.mymasterpw;
        var sitefield = content.document.getElementById('site-tag')
        sitefield.focus();
    });
}

function pwHashGen(s, fromtab) {
    var newtab = gBrowser.addTab('file:///opt/webapps/password-hasher.html');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        var box = content.document.getElementById('master-key')
        box.value=user.mymasterpw;
        var siteEntryBox = content.document.getElementById("site-tag");
        var noSpecial = content.document.getElementById("noSpecial");
        noSpecial.click();
        var shortPWButton = content.document.getElementById("hash-word").nextElementSibling;
        siteEntryBox.value = s;
        shortPWButton = content.document.getElementsByTagName("details")[0].getElementsByTagName("button")[0];
        shortPWButton.click();
        var pw = content.document.getElementById("hash-word").value;
        utils.cbWrite(pw);
        if (fromtab!==undefined)
            gBrowser.selectedTab = fromtab;
    });
}
window.pwHashGen = pwHashGen;

function pwHashGenerateShortPassword(s) {
    var siteEntryBox = content.document.getElementById("site-tag");
    var shortPWButton = content.document.getElementById("hash-word").nextElementSibling;
    siteEntryBox.value = s;
    shortPWButton = click();
}

function prefsuffSearch(s) {
             var newtab = gBrowser.addTab('http://www.macroevolution.net/site-search.html')   ;
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        var entrybox = content.document.getElementsByTagName('input')[0];
        entrybox.click();
        entrybox.value = s;
        var srchBtn = content.document.getElementsByClassName('gsc-search-button gsc-search-button-v2')[0];
        srchBtn.click();
    });

}

function convertMdUrlToOrg(url) {
    if (typeof(url) == 'undefined' || !url)
        url = content.location.href;
    var regex = /\.md$|.md(?=#)/;
    var newurl = url.replace(regex, '.org');
    if (newurl !== url)
       dactyl.open(newurl);
}

function convertLastSlashToHash(url) {
    if (typeof(url) == 'undefined' || !url)
        url = content.location.href;
    var regex = /(.*)(\/)/;
    var newurl = url.replace(regex, '$1#');
    dactyl.open(newurl);
}

function wiktionaryWordToIndexPage (word)
{
    word = word.toLowerCase();
    word = word.replace(/^-*/, '');
    var page, id;

    // patched methods Number.inRange, String.isAlphaAt
    var wordord = "".charCodeAt.bind(word);

    if (word.isAlphaAt(0))    // word starts with letter
    {
        page = word[0];
        // letters split into 2 pages by second letter (a-m and n-z)
        if ("abcdmnprst".includes(word[0]))
            if (wordord(1).inRange(97, 110))          // a-m
                page += "1";
            else if (wordord(1).inRange(110, 123))    // n-z
                page += "2";

        id = word[0];
        if (word.isAlphaAt(1))
            id += word[1];
    }
    else                     // word starts with digit or symbol
    {
        page = "0";
        if (word.charCodeAt(1).inRange(48, 58))
            id = word(1);
        else
            id = "Symbols";
    }

    return page + "#" + id;
}

function searchKanjiDamage(s) {
    var newtab = gBrowser.addTab('http://www.kanjidamage.com');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        var box = content.document.getElementById('q')
        box.value=s;
        box.form.submit();
    });
}

function setBody(elt) {
    var body = content.document.body;
    for (i = body.children.length-1; i>=0; --i)
        body.children[i].remove();
    body.appendChild(elt);
}

function setBodyById(eltId) { setBody(content.document.getElementById(eltId)); }

function imgsAddAltTextToTitle() {
    var imgs = content.document.getElementsByTagName('img');
    var img, alt, title;
    for (i=0; i<imgs.length; ++i) {
        img = imgs[i];
        alt = img.getAttribute('alt') || '';
        title = img.getAttribute('title') || '';
        if (alt !== '') {
            if (title === '')
                img.setAttribute('title', alt);
            else
                img.setAttribute('title', title + "\nALT TEXT:\n" + alt);
        }
    }
}

function rubular(regex, test) {
    var newtab = gBrowser.addTab('http://rubular.com/');
    var tb = gBrowser.getBrowserForTab(newtab);
    function rubularCB() {
        var regexfield = content.document.getElementById("regex");
        var testfield = content.document.getElementById("test");
        regexfield.value = regex;
        testfield.value = test;
        tb.removeEventListener("DOMContentLoaded", rubularCB);
    }
    tb.addEventListener("DOMContentLoaded", rubularCB);
}

function clickSelector(sel) {
    if (typeof sel == "string") {
        // selector
        var getButton = content.document.querySelector(sel);
        getButton.click();
    } else {
        // element
        sel.click();
    }
}
window.clickSelector = clickSelector;

function dispatchClickEvent(elt) {
   var ev = document.createEvent("MouseEvents");
   ev.initEvent("click", true, true);
   elt.dispatchEvent(ev);
}
window.dispatchClickEvent = dispatchClickEvent;

EOF

" =============================================================================
"                                       _______
"                                      |       |
"                                      | HINTS |
"                                      |_______|

set ht=:-moz-any-link,area,button,iframe,input:not([type=hidden]):not([disabled]),label[for],select,textarea,[onclick],[onmouseover],[onmousedown],[onmouseup],[oncommand],[tabindex],[role=link],[role=button],[contenteditable=true],svg,a[class^=vote],a[class^=speed],div.ita-hwt-candidate,.preference>li

" Show extended hints modes
command! listhintmodes :echo hints.modes

set eht=[asOTvVWy]:':-moz-any-link','area[href]','img[src]','iframe[src]'
set eht+=[iI]:img
set eht+=[A]:'[id]','a[name]'
set eht+=[f]:body
set eht+=[F]:body,code,div,html,p,pre,span
set eht+=[S]:'input:not([type=hidden])',textarea,button,select
" set eht=[iI]:img,[asOTvVWy]:':-moz-any-link','area[href]','img[src]','iframe[src]',[A]:'[id]','a[name]',[f]:body,[F]:body,code,div,html,p,pre,span,[S]:'input:not([type=hidden])',textarea,button,select
js hints.addMode('m','mouseover',utils.simulateMouseover);

set eht='[ ]':a,img,':-moz-any-link'
js <<EOF
hints.addMode(
    ' ', 'Click in new tab',
    e=>{
        altT = tabs.alternate;
        tabCopyLeftBg();
        e.click();
        tabSelectLeft();
    }
);
EOF

" Re-add [iI] tags: broken by preceding code for [ ] (not sure why) "
set eht+=[iI]:img

" remove structural elements
set eht+=[x]:div,iframe,header,footer,aside,form,'input:not([type=hidden])',textarea,img,ul,ol
js hints.addMode('x','Remove element', e=>e.remove());
" remove headings, paragraphs, items "
set eht+=[X]:h1,h2,h3,h4,h5,h6,p,tr,li,pre
js hints.addMode('X','Remove element', e=>e.remove());
set eht+=[0]:div,iframe
js hints.addMode('0','make div invisible', utils.undisplay);

" replace ;t with function for ;b (open in background)
js hints.addMode("t", "Follow hint in a background tab", elem => buffer.followLink(elem, dactyl.NEW_BACKGROUND_TAB))
set eht+=[p]:div,section,ol,ul,table,frame,iframe,img,h1,h2,h3,h4,input,'xpath:div/p'
js hints.addMode('p','lmnpop',elem => { lmnpop(elem); });
set eht+=[e]:':-moz-any-link'
js hints.addMode('e', 'open in emacs', elem => dactyl.execute('!emacsclient "' + filenameOrURL(elem.href) + '"'));
" Show node (popup)"
set eht+=[`]:':-moz-any-link',div,iframe,header,footer,aside,form,iframe,table,h1,h2,h3,h4,p,ul,ol,dl,img,textarea,pre,code,'input:not([type=hidden])'
js hints.addMode('`','show node (popup)', e => alert(e.innerHTML || e));
" Get node "
set eht+=[1]:':-moz-any-link',div,iframe,header,footer,aside,form,iframe,table,h1,h2,h3,h4,p,ul,ol,dl,img,textarea,pre,code,'input:not([type=hidden])'
js hints.addMode('1','get node', e => dactyl.stored_node=e);
" Get selectors (uses Stylish functions) "
set eht+=[2]:':-moz-any-link',div,iframe,header,footer,aside,form,iframe,table,h1,h2,h3,h4,p,ul,ol,dl,img,textarea,pre,code,'input:not([type=hidden])'
js hints.addMode('2','get selectors', e => dactyl.stored_result = stylishCommon.generateSelectors(e));

" inspect in Firebug
set eht+=[\.]:':-moz-any-link',div,iframe,header,footer,aside,form,iframe,table,h1,h2,h3,h4,p,ul,ol,dl,img,textarea,pre,code,'input:not([type=hidden])'
js hints.addMode('\.','inspect in Firebug', e => Firebug.Inspector.inspectFromContextMenu(e));
" open link with wayback
set eht+=[\]:':-moz-any-link'
js hints.addMode('\\', 'wayback open link in new tab', elem=>{ dactyl.open(`http://web.archive.org/web/${elem.href}`, {where:dactyl.NEW_TAB}) })

" svg: FIXME
runtime! js/svg-pan-zoom.min.js
set eht+=[G]:svg
js hints.addMode('G','pan & zoom SVG',alert);
" openseadragon: image zoom and pan "
set eht+=[m]:img
js hints.addMode('m','pan & zoom img', elem=>{ dactyl.open(`http://openseadragon.github.io/openseadragonizer/?img=${elem.src.replace(/(\?|#).*/,'')}&encoded=true`, { where: dactyl.NEW_TAB }) });

" kanji "
set eht+=[kK]:div.concept_light-representation>span.text
js <<EOF
hints.addMode(
    'k','open kanji details in new tab',
    e => dactyl.open(dec(`http://jisho.org/search/${e.textContent.trim()}%2523kanji`), {where:'tab'}));
hints.addMode(
    'K','open kanji details',
    e => dactyl.open(dec(`http://jisho.org/search/${e.textContent.trim()}%2523kanji`), {where:'here'}));
EOF

" --------------- "
" Non-Ascii Hints "
" --------------- "
" These can actually be triggered normally (eg. via ;ä) if the character is entered using the compose key, IME, etc. "
" However, they are intended to be activated by another binding using hints.open().                                  "
" eg.  map <binding> -js hints.open('ä')                                                                             "

" Completion list divider [HACK] - separates ascii from non-ascii hints (uses dummy hint modes) "
js hints.addMode('', '', e=>utils.message(e));
js hints.addMode('', '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━',
\                e=>utils.message(e));
js hints.addMode(' ', '', e=>utils.message(e));           "no-break space 00A0"

" =====                                                          "
" Kanji                                                          "
" =====                                                          "
" .w-kanji             -- rikaisama                              "
" .furigana+span.text  -- jisho result term with kanji           "
" .furigana+.unlinked  -- jisho term in examples with kanji      "
" .character.literal>a -- jisho kanji link on right              "
" .break-unit          -- jisho 'other forms'                    "
" .ja-text             -- japanese.stackexchange kanji/kana term "
" .t_nihongo_kanji     -- wikia span class                       "
" #japanese-name       -- wikia with support GM script           "
set eht+=[字カ]:'.w-kanji,.furigana+span.text,.furigana+.unlinked,.character.literal>a,rb,.ja-text,.break-unit,.t_nihongo_kanji,span[lang=ja],#japanese-name'
js hints.addMode('字', 'copy kanji', elem=>utils.cbWrite(elem.innerText));
js hints.addMode('カ', 'send kanji to callback stored in _dactylargs', e=>window._dactylargs[0](e.innerText));

" copy link url to dactylresult "
set eht+=[α]:':-moz-any-link','area[href]','img[src]','iframe[src]'
js hints.addMode("α", "Copy href to dactylresult", e=>{ window.dactylresult = e.href; });

" bold links: mode ä "
set eht+=[ä]:a>strong,a>b
js hints.addMode("ä", "Follow bold link", elem => buffer.followLink(elem, dactyl.CURRENT_TAB));

" === SITE-SPECIFIC === "
" JSBin: "
"    ï - menus"
" coursera: "
"    ẖ - jump to match in transcript "
" fasttech: "
"    🅵 - move to wish list "
" about:newtab "
"    ņ - follow link "
"    Ņ - follow link (background tab) "
"    ɳ - click button "

" Copy text "
set eht+=[ÿ]:h1,h2,h3,h4,h5,h6,p,tr,pre,ul,ol,li
js hints.addMode("ÿ", "Copy paragraph", elem => utils.cbWrite(elem.innerText));

" Translate text "
" ( .ReviewContent, .ProsConsContent - fasttech reviews ) "
" ( .info - banggood reviews ) "
set eht+=[ţ]:h1,h2,h3,h4,h5,h6,p,li,tr,dd,pre,.ReviewContent,.ProsConsContent
js hints.addMode("ţ", "Translate paragraph", elem => googleTranslateText(elem.innerText));
set eht+=[Ţ]:div,code,pre,table,input,.ReviewContent,.ProsConsContent,.info
js hints.addMode("Ţ", "Translate element", elem => googleTranslateText(elem.innerText));
set eht+=[ʈ]:h1,h2,h3,h4,h5,h6,p,li,tr,dd,pre,.ReviewContent,.ProsConsContent
js hints.addMode("ʈ", "Insert translation", googleInsertTranslationForElement);
set eht+=[Ʈ]:div,code,pre,table,input,.ReviewContent,.ProsConsContent,.info
js hints.addMode("Ʈ", "Insert translation (div)", googleInsertTranslationForElement);

" Copy Table Columns "
set eht+=[ŧ]:table
set eht+=[Ŧ]:table
js hints.addMode("ŧ", "Copy Table Columns", copySpecifiedTableColumns);
" - ignore rows with too few cells "
js hints.addMode("Ŧ", "Copy Table Columns", e=>copySpecifiedTableColumns(e, true));
" Filter Table Rows "
set eht+=[Ⓣ]:table
js hints.addMode("Ⓣ", "Filter Table Rows", e=>tableFilterRows(e, eval(window._dactylargs[0])));

" Inches to Cm "
js <<EOF
function convertInchesToCm(elt) {
    elt.innerText = subCmForInches(elt.innerText);
}
window.convertInchesToCm = convertInchesToCm;
EOF
set eht+=[”]:h1,h2,h3,h4,h5,h6,p,li,td,dd,pre,.ReviewContent,.ProsConsContent
js hints.addMode("”", "Convert Inches to centimeters", convertInchesToCm);

map <yank_desc> ;Y

" -----------------------------------------------------------------------------
" ,----------,
" | hinttags |
" '----------'
"
set hinttags+='svg'
" Add hints for anchor elements whose class attribute starts with "vote":
set hinttags+=a[class^='vote']
set hinttags+=a[class^='speed']

" -----------------------------------------------------------------------------
" ,------------------,
" | extendedhinttags |
" '------------------'
"
" FIXME: can't activate context menu on 'body' hint
":set eht+=[c]:body,':-moz-any-link',area,button,iframe,input:not([type=hidden]),label[for],select,textarea,[onclick],[onmouseover],[onmousedown],[onmouseup],[oncommand],[tabindex],[role=link],[role=button],[contenteditable=true]

" -----------------------------------------------------------------------------
" ,-------------------,
" | Styling for hints |
" '-------------------'
"
set hintkeys="jkl;fdsahgnvurieow"
"
highlight Hint
    \ font-family: "Droid Sans Mono Slashed";
    \ line-height: 10pt;
    \ text-shadow: 1px 1px 1px #888;
    \ padding: 3px 3px 3px;
    \ font-size: 12pt;
    \ font-weight: bold;
    \ text-transform: uppercase;
    \ color: rgb(91, 58, 26);
    \ background-color: rgba(255, 255, 255, 0.45) !important;
    \ border-radius: 5px;
" HintImage: ?
highlight HintImage
    \ background-color: rgba(255, 0, 255, 1) !important;
    \ border-radius: 5px;
" HintElem: styling for elements when hinted
highlight HintElem
    \ border-radius: 2px;
" HintActive: styling for active element when hinted
highlight -a HintActive
    \ background-color: rgba(255, 255, 255, 0.1) !important;
    \ color: blue !important;
    \ border-style: dashed;
    \ border-color: rgba(255, 0, 0, 0.4);
    \ border-width: 1px;
    \ border-radius: 2px;
" Hint[Active]: styling for hint on active element
highlight -a Hint[Active]
    \ background-color: rgba(255, 255, 0, 0.4) !important;
    \ color: rgb(91, 58, 26);
    \ border-style: solid;
    \ border-color: rgb(91, 58, 26);


" =============================================================================
"                                   _______________
"                                  |               |
"                                  | SITE SPECIFIC |
"                                  |_______________|

" -----------------------------------------------------------------------------
" ,--------,
" | Google |
" '--------'

" Google definitions
command! ggdef -nargs=1 -js googledef(args[0]);
map <leader>gd :ggdef<Space>

js <<EOF

function googledef (word) {
    "FIXME: event listener not working"
    var newtab = gBrowser.addTab(`https://www.google.com.au/search?q=define:${word}`);
    var tb = gBrowser.getBrowserForTab(newtab);
    var callback = function () {
        googleDefExpand();
        tb.removeEventListener("domloaded", callback, false);
    };
    tb.addEventListener("domloaded", callback, false);
    gBrowser.selectedTab = newtab;
}

EOF

" ===== GROUP START =====

group google -locations=google.com,google.com.*
map <leader>hkc -js CommandExMode().open("map -group google <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group google <site>")

" FIXME: completion drop-down remains open after search
js <<EOF
function googleSearchBox(s) {
    var isTextField = function(e) { return (e.getAttribute("type") == "text"); }
    var isSubmitButton = function(e) { return (e.getAttribute("type") == "submit"); }
    var inputElts = content.document.getElementsByTagName("input");
    var searchbox = [].find.call(inputElts, isTextField);
    searchbox.value = s;
    var searchbutton = [].find.call(inputElts, isSubmitButton);
    searchbutton.click();
}

function googleRemoveQuotes() {
    var quotere = /"|'|%22/g;
    dactyl.open(buffer.URL.replace(quotere, ''),
                dactyl.CURRENT_TAB);
}

 googleDefExpand = function() {
     var div = content.document.getElementById('uid_0');
     var link = div.getElementsByClassName('xcae')[0];
     link.click();
 };
EOF

" searchbox command
command! searchbox -description "Enter string search box." -nargs="*" -js googleSearchBox(args.join(' '));
map <site>s :searchbox<Space>
map <site>\' -js googleRemoveQuotes();
" Google definitions: expand
map <site>d -js googleDefExpand();

"              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

map <site>c -ex pagezipper

" restrict search to pages in a specific language
map -b <site>gl O&lr=lang_
" restrict search to pages originating in a specific country
map -b <site>gc O&cr=

group user

" -----------------------------------------------------------------------------
" ,-----,
" | EdX |
" '-----'
group edx -locations=edx.org
autocmd! -group edx
map <leader>hkc -js CommandExMode().open("map -group edx <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group edx <site>")

command! edx :runtime! edx.penta
autocmd DOMload courses.edx.org :edx

" if syllabus won't stay open "
command! edxshowsyllabus -js edxShowSyllabus();

command! edxtogglesyllabus -js edxToggleSyllabus();
map <site>l -js edxToggleSyllabus();

js <<EOF
function edxShowSyllabus() {
    var syllabusDiv = content.document.getElementsByClassName("toggled-content")[0];
    syllabusDiv.style="height: 1500px;";
}
function edxToggleSyllabus() {
    var showLink = content.document.getElementsByClassName("show-content-cta")[0];
    var hideLink = content.document.getElementsByClassName("hide-content-cta")[0];
    var link = showLink.classList.contains("hidden") ? hideLink : showLink;
    link.click();
}
EOF

group user

" -----------------------------------------------------------------------------
" ,----------,
" | Coursera |
" '----------'
group coursera -locations=www.coursera.org
map <leader>hkc -js CommandExMode().open("map -group coursera <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group coursera <site>")

set passkeys+='https://class.coursera.org/.*/lecture/.*':'hp-+fc<up><down><left><right>'

js <<EOF

function courseraTogglePaused() {
    var vid = content.document.getElementById('c-video_html5_api');
    if (vid.paused) vid.play(); else vid.pause();
}
function courseraRateDec() {
    var buttons = content.document.getElementsByClassName('c-playback-rate-button');
    var ratedec = buttons[0];
    ratedec.click();
}
function courseraRateInc() {
    var buttons = content.document.getElementsByClassName('c-playback-rate-button');
    var rateinc = buttons[1];
    rateinc.click();
}
function courseraRate(r) {
    var vid = content.document.getElementById('c-video_html5_api');
    vid.playbackRate = r;
    dactyl.utils.message(`rate: ${vid.playbackRate.toFixed(1)}`);
}
function courseraVolume(vol) {
    var vid = content.document.getElementById('c-video_html5_api');
    vid.volume = vol;
    dactyl.utils.message(`volume: ${vid.volume.toFixed(3)}`);
}
function courseraVolumeDec() {
    var vid = content.document.getElementById('c-video_html5_api');
    if (vid.volume <= 0.15) vid.volume /= 2;
    else vid.volume = vid.volume - 0.1;
    dactyl.utils.message(`volume: ${vid.volume.toFixed(3)}`);
}
function courseraVolumeInc() {
    var vid = content.document.getElementById('c-video_html5_api');
    vid.volume = Math.min(1, vid.volume + 0.1);
    dactyl.utils.message(`volume: ${vid.volume.toFixed(3)}`);
}
function courseraJumpTo(s) {
    var vid = content.document.getElementById('c-video_html5_api');
    vid.currentTime = s;
    dactyl.utils.message(`time: ${vid.currentTime.toFixed(2)}`);
}
function courseraJumpBackward(delta) {
    var vid = content.document.getElementById('c-video_html5_api');
    vid.currentTime = vid.currentTime - delta;
    dactyl.utils.message(`time: ${vid.currentTime.toFixed(2)}`);
}
function courseraJumpForward(delta) {
    var vid = content.document.getElementById('c-video_html5_api');
    vid.currentTime = vid.currentTime + delta;
    dactyl.utils.message(`time: ${vid.currentTime.toFixed(2)}`);
}
function courseraDisplay() {
    var vid = content.document.getElementById('c-video_html5_api');
    dactyl.utils.message(`time:\t${vid.currentTime.toFixed(2)}\nvolume:\t${vid.volume.toFixed(3)}\nrate:\t${vid.playbackRate.toFixed(1)}`);
}
function courseraScrollToNextHighlighted() {
    var hilited = Array.from(content.document.querySelectorAll('.highlighted'));
    "jump to first match below viewport; if none, jump back to first match"
    var i = Math.max(0, hilited.findIndex(e => e.getBoundingClientRect().y > content.window.innerHeight));
    "scroll the element into view at bottom of page (since navbar obscures top)"
    hilited[i].scrollIntoView(false);
    return i;
}

EOF

" ,-----------------,
" | Coursera: hints |
" '-----------------'
" coursera: jump to match in transcript: mode ẖ "
set eht+=[ẖ]:.highlighted
js hints.addMode("ẖ", "Jump to match in transcript", elem => elem.click());

map <site>f
    \ -description "Hints mode: jump to match in transcript"
    \ -js hints.show("ẖ");

" ,---------------------------------,
" | Coursera: commands and bindings |
" '---------------------------------'
command! -nargs=1 courseravolume -js courseraVolume(args[0]);
command! -nargs=1 courserarate -js courseraRate(args[0]);
command! -nargs=1 courserajump -js courseraJumpTo(args[0]);
command! courseradisplay -js courseraDisplay();
map <Space> -js courseraTogglePaused();
map <Return> -js courseraTogglePaused();
map <site>c -js courseraTogglePaused();
map <site><A-h> -js courseraJumpBackward(1);
map <site><A-l> -js courseraJumpForward(1);
map <site>h -js courseraJumpBackward(5);
map <site>l -js courseraJumpForward(5);
map <site>H -js courseraJumpBackward(25);
map <site>L -js courseraJumpForward(25);
map <site>r :courserarate<Space>
map <site>v -count -ex js courseraVolume(parseInt(<count>)/10);
map <site>V :courseravolume<Space>
map <site>, -js courseraRateDec();
map <site>. -js courseraRateInc();
map <site>j -js courseraVolumeInc();
map <site>k -js courseraVolumeDec();
map <site>? -js courseraDisplay();
map <site><Tab> -js courseraScrollToNextHighlighted();
"Arrow Keys"
map <S-Left> -js courseraJumpBackward(2);
map <S-Right> -js courseraJumpForward(2);
map <Left> -js courseraJumpBackward(5);
map <Right> -js courseraJumpForward(5);
map <A-Left> -js courseraJumpBackward(20);
map <A-Right> -js courseraJumpForward(20);
map <C-Left> -js courseraJumpBackward(60);
map <C-Right> -js courseraJumpForward(60);
map <C-Up> -js courseraVolumeInc();
map <C-Down> -js courseraVolumeDec();

group user

" -----------------------------------------------------------------------------
" ,-----------------,
" | AnimeLyrics.com |
" '-----------------'
group animelyrics -locations=animelyrics.com
map <leader>hkc -js CommandExMode().open("map -group animelyrics <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group animelyrics <site>")

" Go to "Print view with kanji" if it exists, or else "Print view"
map -b <site>P <C-v>'Print<Space>view<f3><CR>

" -----------------------------------------------------------------------------
" ,----------,
" | about: * |
" '----------'
group about -locations=chrome:*,about:addons,about:config,about:cache,about:debugging,about:downloads,about:performance,about:plugins,about:support
map <leader>hkc -js CommandExMode().open("map -group about <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group about <site>")

map -g about -b j <C-v><Down>
map -g about -b k <C-v><Up>
"
map -g about -b J <C-v><PageDown>
map -g about -b K <C-v><PageUp>
map -g about -b <C-d> <C-v><PageDown>
map -g about -b <C-u> <C-v><PageUp>
map -g about -b gg <C-v><Home>
map -g about -b G <C-v><End>

group user

" -------------------------------------------------------------------------------
" ,--------------,
" | About:addons |
" '--------------'
group aboutaddons -locations=about:addons
map <leader>hkc -js CommandExMode().open("map -group aboutaddons <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group aboutaddons <site>")

js <<EOF

function addonsGet() {
    var getAddonsButton = content.document.getElementById("category-discover");
    getAddonsButton.click();
}

function addonsClickCategory(category) {
    var getButton = content.document.getElementById(category);
    getButton.click();
}

EOF

command! addonsget        -js addonsClickCategory("category-discover");
command! addonsextension  -js addonsClickCategory("category-extension");
command! addonsuserscript -js addonsClickCategory("category-greasemonkey-user-script");
command! addonsuserstyle  -js addonsClickCategory("category-userstyle");
command! addonsappearance -js addonsClickCategory("category-theme");
command! addonsplugin     -js addonsClickCategory("category-plugin");
command! addonsservice    -js addonsClickCategory("category-service");
map <site>a -js addonsClickCategory("category-discover");
map <site>e -js addonsClickCategory("category-extension");
map <site>u -js addonsClickCategory("category-greasemonkey-user-script");
map <site>U -js addonsClickCategory("category-userstyle");
map <site>t -js addonsClickCategory("category-theme");
map <site>p -js addonsClickCategory("category-plugin");
map <site>s -js addonsClickCategory("category-service");

group user

" -------------------------------------------------------------------------------
" ,--------------,
" | about:newtab |
" '--------------'
group aboutnewtab -locations=about:newtab
map <leader>hkc -js CommandExMode().open("map -group aboutnewtab <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group aboutnewtab <site>")

" === hint modes === "
" links "
set eht+=ņ:.newtab-link
js hints.addMode("ņ", "Follow link", clickSelector);
set eht+=Ņ:.newtab-link
js hints.addMode("Ņ", "Follow link in background tab", elem => buffer.followLink(elem, dactyl.BACKGROUND_TAB));
" buttons "
set eht+=ɳ:.newtab-control
js hints.addMode("ɳ", "Click new tab control", clickSelector);

map f -description "Follow link" -js hints.show('ņ');
map F -description "Follow link in background tab" -js hints.show('Ņ');
map gf -description "Follow multiple links in background tabs" g;Ņ
map <site>c -description "Click control buttons (pin, remove)" -js hints.show('ɳ');

group user
" -------------------------------------------------------------------------------
" ,-------------------,
" | about:preferences |
" '-------------------'
group aboutpreferences -locations=about:preferences,about:preferences#*
map <leader>hkc -js CommandExMode().open("map -group aboutpreferences <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group aboutpreferences <site>")

map <site>z <pass-all-keys>

command! aprefsgeneral      -js clickSelector("#category-general");
command! aprefssearch       -js clickSelector("#category-search");
command! aprefscontent      -js clickSelector("#category-content");
command! aprefsapplications -js clickSelector("#category-application");
command! aprefsprivacy      -js clickSelector("#category-privacy");
command! aprefssecurity     -js clickSelector("#category-security");
command! aprefssync         -js clickSelector("#category-sync");
command! aprefsadvanced     -js clickSelector("#category-advanced");
map <site>g -ex aprefsgeneral
map <site>/ -ex aprefssearch
map <site>c -ex aprefscontent
map <site>a -ex aprefsapplications
map <site>p -ex aprefsprivacy
map <site>s -ex aprefssecurity
map <site>y -ex aprefssync
map <site>v -ex aprefsadvanced

group user

" -----------------------------------------------------------------------------
" ,-------------,
" | Archive.org |
" '-------------'

js <<EOF
function waybackToggle(opts={}) {
    var url = content.location.href.toLowerCase();
    var waybackRegex = /https?:\/\/web\.archive\.org\/web\/(\d+)(id_)?\/(.*)/;
    var match = waybackRegex.exec(url);
    if (match) {
        dactyl.open(match[3], opts);
    }
    else {
        dactyl.open(`http://web.archive.org/web/${url}`, opts);
    }
}
EOF

command! waybacktoggle
    \ -bang
    \ -description "Toggle web page and archive.org copy"
    \ -js bang ? waybackToggle({where: dactyl.NEW_TAB}) : waybackToggle()
map <xtra>w -ex waybacktoggle

" ===== GROUP START =====

group wayback -locations=archive.org
map <leader>hkc -js CommandExMode().open("map -group wayback <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group wayback <site>")

map <site>t -ex waybacktoggletoolbar
map <site>T -js waybackToggleToolbarUrl();

" Wayback Toolbar Go To Previous Capture:
" ( Searches for a year (starting with '20' using FF link search,
"   then tabs backwards twice to land on back link and activates )
map -b <site>b <C-v>'20<S-Tab><S-Tab><CR>

command! waybacktoggletoolbar
    \ -bang
    \ -description "Hides/shows Wayback Machine toolbar. With [!], toggles between regular and no-toolbar URLs"
    \ -js bang ? waybackToggleToolbarUrl() : waybackToggleToolbar();

js <<EOF

function waybackToggleToolbar() {
    var url = content.location.href
    var waybackRegex = /(https?:\/\/web\.archive\.org\/web\/\d+)(id_)?(\/.*)/;
    var match = waybackRegex.exec(url);
    if (match[2]) {
        dactyl.open(match[1] + match[3]);
    }
    else {
        var toolbar = content.document.getElementById("wm-ipp");
        if (toolbar.style.display == "none")
            toolbar.style.display = "block";
        else
            toolbar.style.display = "none";
    }
}

function waybackToggleToolbarUrl() {
    var url = content.location.href
    var waybackRegex = /(https?:\/\/web\.archive\.org\/web\/\d+)(id_)?(\/.*)/;
    var match = waybackRegex.exec(url);
    if (match[2]) {
        dactyl.open(match[1] + match[3]);
    }
    else {
        dactyl.open(match[1] + "id_" + match[3]);
    }
}

EOF

group user

" -------------------------------------------------------------------------------
" ,--------------,
" | BangGood.com |
" '--------------'
group banggood -locations=banggood.com
map <leader>hkc -js CommandExMode().open("map -group banggood <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group banggood <site>")

" .preference>li allows hints for the selection boxes on the settings page "
set hinttags=:-moz-any-link,area,button,iframe,input:not([type=hidden]):not([disabled]),label[for],select,textarea,[onclick],[onmouseover],[onmousedown],[onmouseup],[oncommand],[tabindex],[role=link],[role=button],[contenteditable=true],svg,a[class^=vote],a[class^=speed],div.ita-hwt-candidate,.preference>li

" === hint modes === "
set eht+=🅱:div.item_box.attr>a
js hints.addMode("🅱", "Select attribute", e=> e.click());
map <site>a -description "Select attribute" ;🅱
map <site>A -description "Select attribute" g;🅱

js <<EOF

function bgToggleReviews() {
    var url = buffer.URL;
    var product_regex  = /https:\/\/www.banggood.com\/(.*)-p-(\d+)\.html([?#].*)?/;
    var reviews_regex  = /https:\/\/www.banggood.com\/(.*)-reviews-p(\d+)\.html([?#].*)?/;
    var q_index_regex  = /https:\/\/www.banggood.com\/(.*)-qc-p(\d+)\.html([?#].*)?/;
    var p_matches = url.match(product_regex);
    var r_matches = url.match(reviews_regex);
    var qi_matches = url.match(q_index_regex);
    if (r_matches)
        newurl = `https://www.banggood.com/${r_matches[1]}-p-${r_matches[2]}.html`;
    else if (qi_matches)
        newurl = `https://www.banggood.com/${qi_matches[1]}-p-${qi_matches[2]}.html`;
    else if (p_matches)
        newurl = `https://www.banggood.com/${p_matches[1]}-reviews-p${p_matches[2]}.html`;
    else return;
    dactyl.open(newurl);
}

function bgNextPage(n=1) {
    if (n<=0) return;
    var doc = content.document;
    var nextbutton = doc.querySelector('.page_num a .arrow_d').parentElement;
    if (nextbutton) {
        nextbutton.click();
        bgNextPage(n-1);
    } else utils.message('selector not found');
}

function bgPreviousPage(n=1) {
    if (n<=0) return;
    var doc = content.document;
    var nextbutton = doc.querySelector('.page_num a .arrow_c').parentElement;
    if (nextbutton) {
        nextbutton.click();
        bgNextPage(n-1);
    } else utils.message('selector not found');
}

function bgNextPageByURL(n=1) {
    n = n || 1;
    var url = buffer.URL;
    var search_regex = /https:\/\/www.banggood.com\/search\/([^/]+)\/([a-zA-Z0-9-]*)(_p-(\d+))?\.html/;
    var search_matches = url.match(search_regex);
    var review_regex = /https:\/\/www.banggood.com\/(.*)-reviews-p(\d+)\.html(\?page=(\d+))?$/;
    var review_matches = url.match(review_regex);
    if (search_matches) {
        var searchterm = search_matches[1];
        var searchparams = search_matches[2];
        var page_expr = search_matches[3];
        var p = page_expr ? parseInt(search_matches[4]) : 1;
        dactyl.open(`https://www.banggood.com/search/${searchterm}/${searchparams}_p-${p+n}.html`);
    } else if (review_matches) {
        var itemname = review_matches[1];
        var itemnumber = review_matches[2];
        var page_expr = review_matches[3];
        var p = page_expr ? parseInt(review_matches[4]) : 1;
        dactyl.open(`https://www.banggood.com/${itemname}-reviews-p${itemnumber}.html?page=${p+n}`);
    }
}

function bgPreviousPageByURL(n=1) {
    n = n || 1;
    var url = buffer.URL;
    var search_regex = /https:\/\/www.banggood.com\/search\/([^/]+)\/([a-zA-Z0-9-]*)(_p-(\d+))?\.html/;
    var search_matches = url.match(search_regex);
    var review_regex = /https:\/\/www.banggood.com\/(.*)-reviews-p(\d+)\.html(\?page=(\d+))?$/;
    var review_matches = url.match(review_regex);
    if (search_matches) {
        var searchterm = search_matches[1];
        var searchparams = search_matches[2];
        var page_expr = search_matches[3];
        var p = page_expr ? parseInt(search_matches[4]) : 1;
        dactyl.open(`https://www.banggood.com/search/${searchterm}/${searchparams}_p-${p+n}.html`);
        if (p-n <= 1)
            dactyl.open(`https://www.banggood.com/search/${searchterm}/${searchparams}.html`);
        else
            dactyl.open(`https://www.banggood.com/search/${searchterm}/${searchparams}_p-${p-n}.html`);
    } else if (review_matches) {
        var itemname = review_matches[1];
        var itemnumber = review_matches[2];
        var page_expr = review_matches[3];
        var p = page_expr ? parseInt(review_matches[4]) : 1;
        if (p-n <= 1)
            dactyl.open(`https://www.banggood.com/${itemname}-reviews-p${itemnumber}.html`);
        else
            dactyl.open(`https://www.banggood.com/${itemname}-reviews-p${itemnumber}.html?page=${p-n}`);
    }
}

function bgNumEntries(n=3) {
    var div = content.document.getElementsByClassName('order_show_page')[0];
    var buttons = Array.from(div.getElementsByTagName('a'));
    buttons[n-1].click();
}

function bgTogglePhotoZoom() {
    if (content.document.getElementsByClassName('module').length)
        content.document.querySelector('.good_photo_zoom>.close').click();
    else
        content.document.querySelector('.good_photo img').click();
}

function bgGetProductPhotoList() {
    var doc = content.document;
    if (content.document.getElementsByClassName('module').length) {
        return Array.from(doc.querySelectorAll('.good_photo_zoom_list>ul>li'));
    } else {
        return Array.from(doc.querySelectorAll('.good_photo_min>ul>li'));
    }
}

function bgGetNthProductPhoto(n) { return bgGetProductPhotoList()[n]; }
function bgGetNthProductPhotoRef(n) {
    return bgGetProductPhotoList()[n].firstChild.getAttribute('ref');
}
function bgGetNthProductPhotoBigRef(n) {
    return bgGetProductPhotoList()[n].firstChild.getAttribute('big');
}

function bgSelectNthProductPhoto(n) {
    var mainPhoto = content.document.querySelector('.good_photo_max img');
    mainPhoto.setAttribute('src', bgGetNthProductPhotoBigRef(n));
}

EOF

command! bgnextpage -nargs=? -js bgNextPage(args[0]||1);
command! bgpreviouspage -nargs=? -js bgPreviousPage(args[0]||1);
command! bgnextpagebyurl -nargs=? -js bgNextPageByURL(args[0]||1);
command! bgpreviouspagebyurl -nargs=? -js bgPreviousPageByURL(args[0]||1);
command! bgselectproductphoto -nargs=1 -js bgSelectNthProductPhoto(args[0]);

map ]] -count -ex bgnextpage <count>
map [[ -count -ex bgpreviouspage <count>
map <site><Space> -description "Toggle reviews" -js bgToggleReviews();
map <site>c -description "Toggle photo zoom" -js bgTogglePhotoZoom();
map <site>x -description "Maximum entries per page" -js bgNumEntries();

map <site>oc -description "View cart" -ex open https://www.banggood.com/shopping_cart_new.php
map <site>oa -description "View account" -ex open https://www.banggood.com/index.php?com=account
map <site>oo -description "View account/orders" -ex open https://www.banggood.com/index.php?com=account&t=ordersList
map <site>og -description "View account/giftcards" -ex open https://www.banggood.com/index.php?com=account&t=giftcard
map <site>ow -description "View account/wishlist" -ex open https://www.banggood.com/index.php?com=account&t=wishlist

map <site>tc -description "View cart (new tab)" -ex tabopen https://www.banggood.com/shopping_cart_new.php
map <site>ta -description "View account (new tab)" -ex tabopen https://www.banggood.com/index.php?com=account
map <site>to -description "View account/orders (new tab)" -ex tabopen https://www.banggood.com/index.php?com=account&t=ordersList
map <site>tg -description "View account/giftcards (new tab)" -ex tabopen https://www.banggood.com/index.php?com=account&t=giftcard
map <site>tw -description "View account/wishlist (new tab)" -ex tabopen https://www.banggood.com/index.php?com=account&t=wishlist

map <site>1 -description "View first photo"   -js bgSelectNthProductPhoto(0);
map <site>2 -description "View second photo"  -js bgSelectNthProductPhoto(1);
map <site>3 -description "View third photo"   -js bgSelectNthProductPhoto(2);
map <site>4 -description "View fourth photo"  -js bgSelectNthProductPhoto(3);
map <site>5 -description "View fifth photo"   -js bgSelectNthProductPhoto(4);
map <site>6 -description "View sixth photo"   -js bgSelectNthProductPhoto(5);
map <site>7 -description "View seventh photo" -js bgSelectNthProductPhoto(6);

group user

" -------------------------------------------------------------------------------
" ,---------,
" | Bato.to |
" '---------'
group batoto -locations=bato.to
map <leader>hkc -js CommandExMode().open("map -group batoto <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group batoto <site>")

js <<EOF
function batoDecorateLinks() {
    var reader=content.document.getElementById('reader');
    var imgs=Array.from(reader.getElementsByTagName('img'));
    var np=imgs.filter(e=>e.title=='Next Page')[0];
    np.setAttribute('alt', '>>');
    var pp=imgs.filter(e=>e.title=='Previous Page')[0];
    pp.setAttribute('alt', '<<');
}

function batoGetImgURL() {
    var img = content.document.querySelector("#comic_page");
    return img.src;
}

function batoGetImgURLandNumPages() {
    return `${batoGetImgURL()} ${batoGetNumPages()}`;
}

function batoGoToPage(n, where=dactyl.CURRENT_TAB) {
    if (!n) n = 1;
    var pageselect = content.document.querySelector("#page_select");
    var currentpage = pageselect.value;
    var pages = pageselect.children;
    dactyl.open(pages[n-1].value, { where: where });
}

function batoNextPage() {
    var reader=content.document.getElementById('reader');
    var links=Array.from(reader.getElementsByTagName('a'));
    var link = links.filter(l=>l.firstChild.title=='Next Page')[0];
    link.click();
}

function batoPreviousPage() {
    var reader=content.document.getElementById('reader');
    var links=Array.from(reader.getElementsByTagName('a'));
    var link = links.filter(l=>l.firstChild.title=='Previous Page')[0];
    link.click();
}

function batoGetNumPages() {
    var menu = content.document.getElementById('page_select');
    return menu.children.length;
}

function batoGetNextChapterUrl() {
    var reader = content.document.getElementById('reader');
    var selectelts = Array.from(reader.getElementsByTagName('select'));
    var chselect = selectelts.filter(e=>e.name == 'chapter_select')[0];
    var currenturl = chselect.value;
    var chapters = chselect.children;
    for (var i=chapters.length-1; i>=0; --i)
        if (chapters[i].value == currenturl) {
            var nextch = chapters[i-1];
            return nextch ? nextch.value : null;
        }
}

function batoGoToChapterIndex(n, where=dactyl.CURRENT_TAB) {
    "Go to nth chapter listed (bottom to top)"
    if (!n) n = 1;
    var reader = content.document.getElementById('reader');
    var selectelts = Array.from(reader.getElementsByTagName('select'));
    var chselect = selectelts.filter(e=>e.name == 'chapter_select')[0];
    var currentch = chselect.value;
    var chapters = chselect.children;
    var N = chapters.length;
    var idx = N - n;
    dactyl.open(chapters[idx].value, { where: where });
}

function batoGetPreviousChapterUrl() {
    var reader = content.document.getElementById('reader');
    var selectelts = Array.from(reader.getElementsByTagName('select'));
    var chselect = selectelts.filter(e=>e.name == 'chapter_select')[0];
    var currenturl = chselect.value;
    var chapters = chselect.children;
    for (var i=chapters.length-1; i>=0; --i)
        if (chapters[i].value == currenturl) {
            var previousch = chapters[i+1];
            return previousch ? previousch.value : null;
        }
}

function batoNextChapter(where=dactyl.CURRENT_TAB) {
    var nextch = batoGetNextChapterUrl();
    dactyl.open(nextch, { where: where })
}

function batoPreviousChapter(where=dactyl.CURRENT_TAB) {
    var previousch = batoGetPreviousChapterUrl();
    dactyl.open(previousch, { where: where })
}

EOF

command! batodecoratelinks -js batoDecorateLinks();
command! batoyankimgurl -js utils.cbWrite(batoGetImgURL());
command! batonumpages -js utils.message(batoGetNumPages());
command! batoyankinfo -js utils.cbWrite(batoGetImgURLandNumPages());
command! batonextpage -js batoNextPage();
command! batopreviouspage -js batoPreviousPage();
command! -bang batonextchapter -js batoNextChapter(bang?'tab':'here');
command! -bang batopreviouschapter -js batoPreviousChapter(bang?'tab':'here');
command! -nargs ? -bang batogotopage -js batoGoToPage(args[0], bang?'tab':'here');
command! -nargs ? -bang batogotochapterindex -js batoGoToChapterIndex(args[0], bang?'tab':'here');

map <site># -ex batonumpages
map <site>y -ex batoyankimgurl
map <site>i -ex batoyankinfo
map <site>d -ex batodecoratelinks
map <site>, -ex batopreviouspage
map <site>. -ex batonextpage
map <site>n -ex batonextchapter
map <site>p -ex batopreviouschapter
map <site>g :batogotopage<Space>
map <site>c :batogotochapterindex<Space>

group user

" -----------------------------------------------------------------------------
" ,--------,
" | BookZZ |
" '--------'
group bookzz -locations=bookzz.org
map <leader>hkc -js CommandExMode().open("map -group bookzz <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group bookzz <site>")

map <site>z -ex loginAndSearch

command! loginAndSearch
    \ -description "Sign in and repeat search for ID in input field"
    \ -js loginAndSearch(getSearchField());
map <xtra>z
    \ -description "Sign in and repeat search for ID in input field"
    \ -js loginAndSearch(getSearchField());

js <<EOF

var signinurl = "http://singlelogin.org/";

function loginAndSearch() {
    var searchId = content.document.getElementsByTagName("input")[0].value;
    var curT = gBrowser.selectedTab;
    var curTB = gBrowser.getBrowserForTab(curT);
    function searchForId() {
        var searchFields = content.document.getElementsByTagName("input");
        searchFields[0].value = searchId;
        searchFields[1].click();
        curTB.removeEventListener("DOMContentLoaded", searchForId);
    }
    curTB.loadURI(signinurl);
    curTB.addEventListener("DOMContentLoaded", searchForId);
}

EOF

group user

" -------------------------------------------------------------------------------
" ,-------------,
" | Crunchyroll |
" '-------------'
group crunchyroll -locations=crunchyroll.com
map <leader>hkc -js CommandExMode().open("map -group crunchyroll <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group crunchyroll <site>")

js <<EOF

function crDL() {
    var title = content.document.querySelector("#source_showview h1").innerText;
    var links = content.document.querySelector(".portrait-grid").getElementsByClassName("block-link");
    var urls = Array.from(links).map(l=>l.href);
    var dir = `~/anime/${title}`;
    dactyl.execute(`!mkdir -p ${dir}`);
    for (url of urls) {
        dactyl.execute(`!cd ${dir}; youtube-dl ${url}`);
    }
}

EOF

command! crdl -js crDL();

group user

" -------------------------------------------------------------------------------
" ,------,
" | eBay |
" '------'
group ebay -locations=ebay.com,ebay.com.*
map <leader>hkc -js CommandExMode().open("map -group ebay <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group ebay <site>")

js <<EOF

function ebayToAU() {
    var url = content.location.href.toLowerCase();
    var ebayRegex = /https?:\/\/www.ebay.com(\.\w\w)?\/(.*)/;
    var matches = url.match(ebayRegex);
    if (matches[1] != '.au')
        dactyl.open("https://www.ebay.com.au/" + matches[2])
}

function ebayRemoveByTitle(regex) {
    var results = Array.from(content.document.getElementsByClassName('lvresult'));
    var toRemove = results.filter(
        div=>div.getElementsByClassName('lvtitle')[0].innerText.match(regex)
    );
    toRemove.forEach(div=>div.remove());
}

function ebayFilterByTitle(regex) {
    var results = Array.from(content.document.getElementsByClassName('lvresult'));
    var toRemove = results.filter(
        div=>!div.getElementsByClassName('lvtitle')[0].innerText.match(regex)
    );
    toRemove.forEach(div=>div.remove());
}

EOF

command! ebayremovebytitle
    \ -description "Remove entries whose titles matches a smart-case regex."
    \ -nargs=1
    \ -js ebayRemoveByTitle(stringToSmartCaseRegExp(args[0]));

command! ebayfilterbytitle
    \ -description "Remove entries whose titles fail to match a smart-case regex."
    \ -nargs=1
    \ -js ebayFilterByTitle(stringToSmartCaseRegExp(args[0]));

map <site>a -description "Go to Australian site" -js ebayToAU();

group user

" -------------------------------------------------------------------------------
" ,--------------,
" | Fasttech.com |
" '--------------'
group fasttech -locations=fasttech.com
map <leader>hkc -js CommandExMode().open("map -group fasttech <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group fasttech <site>")
map <site>o<C-h> -js CommandExMode().open("map -group fasttech <site>o")
map <site>t<C-h> -js CommandExMode().open("map -group fasttech <site>t")

" === hint modes === "
set eht+=🅵:.dropit
js hints.addMode("🅵", "Move to wish list", e=> e.querySelector('a+ul a').click());
map <site>w -description "Move to wish list" -js hints.show('🅵');
set eht+=🄵:td.MediumLabel
js hints.addMode("🄵", "Copy Gift Card", e=> utils.cbWrite(e.innerText.trim()));
map <site>g
    \ -description "Copy Gift Card"
    \ -js if (buffer.URL.match(/giftcertificates/)) hints.show('🄵');
    \     else dactyl.open('https://www.fasttech.com/account/giftcertificates', 'tab');

js <<EOF
function fasttechToggleReviews () {
    var url = buffer.URL;
    var product_regex  = /https:\/\/www.fasttech.com\/p(roducts?)?\/(.*\/)?([^/]+)/;
    var product_prefix = 'https://www.fasttech.com/p/';
    var reviews_regex = /https:\/\/www.fasttech.com\/reviews\/([^/]+)/;
    var reviews_prefix = 'https://www.fasttech.com/reviews/';
    var p_matches = url.match(product_regex);
    var r_matches = url.match(reviews_regex);
    if (r_matches)
        newurl = product_prefix + r_matches[1];
    else if (p_matches)
        newurl = reviews_prefix + p_matches[3];
    else return;
    dactyl.open(newurl);
}

function fasttechToggleChat() {
    var hiddenDiv = content.document.querySelector('div.olark-hidden.olark-size-md');
    if (hiddenDiv)
        content.document.querySelector('.olark-launch-button').click();
    else
        content.document.querySelector('.olark-top-bar-button').click();
}

function fasttechApplyGiftCertificate(gc) {
    var expandLink = content.document.querySelector('#GCExpand');
    if (expandLink) expandLink.click();
    window.setTimeout(
        ()=>{content.document.querySelector('#content_GiftCertificateCode').value=gc;},
        500
    );
}
EOF

map <site>ag -description "Apply Gift Certificate from clipboard"
    \        -js fasttechApplyGiftCertificate(dactyl.clipboardRead());
map <site>c  -description "Toggle reviews" -js fasttechToggleReviews();
map <site>h  -description "Toggle chat" -js fasttechToggleChat()
map <site>oc -description "View cart" -ex open https://www.fasttech.com/shoppingcart
map <site>oa -description "View account/" -ex open https://www.fasttech.com/account
map <site>oo -description "View account/orders" -ex open https://www.fasttech.com/account/orders
map <site>og -description "View account/giftcertificates"
    \        -ex open https://www.fasttech.com/account/giftcertificates
map <site>ot -description "View tickets" -ex open https://support.fasttech.com/tickets
map <site>ow -description "View account/wishlists" -ex open https://www.fasttech.com/account/wishlists

map <site>tc -description "View cart (new tab)" -ex tabopen https://www.fasttech.com/shoppingcart
map <site>ta -description "View account/ (new tab)" -ex tabopen https://www.fasttech.com/account
map <site>to -description "View account/orders (new tab)" -ex tabopen https://www.fasttech.com/account/orders
map <site>tg -description "View account/giftcertificates (new tab)"
    \        -ex tabopen https://www.fasttech.com/account/giftcertificates
map <site>tt -description "View tickets (new tab)" -ex tabopen https://support.fasttech.com/tickets
map <site>tw -description "View account/wishlists (new tab)" -ex tabopen https://www.fasttech.com/account/wishlists

style -name=fasttechPostSeparator https://www.fasttech.com/*
    \ .ForumHeader { border-top: solid 1px #AAA !important; }
styleenable https://www.fasttech.com/*

group user

" -------------------------------------------------------------------------------
" ,--------------,
" | GearBest.com |
" '--------------'
group gb -locations=gearbest.com
map <leader>hkc -js CommandExMode().open("map -group gb <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group gb <site>")

js <<EOF

function gbToggleReviews() {
    var reviewRegex = /(.*)\/review.html(\?page=\d+)?$/;
    var productRegex = /(.*\/pp_\d+).html$/;
    var url = buffer.URL;
    var matches;
    if (matches = url.match(reviewRegex))
        dactyl.open(matches[1]+".html");
    else if (matches = url.match(productRegex))
        dactyl.open(matches[1]+"/review.html?page=1");
}

EOF

map <site>c -js gbToggleReviews();

group user

" -------------------------------------------------------------------------------
" ,----------------,
" | GetComics.Info |
" '----------------'
" =====GETCOMICS.INFO=====
group gci -locations=getcomics.info
map <leader>hkc -js CommandExMode().open("map -group gci <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group gci <site>")

js <<EOF
function gciNextPageURL() {
    var url = buffer.URL.spec;
    var regex = /getcomics.info\/page\/(\d+)/;
    var match = url.match(regex);
    if (match) {
        var replstr = `getcomics.info/page/${Number(match[1])+1}`;
        return url.replace(regex, replstr);
    } else
        return url.replace('getcomics.info', 'getcomics.info/page/2');
}

function gciPreviousPageURL() {
    var url = buffer.URL.spec;
    var regex = /getcomics.info\/page\/(\d+)/;
    var match = url.match(regex);
    if (match && match[1] > 1) {
        var replstr = `getcomics.info/page/${Number(match[1])-1}`;
        return url.replace(regex, replstr);
    } else
        return url;
}
EOF

map ]] -js dactyl.open(gciNextPageURL());
map [[ -js dactyl.open(gciPreviousPageURL());

map <site>c -description "Download" -js content.document.querySelector('.aio-red').click();

" =====GETCOMICS.GQ=====
group gcgq -locations=getcomics.gq,getcomics.ga
map <leader>hkc -js CommandExMode().open("map -group gcgq <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group gcgq <site>")

map <site>c -description "Get Link" -js content.document.querySelector('.button.green').click();

" =====SAFELINKCONVERTER.COM=====
group gclinkconvert -locations=decrypt2.safelinkconverter.com
map <leader>hkc -js CommandExMode().open("map -group gclinkconvert <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group gclinkconvert <site>")

map <site>c -description "Convert Link" -js gcConvertLink();
map <site>d -description "Close tabs" -js gcClose();

command! gcclose -js closeTabsLeftWhileMatching(/(getcomics.g.|shorte.st|sh.st|viid.me|safelinkconverter.com)\//, 3);

js <<EOF
function gcConvertLinkOrClose() {
    var URLsRegex = /(getcomics.g.|shorte.st|sh.st|viid.me|cllkme.com|safelinkconverter.com)\//;
    var redirect = content.document.querySelector('.redirect_url div');
    if (redirect.innerText.match(/three.comicfiles.ru/)) {
        closeTabsLeftWhileMatching(URLsRegex, 3);
        utils.message("three")
    }
    else {
        redirect.click();
    }
}

function gcConvertLink() {
    var redirect = content.document.querySelector('.redirect_url div');
    redirect.click();
}

function gcClose() {
    var URLsRegex = /(getcomics.g.|shorte.st|sh.st|viid.me|cllkme.com|safelinkconverter.com)\//;
    closeTabsLeftWhileMatching(URLsRegex, 3);
}
EOF

" =====SHORTE.ST=====
group shortest -locations=shorte.st,viid.me,sh.st,cllkme.com,clkmein.com
map <leader>hkc -js CommandExMode().open("map -group shortest <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group shortest <site>")

map <site>c -description "Click link or close temp tabs" -js shortestClickOrClose();
map <site>d -description "Close temp tabs" -js shortestClose();

js <<EOF
function shortestClickOrClose() {
    var URLsRegex = /(getcomics.g.|shorte.st|sh.st|viid.me|cllkme.com|safelinkconverter.com)\//;
    if (content.document.alreadyClicked)
        closeTabsLeftWhileMatching(URLsRegex, 3);
    else {
        shortestClick();
        content.document.alreadyClicked = true;
    }
}
function shortestClick() {
    dactyl.open("javascript:app.skipClickNotify.redirectToTargetUrl();");
    void(0);
}
function shortestClose() {
    var URLsRegex = /(getcomics.g.|shorte.st|sh.st|viid.me|cllkme.com|safelinkconverter.com)\//;
    closeTabsLeftWhileMatching(URLsRegex, 3);
}
EOF

group user

" -----------------------------------------------------------------------------
" ,------------,
" | Github.com |
" '------------'

js var ghusername = 'troyp';

js function ghTabopenRepo (s) { dactyl.tabopen(`https://github.com/${s}`); }
command! ghtabopenrepo -nargs=1 -js ghTabopenRepo(args[0]);
map <goto>gh :tabopen https://github.com/troyp?tab=repositories
map <goto>gH :open https://github.com/troyp?tab=repositories

" ===== GROUP START =====
group github -locations=github.com,githubusercontent.com,rawgit.com
map <leader>hkc -js CommandExMode().open("map -group github <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group github <site>")

map <site>h -ex ghtogglehtmlview
map <site>p -description "Permanent link" -js ghGetPermalink();
map <site>r -description "open raw file" -js hints.show("🄶");
map <site>R -description "open raw file (new tab)" -js hints.show("🅶");
map <site>oh -description "open help" -js ghOpenHelp('here');
map <site>og -description "my gists" -js dactyl.open('https://gist.github.com/'+ghusername, 'here');
map <site>oG
    \ -description "starred gists"
    \ -js dactyl.open(`https://gist.github.com/${ghusername}/starred`, 'here');
map <site>ow -description "open wiki" -js dactyl.open(ghGetWikiURL(), 'here');
map <site>th -description "open help (new tab)" -js ghOpenHelp('tab');
map <site>tg -description "my gists (new tab)" -js dactyl.open('https://gist.github.com/'+ghusername, 'tab');
map <site>tG
    \ -description "starred gists"
    \ -js dactyl.open(`https://gist.github.com/${ghusername}/starred`, 'tab');
map <site>tw -description "open wiki (new tab)" -js dactyl.open(ghGetWikiURL(), 'tab');
map <site>y<C-h> -description "(show bindings)" -js CommandExMode().open("map -group github <site>y")
map <site>yg -description "yank git repos link" -js ghCopyRepoLinkGit();
map <site>yr -description "yank raw file URL" -js hints.show("Ⓖ");
map <site>yu -description "yank user/repo name" -js ghCopyUserAndRepo();
map <site>yw -description "yank wiki git URL" -js ghCopyWikiGitURL();
map <site>yy -description "yank https repos link" -js ghCopyRepoLinkHttps();

command! ghtogglehtmlview
     \ -description "Toggle between HTML file and rendered view"
     \ -js ghToggleHTMLView();

command! ghgotolines -nargs=+ -js ghGgoToLines(args);

command! ghfilefinder -js ghFileFinder();
map <site>/ -ex ghfilefinder

command! ghsavethisreadmetodoc
    \ -bang
    \ -description "Download README for current repo to /opt/doc/"
    \ -js ghSaveThisReadmeToDoc(bang);
map <site>r -ex ghsavethisreadmetodoc

map <site>c -js ghClickReadme();

" === hint modes === "
set eht+=🄶:':-moz-any-link','area[href]','img[src]','iframe[src]'
js hints.addMode("🄶", "open raw file", e=>dactyl.open(e.href+'?raw=true', where='here'));
set eht+=🅶:':-moz-any-link','area[href]','img[src]','iframe[src]'
js hints.addMode("🅶", "open raw file (new tab)", e=>dactyl.open(e.href+'?raw=true', where='tab'));
set eht+=Ⓖ:':-moz-any-link','area[href]','img[src]','iframe[src]'
js hints.addMode("Ⓖ", "copy raw file url", e=>utils.cbWrite(e.href+'?raw=true', where='tab'));

js <<EOF

function ghToggleHTMLView() {
    var url = buffer.URL.toLowerCase();
    var newurl;
    if (url.includes("https://github.com")) {
        var rx = /https:\/\/github.com\/([^/\s]+\/[^/\s]+)\/blob(\/.*)/;
        var match = rx.exec(url);
        newurl = `https://rawgit.com/${match[1]}${match[2]}`;
    }
    else {
        if (url.includes("https://raw.githubusercontent.com"))
            url = url.replace("raw.githubusercontent", "rawgit");
        if (url.includes("https://rawgit.com")) {
            var rx = /https:\/\/rawgit.com\/([^/\s]+\/[^/\s]+)(\/.*)/;
            var match = rx.exec(url);
            newurl = `https://github.com/${match[1]}/blob${match[2]}`;
        }
    }
    dactyl.open(newurl);
}

function ghGoToLines(args) {
    var loc = content.location;
    var url = loc.href.replace(/#.*$/, '');
    var frag = `#L${args[0]}`;
    if (args.length > 1) frag += `-L${args[1]}`;
    loc.href = url + frag;
}

function ghCopyRepoLinkHttps() {
    dactyl.utils.cbWrite(ghGetCloneUrl("https"))
}
function ghCopyRepoLinkGit() {
    dactyl.utils.cbWrite(ghGetCloneUrl("git"))
}
function ghGetUserAndRepo() {
    // var url = ghGetCloneUrl("https");
    var regex = /[^:]+:\/\/github.com\/([^/]+)\/([^/#?]+)(\/.*)?/;
    var match = buffer.URL.match(regex);
    var user = match[1];
    var repo = match[2];
    return [user, repo];
}
function ghGetWikiURL() {
    [user, repo] = ghGetUserAndRepo();
    return `https://github.com/${user}/${repo}/wiki`;
}

function ghGetWikiGitURL() {
    [user, repo] = ghGetUserAndRepo();
    return `https://github.com/${user}/${repo}.wiki.git`;
}

function ghCopyUserAndRepo() {
    [user, repo] = ghGetUserAndRepo();
    var url = ghGetCloneUrl("https");
    dactyl.utils.cbWrite(`${user}/${repo}`);
}

function ghCopyWikiGitURL() { dactyl.utils.cbWrite(ghGetWikiGitURL()); }

function ghDownloadReadmeToDoc(repo, name, ext, overwrite) {
    var overwrite = overwrite ? 't' : '';    // to be interpolated into shell script
    var rawurl = `https://raw.githubusercontent.com/${repo}/master/README.${ext}`;
    var filename = `/opt/doc/${name}-README.${ext}`;
    dactyl.execute(`! if [[ -e ${filename} ]] && [[ -z '${overwrite}' ]]; then kdialog --error "${filename} already exists"; else curl ${rawurl} > ${filename}; fi`);
}
function ghSaveThisReadmeToDoc(overwrite) {
    var matches = buffer.URL.match(/github.com\/([^/]+\/([^/]+))\/blob\/master\/README\.(.+)/);
    var repo = matches[1];
    var name = matches[2];
    var ext = matches[3];
    ghDownloadReadmeToDoc(repo, name, ext, overwrite);
}

function ghClickReadme() {
    var links = content.document.getElementsByTagName( 'a' );
    for ( var i = 0; i < links.length; i++ ) {
        if ( links[i].textContent.includes('README.') )
            links[i].click();
    }
}

function ghGetCloneUrl(urltype) {
    var linkColl = content.document.getElementsByClassName('js-url-field');
    var links = Array.from(linkColl).map((_)=>_.value);
    var httpslink = links.filter((_)=> /^https/.test(_))[0];
    var gitlink = links.filter((_)=> /^git/.test(_))[0];
    switch (urltype) {
        case "git":   return gitlink;
        case "https": return httpslink;
    }
}

function ghFileFinder(where=dactyl.CURRENT_TAB) {
    [user, repo] = ghGetUserAndRepo();
    var ffurl = `https://github.com/${user}/${repo}/find/master`;
    dactyl.open(ffurl, {where:where});
}

function ghGetPermalink() {
    content.document.querySelector('.js-permalink-shortcut').click();
}

function ghOpenHelp(where='here') {
    dactyl.open('https://help.github.com/', where);
    window.setTimeout(()=>dactyl.execute('normal gi'), 1200);
}

EOF


" ===== Spacemacs GROUP START =====
group spacemacs -locations https://github.com/syl20bnr/*
map <leader>hkc -js CommandExMode().open("map -group spacemacs <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group spacemacs <site>")

command! markdowntoorg -nargs=? -js convertMdUrlToOrg(args.length ? args[0] : null);
map <site>o -js convertMdUrlToOrg();
command! slashtohash -nargs=? -js convertLastSlashToHash(args.length ? args[0] : null);
map <site>O -js convertLastSlashToHash();
" To use navigation menu when there are no ids:
"     use ;; to focus the link, then * to jump to it.
autocmd! -group spacemacs
" FIXME!
" autocmd PageLoad https://github.com/syl20bnr/spacemacs -javascript convertMdUrlToOrg(buffer.URL);

group user

" -------------------------------------------------------------------------------
" ,-----------,
" | GoGoAnime |
" '-----------'
group gogoanime -locations=gogoanime.io
map <leader>hkc -js CommandExMode().open("map -group gogoanime <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group gogoanime <site>")

js <<EOF

function togglePlay() {
    var player = content.document.getElementById("my_video_1");
    var playButton = player.getElementsByClassName("vjs-play-control")[0];
    playButton.click();
}

function toggleFullscreen() {
    var player = content.document.getElementById("my_video_1");
    var fullscreenButton = player.getElementsByClassName("vjs-fullscreen-control")[0];
    fullscreenButton.click();
}

EOF

command! toggleplay -description "GoGoAnime.io: Toggle Play/Pause" -js togglePlay();
command! togglefullscreen -description "GoGoAnime.io: Toggle Fullscreen" -js toggleFullscreen();
map <Space> -ex toggleplay
map <C-f11> -ex togglefullscreen

group user

" -------------------------------------------------------------------------------
" ,-------,
" | Gmail |
" '-------'
" For the old-style GMail interface. "

group gmail -locations=mail.google.com
map <leader>hkc -js CommandExMode().open("map -group gmail <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group gmail <site>")

js <<EOF

function gmailFilterScreen () {
    var filterlink = content.document.getElementsByTagName("tr")[2].getElementsByTagName("a")[1];
    if (filterlink.innerHTML === "Create&nbsp;a&nbsp;filter") {
        filterlink.click();
    }
}

function gmailFilterFillFrom (from) {
    var fromField = content.document.getElementsByName("cf1_from")[0];
    fromField.value=from;
    var nextStep = content.document.getElementsByName("nvp_bu_nxsb")[0];
    nextStep.click();
}

function gmailFilterFillToLabel (label) {
    var skipInputBox = content.document.getElementById("cf2_ar");
    var applyLabelBox = content.document.getElementById("cf2_cat");
    var alsoApplyBox = content.document.getElementsByName("irf")[0];
    var chooseLabelDropdown = content.document.getElementsByName("cf2_sel")[0];
    skipInputBox.checked = true;
    applyLabelBox.checked = true;
    alsoApplyBox.checked = true;
    chooseLabelDropdown.value = label;
    var createFilter = content.document.getElementsByName("nvp_bu_cftb")[0];
    createFilter.click();
    if (chooseLabelDropdown.value === label) {
        return value;
    } else {
        return null;
    }
}

function gmailFilterMailFrom (from, label) {
    // TODO: add callbacks
    var curT = gBrowser.selectedTab;
    var curTB = gBrowser.getBrowserForTab(curT);
    function doFillFrom() {
        curTB.removeEventListener("DOMContentLoaded", doFillFrom);
        function doFillLabel() {
            gmailFilterFillToLabel(label);
            curTB.removeEventListener("DOMContentLoaded", doFillLabel);
        }
        curTB.addEventListener("DOMContentLoaded", doFillLabel);
        gmailFilterFillFrom(from);
    }
    curTB.addEventListener("DOMContentLoaded", doFillFrom);
    gmailFilterScreen();
}

function gmailCheckAll() {
    for (elt of content.document.querySelectorAll('td input'))
        if (elt.type == "checkbox")
            elt.checked = true;
}

function gmailUncheckAll() {
    for (elt of content.document.querySelectorAll('td input'))
        if (elt.type == "checkbox")
            elt.checked = false;
}

function gmailToggleAllCheckboxes() {
    for (elt of content.document.querySelectorAll('td input'))
        if (elt.type == "checkbox")
            elt.checked = !elt.checked;
}

function gmailSelectedAction(act=null) {
    // for search results page (green)
    // TODO: generalize for inbox page (blue)
    switch (act) {
        case 'archive': act = 'arch';  break;
        case 'read':    act = 'rd';  break;
        case 'unread':  act = 'ur';  break;
        case 'star':    act = 'st';  break;
        case 'unstar':  act = 'xst'; break;
    }
    var actselect = content.document.querySelector('input + select');
    if (act !== null)
        actselect.value = act;
    return actselect.value;
}

function gmailGo() {
    var gobutton = content.document.querySelector('td select + input');
    gobutton.click();
}

function gmailInboxArchive() {
    // archive in inbox & similar views
    var archbutton = content.document.querySelector('h2 + table input');
    if (archbutton.name === 'nvp_a_arch') {
        archbutton.click();
        return true;
    }
    else return false;
}

function gmailArchive() {
    var done = gmailInboxArchive();
    if (!done) {
        gmailSelectedAction('archive');
        gmailGo();
    }
}

EOF

map <site>= -ex gmailcheckall
map <site>- -ex gmailuncheckall
map <site><Return> -ex gmailtoggleallcheckboxes
map <site>A -ex gmailarchivechecked

command! gmailcheckall
    \ -description "Check all checkboxes on page."
    \ -js gmailCheckAll();

command! gmailuncheckall
    \ -description "Uncheck all checkboxes on page."
    \ -js gmailUncheckAll();

command! gmailtoggleallcheckboxes
    \ -description "Toggle all checkboxes on page."
    \ -js gmailToggleAllCheckboxes();

command! gmailcreatefilter
    \ -description "Create a filter for mail from $1, archive to label $2"
    \ -nargs=1
    \ -js gmailFilterMailFrom(args[0], args[1]);

command! gmailcreatefiltertonewsletters
    \ -description "Create a filter for mail from $1, archive to label MISC/newsletter"
    \ -nargs=1
    \ -js gmailFilterMailFrom(args[0], "MISC/newsletter");

command! gmailarchivechecked -js gmailArchive();
command! -nargs=1 gmailactiononchecked  -js gmailSelectedAction(args[0]); gmailGo();
command! gmailmarkasread    gmailactiononchecked read
command! gmailmarkasunread  gmailactiononchecked unread
command! gmailstar          gmailactiononchecked star
command! gmailunstar        gmailactiononchecked unstar
command! -nargs=1 gmailaddlabel    -js gmailSelectedAction('ac_'+args[0]); gmailGo();
command! -nargs=1 gmailremovelabel -js gmailSelectedAction('rc_'+args[0]); gmailGo();

 group user

" -------------------------------------------------------------------------------
" ,---------,
" | GNU.org |
" '---------'
group gnu -locations=www.gnu.org/*
map <leader>hkc -js CommandExMode().open("map -group gnu <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group gnu <site>")
map <site>u -ex gnugoup

autocmd! -group gnu

command! gnugoup -js gnuGoUp();
js <<EOF
function gnuGoUp() {
    var links = Array.from(content.document.getElementsByTagName('a'));
    var uplink = links.filter(e=>e.accessKey=="u")[0];
    uplink.click();
}
EOF

group user

" -----------------------------------------------------------------------------
" ,-----------------------------,
" | Google Translate (Japanese) |
" '-----------------------------'

" Note: Handwriting entry box:
" - S-Enter copies top candidate to input field.
" - Esc clears the box.

group gtransja -locations=translate.google.com/#ja,translate.google.com.au/#ja,translate.google.com/#zh-CN,translate.google.com.au/#zh-CN
map <leader>hkc -js CommandExMode().open("map -group gtransja <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group gtransja <site>")

set hinttags+="div.ita-hwt-candidate"

js <<EOF

var gtrImeShowHandWriteInput = function() {
    content.document.getElementsByClassName("ita-hwt-ime")[0].style = "left: 28px; top: 364px;"
}

var gtrImeHideHandWriteInput = function() {
    content.document.getElementsByClassName("ita-hwt-ime")[0].style = "-moz-user-select: none; left: 28px; top: 364px; display: none;"
}

var gtrImeIsVisibleHandWriteInput = function() {
    var hwBox = content.document.getElementsByClassName("ita-hwt-ime")[0];
    return ! hwBox.style.cssText.includes('display: none');
}

var gtrImeToggleHandWriteInput = function() {
    if (gtrImeIsVisibleHandWriteInput())
        gtrImeHideHandWriteInput();
    else
        gtrImeShowHandWriteInput();
}

function gtrImeGetCandidates() {
    var candidatesDiv = content.document.getElementsByClassName("ita-hwt-candidates")[0];
    return candidatesDiv.innerText;
}

function gtrImeGetCandidate(n=1) {
    var candidatesDiv = content.document.getElementsByClassName("ita-hwt-candidates")[0];
    var candidateDiv = candidatesDiv.children[n-1];
    return candidateDiv.innerText;
}

function gtrImeSelectCandidate(n=1) {
    var candidatesDiv = content.document.getElementsByClassName("ita-hwt-candidates")[0];
    var candidateDiv = candidatesDiv.children[n-1];
    return candidateDiv.click();
}

function gtrImeCopyCandidate(n=1) {
    var candidatesDiv = content.document.getElementsByClassName("ita-hwt-candidates")[0];
    var candidateDiv = candidatesDiv.children[n-1];
    dactyl.clipboardWrite(candidateDiv.innerText);
    return candidateDiv.innerText;
}

function gtrImeMoveHandWriteBox(h="365px") {
    var hwBox = content.document.getElementsByClassName("ita-hwt-ime")[0];
    hwBox.style.top = h;
}

function gtrImeSetWidth(w) {
    var hwBox = content.document.getElementsByClassName("ita-hwt-ime")[0];
    hwBox.style.width = w;
}

function gtrImeGetWidth() {
    var hwBox = content.document.getElementsByClassName("ita-hwt-ime")[0];
    return hwBox.style.width;
}

function gtrGetSource() {
    var textarea = content.document.getElementById('source');
    return textarea.value;
}

function gtrJishoSearchSource() {
    var src = gtrGetSource();
    var ss = src.split(/\s+/);
    jishoMultiSearch.apply(null, ss);
}

function gtrJishoKanjiSearchSource(where='tab') {
    var src = gtrGetSource();
    jishoKanjiSearch(src, where);
}

EOF

command! handwrite -description "Show Handwritten Input box. With [!], toggle."
    \ -bang
    \ -js bang ? gtrImeToggleHandWriteInput() : gtrImeShowHandWriteInput();
command! nohandwrite -description "Hide Handwritten Input box." -js gtrImeHideHandWriteInput();
command! hwboxrepos -description "Reposition Handwritten Input box." -js gtrImeMoveHandWriteBox();
command! hwgetwidth -js dactyl.utils.message(gtrImeGetWidth());
command! hwsetwidth -nargs=? -js gtrImeSetWidth((args[0] || "425") + "px");
command! hwtogglewidth -description "Toggle normal-width/wide IME box"
    \ -js if (gtrImeGetWidth() != "800px") gtrImeSetWidth("800px"); else gtrImeSetWidth("425px");
command! hwyanksource -description "Copy contents of source area to clipboard" -js utils.cbWrite(gtrGetSource());
command! hwjishosearch -description "Search jisho for words in source" -js gtrJishoSearchSource();
command! hwjishokanjisearch -bang -description "Search jisho for kanji in source" -js gtrJishoKanjiSearchSource(bang?'here':'tab');

map <site><C-l> -js gtrImeMoveHandWriteBox();
map <site><C-S-L> -ex hwtogglewidth
map <site>h -js gtrImeToggleHandWriteInput()
map <site>l -js gtrImeMoveHandWriteBox();
map <site>k
    \ -description "Open Jisho.org kanji page (new tab)"
    \ -js dactyl.open(`http://jisho.org/search/${gtrImeGetCandidate()}%23kanji`, {where:dactyl.NEW_TAB})
map <site>K
    \ -description "Open Jisho.org kanji page (current tab)"
    \ -js dactyl.open(`http://jisho.org/search/${gtrImeGetCandidate()}%23kanji`)
map <site>sk -description "Search jisho for kanji in source (new tab)" -ex hwjishokanjisearch
map <site>sK -description "Search jisho for kanji in source (this tab)" -ex hwjishokanjisearch!
map <site>ss -description "Search jisho for words in source" -ex hwjishosearch
map <site>w -ex hwtogglewidth
map <site>y -description "Copy contents of source area to clipboard" -ex hwyanksource

" map -b <SPACE><SPACE> <SPACE><SPACE>
" unmap -group gtransja <SPACE><SPACE>
map <SPACE><SPACE> -js gtrImeShowHandWriteInput();

group user

" -----------------------------------------------------------------------------
" ,----------------,
" | Graphemica.com |
" '----------------'

js <<EOF

var graphemicaCharSelect = function (words) {
    var s = words.join(' ');
    dactyl.execute(`tabopen http://graphemica.com/search?q=${s}`);
    var charselectListener = function () {
        dactyl.execute('normal <link_desc>');
        document.removeEventListener("DOMContentLoaded", charselectListener, false);
    };
    document.addEventListener("DOMContentLoaded", charselectListener, false);
}

EOF

command! graphemicacharselect
    \ -desc "Search for a character on Graphemica.com and select with hints to copy to clipboard."
    \ -nargs=*
    \ -js graphemicaCharSelect(args);

" -------------------------------------------------------------------------------
" ,--------------------,
" | HouseOfVape.com.au |
" '--------------------'
group houseofvape -locations=houseofvape.com.au
map <leader>hkc -js CommandExMode().open("map -group houseofvape <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group houseofvape <site>")

js <<EOF

function hovShowPrices() {
    var articles = content.document.getElementsByTagName('article');
    for (article of articles) {
        var info = article.getElementsByClassName('product-info')[0];
        var name = article.getElementsByTagName('p')[0];
        name.innerHTML = name.innerHTML + info.innerHTML;
        name.style.height = "150px";
    }
}

EOF

command! hovshowprices
    \ -description "Show prices below product names"
    \ -js hovShowPrices();
map cc -ex hovshowprices


group user

" -------------------------------------------------------------------------------
" ,-------,
" | Imgur |
" '-------'
group imgur -locations=imgur.com
map <leader>hkc -js CommandExMode().open("map -group imgur <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group imgur <site>")

js <<EOF

function imgurDL() {
    var url = buffer.URL;
    var urlRegex = /https?:\/\/imgur.com\/([^/]+)\/(.+)/;
    var match = url.match(urlRegex);
    if (match) {
        var title = content.document.querySelector('.post-title').innerText;
        utils.cbWrite(title);
        var optionLinks = Array.from(content.document.querySelectorAll('.post-action-option'));
        var dlLink = optionLinks.filter(l=>l.innerText.match(/Download Post/))[0];
        if (dlLink) dlLink.click();
        return true;
    } else return false;
}

EOF

command! imgurdl
    \ -description "Copy title to clipboard and download album / gallery image"
    \ -js imgurDL();

map <site>d -ex imgurdl

group user

" -------------------------------------------------------------------------------
" ,---------------------,
" | J HTTP SERVER (JHS) |
" '---------------------'

group jserver -locations=http://127.0.0.1:65001/jijx,http://127.0.0.1:65001/jfile,http://127.0.0.1:65001/jfiles,http://127.0.0.1:65001/jijs,http://127.0.0.1:65001/jfif,http://127.0.0.1:65001/jal,http://127.0.0.1:65001/jhelp,http://localhost:65001/jijx,http://localhost:65001/jfile,http://localhost:65001/jfiles,http://localhost:65001/jijs,http://localhost:65001/jfif,http://localhost:65001/jal,http://localhost:65001/jhelp
map <leader>hkc -js CommandExMode().open("map -group jserver <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group jserver <site>")
map <site>o<C-h> -description "(show bindings)" -js CommandExMode().open("map -group jserver <site>o")

js <<EOF

function jCopyCellToPrompt(cell) {
    var cellText = cell.innerText;
    var prompt = content.document.getElementById("prompt");
    prompt.innerText = cellText;
    buffer.followLink(prompt, dactyl.CURRENT_TAB);
}

EOF

" === hint modes === "
set eht+=🅹:.log
js hints.addMode("🅹", "Select Cell", jCopyCellToPrompt);
map <site>v -description "Copy cell to prompt" -js hints.show('🅹');
set eht+=🄹:.log
js hints.addMode("🄹", "Select Cell", e=>utils.cbWrite(e.innerText));

" === bindings === "
map <site>y -description "Copy cell to clipboard" -js hints.show('🄹');
map <site>c
    \ -description "Focus Prompt"
    \ -js buffer.followLink(content.document.getElementById('prompt'), dactyl.CURRENT_TAB);
map -modes normal,insert <A-p> -description "Previous cell" -js jCopyPreviousCellToPrompt();
map -modes normal,insert <A-n> -description "Next cell" -js jCopyNextCellToPrompt();
map -modes insert <C-u> -description "Clear prompt" -js jClearPrompt();

map <site>oo -description "Goto JIJX" -ex open http://127.0.0.1:65001/jijx
map <site>of -description "Goto jfile" -ex open http://127.0.0.1:65001/jfile
map <site>oF -description "Goto jfiles" -ex open http://127.0.0.1:65001/jfiles
map <site>oj -description "Goto JIJS" -ex open http://127.0.0.1:65001/jijs
map <site>o/ -description "Goto JFIF (search)" -ex open http://127.0.0.1:65001/jfif
map <site>ok -description "Goto JAL (packages)" -ex open http://127.0.0.1:65001/jal
map <site>oh -description "Goto jhelp" -ex open http://127.0.0.1:65001/jhelp

js <<EOF

var jLastSelectedCell = null;
var jCurrentPromptCell = null;

function jCopyCellNToPrompt(n) {
    var cells = Array.from(content.document.getElementsByClassName("log"));
    var cell = cells[n-1];
    jLastSelectedCell = n;
    var prompt = content.document.getElementById("prompt");
    prompt.innerText = cell.innerText;
}

function jCopyPreviousCellToPrompt() {
    var cells = Array.from(content.document.getElementsByClassName("log"));
    var N = cells.length;
    if (jCurrentPromptCell !== N) {
        jCurrentPromptCell = N;
        jLastSelectedCell = N;
    }
    if (jLastSelectedCell === null)
        jLastSelectedCell = N;
    // new target cell (1-based)
    var n = Math.max(1, jLastSelectedCell - 1);
    jCopyCellNToPrompt(n);
}

function jCopyNextCellToPrompt() {
    var cells = Array.from(content.document.getElementsByClassName("log"));
    var N = cells.length;
    if (jCurrentPromptCell !== N) {
        jCurrentPromptCell = N;
        jLastSelectedCell = N;
    }
    if (jLastSelectedCell === null)
        jLastSelectedCell = N;
    // new target cell (1-based)
    var n = Math.min(N, jLastSelectedCell + 1);
    jCopyCellNToPrompt(n);
}

function jClearPrompt() {
    var prompt = content.document.getElementById("prompt");
    prompt.innerText = "   ";
}

EOF

group user

" -------------------------------------------------------------------------------
" ,-----------,
" | JapanDict |
" '-----------'
group japandict -locations=japandict.com
map <leader>hkc -js CommandExMode().open("map -group japandict <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group japandict <site>")

map ck -js japandictToggleKanji();

js <<EOF

var japandictToggleKanji = function() {
    var url = buffer.URL;
    var kanjiurl =    'https://www.japandict.com/kanji/';
    var nonkanjiurl = 'https://www.japandict.com/';
    if (url.startsWith(kanjiurl))
        newurl = url.replace(kanjiurl, nonkanjiurl);
    else
        newurl = url.replace(nonkanjiurl, kanjiurl);
    dactyl.open(newurl, {where:dactyl.CURRENT_TAB});
}


EOF

group user

" -------------------------------------------------------------------------------
" ,---------------------------------,
" | Japanese Compound Verb Database |
" '---------------------------------'

js <<EOF
function japDoSearchCompVerb(type, s) {
    var searchComp = content.document.getElementById('V1_V2_mode');
    var searchV1 = content.document.getElementById('V1_mode');
    var searchV2 = content.document.getElementById('V2_mode');
    switch (type) {
      case 0:
        searchComp.click();
        break;
      case 1:
        searchV1.click();
        break;
      case 2:
        searchV2.click();
        break;
    } ;
    var searchbox = content.document.getElementById('searchbox');
    searchbox.value=s;
    var doClick = function(){
        var searchbutton = content.document.getElementById('filterButton');
        searchbutton.click();
    }
    window.setTimeout(doClick, 1500);
    return true;
}

function japSearchCompVerb(type, s) {
    var newtab = gBrowser.addTab('http://vvlexicon.ninjal.ac.jp/db/');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    japSearchCompCallback = function() { japDoSearchCompVerb(type, s) };
    tb.addEventListener("DOMContentLoaded", japSearchCompCallback);
}
EOF

command! jcompvb
\ -desc "Search for japanese compound verb"
\ -nargs=1
\ -js japSearchCompVerb(0, args)
command! jcompvb1
\ -desc "Search for japanese compound verb by verb 1"
\ -nargs=1
\ -js japSearchCompVerb(1, args)
command! jcompvb2
\ -desc "Search for japanese compound verb by verb 2"
\ -nargs=1
\ -js japSearchCompVerb(2, args)
command! jdocompvb2
\ -desc "Search for japanese compound verb by verb 2"
\ -nargs=1
\ -js japDoSearchCompVerb(2, args)

" -------------------------------------------------------------------------------
group vvlex -locations=vvlexicon.ninjal.ac.jp
map <leader>hkc -js CommandExMode().open("map -group vvlex <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group vvlex <site>")

js <<EOF
function vvlexSearchV1(s) {
    var searchbox = content.document.getElementById('searchbox');
    searchterm = s || searchbox.value;
    var v1search = content.document.getElementById('V1_mode');
    v1search.click();
    searchbox.value = searchterm;
    searchbox.value = searchterm;
    var doClick = function(){
        var searchbutton = content.document.getElementById('filterButton');
        searchbutton.click();
    }
    window.setTimeout(doClick, 1500);
}
function vvlexSearchV2(s) {
    var searchbox = content.document.getElementById('searchbox');
    searchterm = s || searchbox.value;
    var v2search = content.document.getElementById('V2_mode');
    v2search.click();
    searchbox.value = searchterm;
    var doClick = function(){
        var searchbutton = content.document.getElementById('filterButton');
        searchbutton.click();
    }
    window.setTimeout(doClick, 1500);
}
EOF

command! vvlexsearchv1 -nargs=? -js vvlexSearchV1(args[0]);
command! vvlexsearchv2 -nargs=? -js vvlexSearchV2(args[0]);
map <site>1 -js vvlexSearchV1();
map <site>2 -js vvlexSearchV2();

group user

" -----------------------------------------------------------------------------
" ,-----------,
" | JSBin.com |
" '-----------'
group jsbin -locations=jsbin.com
map <leader>hkc -js CommandExMode().open("map -group jsbin <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group jsbin <site>")

" remove all existing jsbin autocmds
autocmd! -group jsbin

map <site>m -description "Toggle menu" -js toggleMenu();
map <site>c -description "Hint menus" -js hints.show("ï");

js <<EOF

function toggleMenu() {
    var menu = content.document.getElementsByClassName('menu')[0];
    if (menu.className.endsWith(' open'))
        menu.className = menu.className.slice(0,-5);
    else
        menu.className += ' open';
}

EOF

set eht+=[ï]:.menu,'select[id=library]'

js <<EOF

hints.addMode(
  'ï','JSBin menu',
  function(e) {
    if (e.className.includes('toppanel-hide'))
      e.click();
    else if (e.className.includes(' open'))
        e.className = e.className.replace(' open', '');
    else
        e.className += ' open';
  }
);

EOF

group user

" -----------------------------------------------------------------------------
" ,-----------,
" | Jisho.org |
" '-----------'

js <<EOF

function jishoSearch(s, where='here', keepCase) {
    s = keepCase ? s : s.toLowerCase();
    dactyl.open(`http://jisho.org/search/${s}`, where);
}

function jishoKanjiSearch(s, where='here') {
    dactyl.open(`http://jisho.org/search/${s}%20%23kanji`, where);
}

function jishoMultiSearch(...ss) {
    for (s of ss)
        jishoSearch(s, dactyl.NEW_TAB);
}

EOF

command! cbjishosearch
    \ -bang -description "search on jisho.org"
    \ -js jishoSearch(dactyl.clipboardRead(), bang?'here':'tab');
command! cbkanjisearch
    \ -bang -description "kanji search on jisho.org"
    \ -js jishoKanjiSearch(dactyl.clipboardRead(), bang?'here':'tab');
command! cbjishomultisearch
    \ -nargs=* -description "search multiple words on jisho.org"
    \ -js jishoMultiSearch.apply(null, args);


" =====GROUP START=====

group jisho -locations=jisho.org
map <leader>hkc -js CommandExMode().open("map -group jisho <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group jisho <site>")
map <site>g<C-h> -description "(show bindings)" -js CommandExMode().open("map -group jisho <site>g")
map <site>k<C-h> -description "(show bindings)" -js CommandExMode().open("map -group jisho <site>k")
map <site>t<C-h> -description "(show bindings)" -js CommandExMode().open("map -group jisho <site>t")
map <site>y<C-h> -description "(show bindings)" -js CommandExMode().open("map -group jisho <site>y")

" remove all existing jisho autocmds
autocmd! -group jisho

map <site>fl -ex jishohintclicklinks
map <site>gc -ex jishokanjitogglestyle
map <site>ge -ex jishotogglesentences
map <site>gk -ex jishotogglekanji
map <site>gl -ex jishotogglelinklists
map <site>gm -ex jishofixmodal
map <site>gr -ex jishotoggleradicalinput
map <site>gR -ex jishotoggleromaji
map <site>gs -ex jishoshrinksod
map <site>gS :jishoscalesod<Space>
map <site>;  -ex jishohintselectradical
map <site>oe -ex jishohintopensentences
map <site>ok -ex jishohintopenkanji
map <site>ow -ex jishohintopenweblio
map <site>te -ex jishohintopensentencesnewtab
map <site>tk -ex jishohintopenkanjinewtab
map <site>tw -ex jishohintopenweblionewtab
map <site>ye -ex jishohintyankentry
map <site>yy -ex jishoyanksearchterm
map <site>yp -ex jishokanjiyankparts

imap <A-k> <Space>#kanji

" -----------------
" jishotoggleromaji
" -----------------
js <<EOF

var jishoToggleRomaji = function() {
    var url = buffer.URL;
    var romtag = "%23romaji";
    if (url.includes(romtag))
        newurl = url.replace(romtag,"");
    else
        newurl = `${url}%23romaji`;
    dactyl.open(newurl);
}

var jishoToggleKanji = function() {
    var url = buffer.URL;
    var kanjitag = "%23kanji";
    if (url.includes(kanjitag))
        newurl = url.replace(kanjitag,"");
    else
        newurl = `${url} ${kanjitag}`;
    dactyl.open(newurl);
}

var jishoToggleSentences = function() {
    var url = buffer.URL;
    sentencetag = "%23sentences";
    if (url.includes(sentencetag))
        newurl = url.replace(sentencetag,"");
    else
        newurl = `${url} ${sentencetag}`;
    dactyl.open(newurl);
}

var jishoToggleRadicalInput = function() {
    var radicalButton = content.document.getElementById("radical_button");
    radicalButton.click();
}

function jishoGetSearchedForText() {
    var searchedforMsg = content.document.getElementById('the_corrector');
    if (!searchedforMsg) return null;
    var msgText = searchedforMsg.innerText;
    var re = /Searched for ([^ ]+)\./;
    var match = msgText.match(re);
    return match[1];
}

function jishoGetSearchTextFromURL() {
    var re = /https?:\/\/jisho.org\/search\/([^#]*[^# ])/;
    var match = decodeURIComponent(buffer.URL).match(re);
    return match[1];
}

function jishoGetSearchText() {
    var searchbox = content.document.getElementById('keyword');
    return searchbox.value;
}

function jishoGetCorrectedSearchText() {
    return jishoGetSearchedForText() || jishoGetSearchText();
}

function jishoKanjiAddLink(location, text) {
    var kanjiDetails = Array.from(content.document.getElementsByClassName("kanji details"));
    for (kanjidiv of kanjiDetails) {
        var links = kanjidiv.getElementsByClassName("inline-list")[0];
        var kanji = kanjidiv.getElementsByClassName('character')[0].innerText;
        location_ = location.replace("%s", kanji);
        text_ = text.replace("%s", kanji);
        var new_li = content.document.createElement("li");
        var new_a = content.document.createElement("a");
        new_a.href = location_;
        new_a.innerText = text_;
        new_li.appendChild(new_a);
        links.appendChild(new_li);
    }
}

function jishoKanjiParts() {
    var kanjidivs = Array.from(content.document.getElementsByClassName('kanji details'));
    var divs = content.document.getElementsByClassName('radicals');
    var links = A.concatMap(divs, d=>d.getElementsByTagName('a'));
    return links.map(e=>e.innerText);
}

EOF

" adds/removes #romaji tag to toggle between kana and romaji:

command! jishoyanksearchterm
    \ -description "Yank search term to clipboard"
    \ -js dactyl.utils.cbWrite(jishoGetCorrectedSearchText());

command! jishotoggleromaji
     \ -description "Toggle between kana and romaji"
     \ -js jishoToggleRomaji();

command! jishotoggleradicalinput
     \ -description "Toggle kanji radical input dialog"
     \ -js jishoToggleRadicalInput();

command! jishotogglekanji
     \ -description "Toggle between kanji page and regular results"
     \ -js jishoToggleKanji();

command! jishotogglesentences
     \ -description "Toggle between sentences page and regular results"
     \ -js jishoToggleSentences();

command! jishokanjiaddlink
    \ -description "args: HREF, TEXT. Add link to kanji. (%s is replaced by kanji)"
    \ -nargs=+ -js jishoKanjiAddLink(args[0], args[1]);
command! jishokanjiyankparts -js utils.cbWrite(jishoKanjiParts().join(''));

" ----------
" Hint modes
" ----------
" TODO: work out site/group-specific hinting.
"       - autocmd to reset eht and hints.addMode?
"       - use common dispatch function in hints.addMode?
"
set eht+=[かがたヤヱヹ]:div.concept_light-representation>span.text
set eht+=[リ]:a[class="concept_light-status_link"]
set eht+=[ぶ]:li.radical.available,li.radical.selected

js <<EOF
var dec = decodeURIComponent;

hints.addMode('ヤ','yank entry', e => dactyl.clipboardWrite(e.innerText));
hints.addMode('ぶ','select kanji radical', e => e.click());
hints.addMode('リ','links drop down', e=>jishoToggleLinksUL(e.nextSibling));
hints.addMode('ヱ','search entry in Weblio',
              e => dactyl.open(`http://ejje.weblio.jp/content/${e.innerText}`, 'here'));
hints.addMode('ヹ','search entry in Weblio (new tab)',
              e => dactyl.open(`http://ejje.weblio.jp/content/${e.innerText}`, 'tab'));
hints.addMode(
    'か','open kanji details',
    e => dactyl.open(dec(`http://jisho.org/search/${e.textContent.trim()}%2523kanji`)));
hints.addMode(
    'が','open kanji details in new tab',
    e => dactyl.open(dec(`http://jisho.org/search/${e.textContent.trim()}%2523kanji`), {where:dactyl.NEW_TAB}));
hints.addMode(
    'た','open sentence examples',
    e => dactyl.open(dec(`http://jisho.org/search/${e.textContent.trim()}%2523sentences`)));
hints.addMode(
    'た','open sentence examples in new tab',
    e => dactyl.open(dec(`http://jisho.org/search/${e.textContent.trim()}%2523sentences`), {where:dactyl.NEW_TAB}));
EOF

command! jishohintopenkanji           -js hints.show("か");
command! jishohintopenkanjinewtab     -js hints.show("が");
command! jishohintopensentences       -js hints.show("た");
command! jishohintopensentencesnewtab -js hints.show("だ");
command! jishohintopenweblio          -js hints.show("ヱ");
command! jishohintopenweblionewtab    -js hints.show("ヹ");
command! jishohintselectradical       -js hints.show("ぶ");
command! jishohintyankentry           -js hints.show("ヤ");
command! jishohintclicklinks          -js hints.show("リ");

" -----------
" Kanji style
" -----------
style -name=kanji_light
    \ jisho.org
    \ .kanji .character, .kanji_light .character {
    \     font-family: "HiraMinPro-W3","Hiragino Mincho Pro W3","Hiragino Mincho Pro","ヒラギノ明朝 Pro W3","游明朝",YuMincho,"HG明朝E","ＭＳ Ｐ明朝","MS PMincho","MS 明朝","MS Mincho",serif !important;
    \ }
    \ .kanji .character:hover, .kanji_light .character:hover {
    \     font-family:  "HiraKakuPro-W3","Hiragino Kaku Gothic Pro W3","Hiragino Kaku Gothic Pro","ヒラギノ角ゴ Pro W3","メイリオ",Meiryo,"游ゴシック",YuGothic,"ＭＳ Ｐゴシック","MS PGothic","ＭＳ ゴシック","MS Gothic",sans,sans-serif !important;
    \ }
command! jishokanjilight
    \ -description "Light style kanji"
    \ styleenable -group jisho -name kanji_light
command! jishokanjiheavy
    \ -description "Heavy style kanji"
    \ styledisable -group jisho -name kanji_light
command! jishokanjitogglestyle
    \ -description "Toggle heavy/light kanji style"
    \ styletoggle -group jisho -name kanji_light


" ---------------------
" Stroke order diagrams
" ---------------------
js <<EOF

function jishoScaleSOD(scale=0.5, ignore_min=false) {
    var svgelts=content.document.getElementsByTagName("svg");
    var MINHEIGHT = 40;

    // NOTE: sod class must be first or only class
    function isSOD(x) {
        return x.getAttribute('class').slice(0,20)=="stroke_order_diagram";
    }
    var sods = [].filter.call(svgelts, isSOD);

    // NOTE: assume length unit is "px" or other 2-char unit
    for (i=0; i<sods.length; ++i) {
        var style = sods[i].style;
        var newheight = parseInt(style.height) * scale;
        var newwidth = parseInt(style.width) * scale;

        // NOTE: crude test to see if previously shrunken
        if (!ignore_min && newheight<MINHEIGHT) continue;

        var hunit = style.height.slice(-2);
        var wunit = style.width.slice(-2);
        sods[i].setAttribute(
            "style",
            `height: ${newheight}${hunit}; width: ${newwidth}${wunit};`
        );
    }
}

EOF

command! jishoshrinksod
     \ -description "Halve the dimensions of stroke order diagrams"
     \ -js jishoScaleSOD();
command! jishoscalesod
     \ -description "Scale kanji stroke order diagrams by a factor"
     \ -nargs=?
     \ -js jishoScaleSOD(args[0], true);
command! ss
     \ -description "Scale kanji stroke order diagrams by a factor"
     \ -nargs=?
     \ -js jishoScaleSOD(args[0], true);

autocmd PageLoad jisho.org :jishoshrinksod

" ---------
" Modal Box
" ---------
" TODO: have :jishofixmodal applied automatically.

js <<EOF

function jishoFixModal() {
    var modal = content.document.getElementById('inflection_modal');
    var modalbg = content.document.getElementsByClassName('reveal-modal-bg')[0];
    var basestyle = modal.getAttribute("style");
    var bgbasestyle = modalbg.getAttribute("style");
    modal.setAttribute("style", `${basestyle}; position: fixed;`)
    modalbg.setAttribute("style", `${bgbasestyle}; position: fixed;`)
}

EOF

command! jishofixmodal
     \ -description "Fix modal in viewport"
     \ -js jishoFixModal();

" -----------
" Entry Links
" -----------
js <<EOF

function jishoToggleAllLinkULs() {
    var linklists = content.document.getElementsByClassName("f-dropdown");
    for (i=0; i<linklists.length; ++i) {
        linklists[i].focus();
        var llstyle = linklists[i].style;
        leftvalmatch = llstyle.cssText.match(/left: *(-?\d+\w*);/);
        if (leftvalmatch && parseInt(leftvalmatch[1])>-200) {
            llstyle.cssText = "";
        } else {
            llstyle.cssText = "position: relative; left: -120px; top: 0;";
        }
    }
}

function jishoToggleLinksUL(ul) {
    ul.focus();
    var llstyle = ul.style;
    leftvalmatch = llstyle.cssText.match(/left: *(-?\d+\w*);/);
    if (leftvalmatch && parseInt(leftvalmatch[1])>-200) {
        llstyle.cssText = "";
    } else {
        llstyle.cssText = "position: relative; left: -120px; top: 0;";
    }
}

EOF

command! jishotogglelinklists
     \ -description "Show all link lists"
     \ -js jishoToggleAllLinkULs();


group user

" -------------------------------------------------------------------------------
" ,----------,
" | JPopAsia |
" '----------'
group jpopasia -locations=jpopasia.com
map <leader>hkc -js CommandExMode().open("map -group jpopasia <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group jpopasia <site>")

command! jpopcleanlyrics -js jpopasiaCleanLyrics();

map <site>c -ex jpopcleanlyrics

js <<EOF

function jpopasiaCleanLyrics() {
    var div = content.document.getElementById('tabLyrics');
    btns = Array.from(div.getElementsByClassName('btn-default'));
    btns.map(e=>e.remove());
    end = content.document.getElementById('lyricEnd_1');
    end.nextElementSibling.remove();
    end.nextElementSibling.remove();
    topLvlElts = content.document.body.childNodes;
    while (topLvlElts.length) topLvlElts[0].remove();
    content.document.body.appendChild(div);
}

EOF

group user

" -------------------------------------------------------------------------------
" ,--------,
" | Libgen |
" '--------'
group libgen -locations=libgen.io,libgen.pw
map <leader>hkc -js CommandExMode().open("map -group libgen <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group libgen <site>")

command! libgendl -js libgenCopyFileNameAndDownload();
map <site>c -ex libgendl

js <<EOF

function libgenGetDetails(field) {
    var bibtext = content.document.getElementById('bibtext').value;
    var regex = RegExp(`${field} = +{([^}]+)}`)
    var match = bibtext.match(regex);
    return match ? match[1] : '';
}

function libgenCopyFileNameAndDownload() {
    var bibtextElt = content.document.getElementById('bibtext');
    if (bibtextElt) {
        // "libgen.io or libgen.pw second page"
        var name = libgenGetDetails('title');
        var ed_raw = libgenGetDetails('edition') || "1";
        var ed_match = ed_raw.trim().match(/\d+/);
        var ed = ed_match ? indexToOrdinal(ed_match[0]) : "1st";
        if (typeof ed == 'undefined') ed="1st";
        var year = libgenGetDetails('year');
        var filename = name +
                      (ed=="1st" ? '' : `, ${ed} ed`) +
                      (year ? ` (${year})` : '');
        utils.cbWrite(filename);
        utils.cbWrite(filename);
        var links = Array.from(content.document.querySelectorAll('a h2'));
        var link = links.find(a=>["download", "get"].includes(a.innerText.toLowerCase()));
        dactyl.open(link.parentNode.href);
    } else {
        // "first page"
        var cellLink = content.document.querySelector('td h2 a') ||
                       content.document.querySelector('body>table>tbody>tr>td>b>a');
        // if (cellLink && cellLink.innerText == "Open download page")
        if (cellLink) cellLink.click();
    }
}

EOF

" ,----------------,
" | gen.lib.rus.ec |
" '----------------'
group genlib -locations=gen.lib.rus.ec
map <leader>hkc -js CommandExMode().open("map -group genlib <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group genlib <site>")

js <<EOF

function genlibLibgen() {
    var link = content.document.querySelector('tbody :nth-child(2) :nth-child(3) a');
    if (!link) link = content.document.querySelector('tbody :nth-child(1) :nth-child(3) a');
    var title = link.innerText;
    var year = content.document.querySelector('tbody :nth-child(6) :nth-child(2)').innerText;
    var ed_raw = content.document.querySelector('tbody :nth-child(6) :nth-child(4)').innerText;
    var ed_match = ed_raw.trim().match(/\d+/);
    var ed = ed_match ? indexToOrdinal(ed_match[0]) : "1st";
    if (typeof ed == 'undefined') ed="1st";
    var filename = title +
                   (ed=="1st" ? '' : `, ${ed} ed`) +
                   (year ? ` (${year})` : '');
    utils.cbWrite(filename);
    link.click();
}

function genlibGetTitle() {
    var rawtitle = buffer.title;
    var title_regex = /Library Genesis:[^-]+-(.*[^(])(\(\.*, (\d\d\d\d)\))?$/;
    var start_regex = /Library Genesis:[^-]+- (.*)$/;
    var title = rawtitle.match(start_regex)[1];
    var end_regex = /(.*\S) *\(.*, (\d\d\d\d)\)$/;
    var end_matches = title.match(end_regex);
    if (end_matches) {
        var book_title = end_matches[1];
        var book_year  = end_matches[2];
        title = `${book_title} (${book_year})`;
    }
    return title;
}

function genlibNextPage(k=1) {
    k = k || 1;
    var url = buffer.URL;
    var page_regex = /\Wpage=(\d+)/;
    var page_matches = url.match(page_regex);
    if (page_matches) {
        var page_expr = page_matches[0];
        var n_str = page_matches[1];
        var n = parseInt(n_str);
        var next_page_expr = page_expr.replace(n_str, String(n+k));
        var next_page = url.replace(page_expr, next_page_expr);
    } else if (url.includes("?")) {
        next_page = `${url}&page=${k+1}`;
    }
    else {
        next_page = `${url}?page=${k+1}`;
    }
    dactyl.open(next_page);
}

function genlibPreviousPage(k=1) {
    k = k || 1;
    var url = buffer.URL;
    var page_regex = /\Wpage=(\d+)/;
    var page_matches = url.match(page_regex);
    if (page_matches) {
        var page_expr = page_matches[0];
        var n_str = page_matches[1];
        var n = parseInt(n_str);
        var next_page_expr = n-k>1 ? page_expr.replace(n_str, String(n-k)) : "";
        var next_page = url.replace(page_expr, next_page_expr);
        dactyl.open(next_page);
    }
}

EOF

map <site>c -js genlibLibgen();
map <yank>t -js utils.cbWrite(genlibGetTitle());
map ]] -count -js genlibNextPage(count);
map [[ -count -js genlibPreviousPage(count);

group user

" -------------------------------------------------------------------------------
" ,-----------------,
" | MaggiSensei.com |
" '-----------------'
group maggiesensei -locations=maggiesensei.com
autocmd! -group maggiesensei
map <leader>hkc -js CommandExMode().open("map -group maggiesensei <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group maggiesensei <site>")

" For now, use :togglestylesembedded
" TODO: work out how to fix the style (the '.post-content' class has post in it).
command! maggiefix
    \ -description "Fix regions of missing content on maggiesensei.com"
    \ :togglestylesembedded<CR>

autocmd LocationChange :execute "emenu Tools.Web Developer Extension.CSS.Disable Styles.Disable Individual Style Sheet.http://maggiesensei.com/wp-content/themes/custom-community/style.css"
" autocmd LocationChange :emenu Tools.Web Developer Extension.CSS.Disable Styles.Disable Individual Style Sheet.http://maggiesensei.com/wp-content/themes/custom-community/style.css

js <<EOF
function maggieRemoveCruft(removeImgs=false) {
    var article = content.document.getElementsByClassName("post-content")[0];
    var body = content.document.getElementsByTagName("body")[0];
    for (i=body.children.length-1; i>=0; --i) {
        body.children[i].remove();
    }
    body.appendChild(article);
    article.style["background-color"]="white";
    article.style["margin"]="4em";
    article.style["padding"]="4em";
    var torem = content.document.getElementsByClassName("wp_social_bookmarking_light");
    if (torem.length) torem[0].remove();
    torem = content.document.getElementsByClassName("wp_social_bookmarking_light_clear");
    if (torem.length) torem[0].remove();
    if (removeImgs) {
        var imgs = content.document.getElementsByTagName("img");
        for (i=imgs.length-1; i>=0; --i) {
            imgs[i].remove();
        }
    }
}
EOF

command! maggieremovecruft -bang -js maggieRemoveCruft(bang);
map <site>c -js maggieRemoveCruft(count);

group user

" -------------------------------------------------------------------------------
" ,-----------------,
" | MangaReader.net |
" '-----------------'

js <<EOF

function mangareaderGetChapter(series, chapter) {
    var newtab = gBrowser.addTab(`http://www.mangareader.net/${series}/${chapter}`);
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", function () {
        var imgsrc = content.document.getElementById('imgholder').firstChild.firstChild.src;
        var srcmatch = imgsrc.match(/(.*-)(\d+)[.](\w+)/);
        var srcpref = srcmatch[1];
        var srcnum = parseInt(srcmatch[2]);
        var srcext = srcmatch[3];
        var pageselect = content.document.getElementById('selectpage');
        var npages = parseInt(pageselect.innerText.match(/ *of (\d+)/)[1]);
        var pagerange = `$(seq ${srcnum} ${srcnum + npages - 1})`;
        var imgsrcparametrized = `${srcpref}$i.${srcext}`;
        var dir = `~/manga/dl/mangareader/${series}/${chapter}`;
        var file=`${dir}/$i.${srcext}`
        var looptext = `for i in ${pagerange}; do curl ${imgsrcparametrized} > ${file}; done`;
        dactyl.execute(`!mkdir -p ${dir}`);
        dactyl.execute(`!${looptext};`);
        gBrowser.removeCurrentTab();
    });
}

EOF

command! mangareadergetchapter -nargs=+ -js mangareaderGetChapter(args[0], args[1]);

" =====GROUP START=====

group mangareader -locations=mangareader.net

js <<EOF

function mangareaderGetNextChapter() {
    var url = buffer.URL;
    var urlmatch = url.match(/.*\/([^/]+)\/(\d+)/);
    var series = urlmatch[1];
    var chapter = urlmatch[2];
    var nextURL = `http://www.mangareader.net/${series}/${++chapter}`;
    var origtab = gBrowser.selectedTab;
    var newtab = gBrowser.addTab(`http://www.mangareader.net/${series}/${chapter}`);
    var tb = gBrowser.getBrowserForTab(newtab);
    gBrowser.selectedTab = newtab;
    gBrowser.removeTab(origtab);
    tb.loadURI(nextURL);
    var mangareaderGetNextListener = function () {
        var imgsrc = content.document.getElementById('imgholder').firstChild.firstChild.src;
        var srcmatch = imgsrc.match(/(.*-)(\d+)[.](\w+)/);
        var srcpref = srcmatch[1];
        var srcnum = parseInt(srcmatch[2]);
        var srcext = srcmatch[3];
        var pageselect = content.document.getElementById('selectpage');
        var npages = parseInt(pageselect.innerText.match(/ *of (\d+)/)[1]);
        var pagerange = `$(seq ${srcnum} ${srcnum + npages - 1})`;
        var imgsrcparametrized = `${srcpref}$i.${srcext}`;
        var dir = `~/manga/dl/mangareader/${series}/${chapter}`;
        var file=`${dir}/$i.${srcext}`
        var looptext = `for i in ${pagerange}; do curl ${imgsrcparametrized} > ${file}; done`;
        dactyl.execute(`!mkdir -p ${dir}`);
        dactyl.execute(`!${looptext};`);
        document.removeEventListener("DOMContentLoaded", mangareaderGetNextListener, false);
    };
    tb.addEventListener("DOMContentLoaded", mangareaderGetNextListener);
}

EOF

command! mangareadergetnextchapter -js mangareaderGetNextChapter();
map <site>c -js mangareaderGetNextChapter();

group user

" -------------------------------------------------------------------------------
" ,-----------------,
" | MyAnimeList.net |
" '-----------------'
group mal -locations=myanimelist.net
map <leader>hkc -js CommandExMode().open("map -group mal <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group mal <site>")

js <<EOF

function malGetHeading() {
    return content.document.getElementsByTagName('h1')[0].innerText;
}

EOF

command! malyanktitle -js utils.cbWrite(malGetHeading());

map <site>y -ex malyanktitle

map <site>f
    \ -description "Hints mode: follow bold links"
    \ -js hints.show("ä");


" -------------------------------------------------------------------------------
" ,-------------,
" | OReilly.com |
" '-------------'
group oreilly -locations=oreilly.com
map <leader>hkc -js CommandExMode().open("map -group oreilly <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group oreilly <site>")

js <<EOF
function oreillyFreeEbookFillForm() {
    var fields = content.document.getElementsByClassName("tar mt mb")[0].getElementsByTagName("input");
    fields[0].value = user.myfirstname;
    fields[1].value = user.mylastname;
    fields[2].value = user.myemail2;
    fields[4].click();
}
function oreillyFreeEbookGetPdfHref() {
  var pdf = content.document.getElementsByClassName("download format-pdf mr")[0];
  if (typeof pdf != 'undefined')
    return pdf.children[0].href;
  else return '';
}
function oreillyFreeEbookGetEpubHref() {
  var epub = content.document.getElementsByClassName("download format-epub mr")[0];
  if (typeof epub != 'undefined')
    return epub.children[0].href;
  else return '';
}
function oreillyFreeEbookWgetEpubHref() {
  var epubhref = oreillyFreeEbookGetEpubHref();
  return (epubhref === '') ? '' : `wget ${epubhref}`;
}
function oreillyFreeEbookWgetPdfHref() {
  var pdfhref = oreillyFreeEbookGetPdfHref();
  return (pdfhref === '') ? '' : `wget ${pdfhref}`;
}
EOF
command! oreillyFreeEbookAutofill -js oreillyFreeEbookFillForm();
map <site>eo -js oreillyFreeEbookFillForm();
command! oreillyFreeEbookDlPdf -js dactyl.open(oreillyFreeEbookGetPdfHref(), {where:dactyl.NEW_TAB});
command! oreillyFreeEbookDlEpub -js dactyl.open(oreillyFreeEbookGetEpubHref(), {where:dactyl.NEW_TAB});
map <site>eD -ex oreillyFreeEbookDlEpub | oreillyFreeEbookDlPdf
command! oreillyFreeEbookDl -js dactyl.execute(`!roxterm -e zsh -c 'cd ~/Downloads && {${oreillyFreeEbookWgetEpubHref()}} && {${oreillyFreeEbookWgetPdfHref()}}'`);
map <site>ed -ex oreillyFreeEbookDl

group user

" -------------------------------------------------------------------------------
" ,--------------,
" | PacktPub.com |
" '--------------'
group packt -locations=packtpub.com
map <leader>hkc -js CommandExMode().open("map -group packt <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group packt <site>")

" takes too long!
command! packttoggleallbookdetails -js packtToggleAllBookDetails();
command! -nargs=1 packtToggleBooksByName -js packtToggleBooksByName(eval(args[0]));
command! -nargs=1 packtDownloadPdfsByName -js packtDownloadBooksByName(eval(args[0]), "pdf");
command! -nargs=1 packtDownloadEpubsByName -js packtDownloadBooksByName(eval(args[0]), "epub");
command! packtbooklist -js packtBookList();

js <<EOF

function packtToggleAllBookDetails() {
    if (!buffer.URL.match("https://www.packtpub.com/account/my-ebooks")) {
        dactyl.open("https://www.packtpub.com/account/my-ebooks", {where:dactyl.CURRENT_TAB});
        return;
    }
    var dlDivs = content.document.getElementsByClassName('download-container');
    var dlDivs = content.document.getElementsByClassName('product-buttons-line');
    var dlDivs = content.document.getElementsByClassName('toggle-product-line');
        for (button of dlDivs) button.click();
}

function packtGetBookList() {
    if (!buffer.URL.match("https://www.packtpub.com/account/my-ebooks")) {
        dactyl.open("https://www.packtpub.com/account/my-ebooks", {where:dactyl.CURRENT_TAB});
        return;
    }
    var books = content.document.getElementsByClassName('product-line');
    return Array.from(books);
}

function packtGetBookListStr() {
    var s = "";
    for (book of packtGetBookList()) {
        s += book.title + "\n";
    }
    return s;
}

function packtGetBookListHTML() {
    style = "font-size:10pt;color:#ECF1F4;";
    content.document.body.innerHTML = `<pre style="${style}">${packtGetBookListStr()}</pre>`;
}

function packtBookList() {
    var page = content.document.implementation.createHTMLDocument("Packt: Books List");
    page.innerHTML = packtGetBookListHTML();
    content.document = page;
}

function packtGetBookById(nid) {
    var books = packtGetBookList();
    var book = books.filter(e=>e.getAttribute("nid")==nid)[0];
    return book;
}

function packtGetBooksByName(pattern='') {
    var books = Array.from(packtGetBookList());
    var matching = books.filter(e=>e.title.match(pattern));
    return matching;
}

function packtToggleBooksByName(pattern='') {
    var books = Array.from(packtGetBookList());
    var matching = books.filter(e=>e.title.match(pattern));
    matching.forEach(
        e=> e.getElementsByClassName('toggle-product-line')[0].click()
    );
}

// FIXME: only downloads first match - use delay?
function packtDownloadBooksByName(pattern='', format) {
    formatre = RegExp(format, 'i');
    matching = packtGetBooksByName(pattern);
    matching.forEach(function(e) {
        var buttons = Array.from(e.getElementsByClassName('fake-button'));
        var button = buttons.find(function(but) {
            var buttonformat = but.getAttribute('format') || "";
            return buttonformat.match(formatre);
        });
        button.getElementsByClassName('download')[0].click();
    });
}
function packtGetDownloadDialogsByName(pattern='', format) {
    formatre = RegExp(format, 'i');
    matching = packtGetBooksByName(pattern);
    return matching.map(function(e) {
        var buttons = Array.from(e.getElementsByClassName('fake-button'));
        var button = buttons.find(function(but) {
            var buttonformat = but.getAttribute('format') || "";
            return buttonformat.match(formatre);
        });
        return button.getElementsByClassName('download')[0];
    });
}
function packtClickButtons(buttonlist) {
    b = buttonlist.pop();
    b.click();
    setTimeout(function(){
        //alert(buttonlist.length);
        packtClickButtons(buttonlist);
    }, 2000)
}
function packtDownloadBooksByName(pattern='', format) {
    var buttonlist = packtGetDownloadDialogsByName(pattern, format);
    alert(buttonlist.length);
    packtClickButtons(buttonlist);
}
function packtToggleTopRow() {
    var toprow = content.document.getElementsByClassName('product-top-line')[0];
    var toggle = toprow.querySelector('.toggle-product-line');
    toggle.click();
}
function packtDlLinksRow(rowelt) {
    var links = Array.from(rowelt.nextElementSibling.querySelectorAll('.download-container a')).slice(2, 6);
    var authordiv = rowelt.querySelector('.author');
    links.forEach(a => authordiv.appendChild(a));
    //links.forEach(a => dactyl.open(a.href, {where: dactyl.NEW_BACKGROUND}));
    //links.forEach(a => setTimeout(function(){ dactyl.open(a.href, {where: dactyl.NEW_BACKGROUND}); }, 1000));
}
function packtDlLinksTopRow() {
    var toprow = content.document.getElementsByClassName('product-top-line')[0];
    packtDlLinksRow(toprow);
}
function packtPopLink() {
    var links = content.document.querySelectorAll('.author a');
    if (links.length == 0) return;
    var elt = links[0];
    elt.click();
    elt.remove();
}

EOF

map <site>l -description "Create download buttons for top row" -js packtDlLinksTopRow();
map <site>c -description "Download first link" -js packtPopLink();

group user

" -------------------------------------------------------------------------------
" ,------------,
" | Ptable.com |
" '------------'
group ptable -locations=ptable.com
map <leader>hkc -js CommandExMode().open("map -group ptable <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group ptable <site>")

js <<EOF
var ptableToggleWP = makeDisplayToggle('#WikiBox');
EOF

map <site>w -js ptableToggleWP();

group user

" -------------------------------------------------------------------------------
" ,------------,
" | Reddit.com |
" '------------'
group reddit -locations=reddit.com
map <leader>hkc -js CommandExMode().open("map -group reddit <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group reddit <site>")

" Key Help (id: keyHelp) "
map -b <site>? <C-v>?

" Commandline (id: keyCommandLineWidget) "
map <site>x -b <C-v>.

group user

" -------------------------------------------------------------------------------
" ,------------,
" | Scriptular |
" '------------'

style -name=scriptular http://scriptular.com,file:///opt/webapps/scriptular/index.html
    \ #quick_reference,#quick_reference>.scrollable { height: 700px !important; margin-top: 0; }
styleenable -name scriptular

" -----------------------------------------------------------------------------
" ,-------------------,
" | StackOverflow.com |
" '-------------------'
group stackexchange -locations=stackoverflow.com,stackexchange.com,superuser.com
map <leader>hkc -js CommandExMode().open("map -group stackexchange <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group stackexchange <site>")

js <<EOF

function seExpandAllComments() {
    var expandLinks = Array.from(content.document.querySelectorAll('.js-show-link'));
    for (l of expandLinks) l.click();
}

function seExpandAllSnippets() {
    var runBtns = Array.from(content.document.querySelectorAll('.snippet-ctas button'));
    for (b of runBtns)
        if (!b.classList.contains('hideResults'))
            b.click();
}

function seCleanup(showSnippetResults) {
    if (showSnippetResults) {
        seExpandAllSnippets();
        removeSelectors('.snippet-ctas');
    } else {
        removeSelectors('.snippet-result');
    }
    removeSelectors(
        'script',
        'header','#sidebar', '.aside-cta',    // header, sidebar, ask a question
        '.post-taglist', '.special-status', '.bounty-notification',
        '.star-off', '.favoritecount', '#tabs',
        '#PrinterFriendly',    // added-by-userscript
        '.vt',    //  share-edit-flag
        '.vote-up-off', '.vote-down-off', '.js-add-link',
        '.user-gravatar32', '.-flair',
        '.bottom-notice', 'form', '#footer', '#feed-link'
    );
}

EOF

command! secleanup
    \ -description "Cleanup SO page: Expand links and remove cruft."
    \ -bang
    \ -js seExpandAllComments(); seCleanup(bang);

map <site>c
    \ -count
    \ -description "Expand links and remove cruft."
    \ -js  seExpandAllComments(); seCleanup(count);

map -modes insert -b <A-k> <S-<>kbd<S->><S-<>/kbd<S->><Left><Left><Left><Left><Left><Left>

set editor='gvim -f +<line> +"sil! call cursor(0, <column>)" +"set ft=markdown" <file>'

group user

" -------------------------------------------------------------------------------
" ,-------------,
" | Subs.com.ru |
" '-------------'

js <<EOF

function subsRuSearch(s){
    var searchForm = content.document.getElementById("search");
    var inputs = searchForm.getElementsByTagName("input");
    var searchField = inputs[1];
    var searchButton = inputs[2];
    searchField.value = (s);
    searchButton.click();
}

function searchSubsRu(s) {
    var newtab = gBrowser.addTab('subs.com.ru');
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    subsRuCallback = function() { subsRuSearch(s); }
    tb.addEventListener("DOMContentLoaded", subsRuCallback);
}

EOF

command! subsrusearch
    \ -description "Search subs.com.ru"
    \ -nargs=1
    \ -js searchSubsRu(args[0]);


" -------------------------------------------------------------------------------
" ,--------------,
" | TheHylia.com |
" '--------------'
group hylia -locations=anime.thehylia.com
map <leader>hkc -js CommandExMode().open("map -group hylia <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group hylia <site>")

command! hyliacurlallsongs
  \ -description "Generate curl commands to download song links and copy to clipboard."
  \ -js hyliaCurlAllSongs();
command! hyliacurlsong
  \ -description "Generate curl command to download the current song link and copy to clipboard."
  \ -js hyliaGetSong();
command! hyliacurlsongwithfullname
  \ -description "Generate curl command to download the current song link and copy to clipboard."
  \ -js hyliaGetSongWithFullName();
map <site>a -ex hyliacurlallsongs
map <site>d -ex hyliacurlsong
map <site>D -ex hyliacurlsongwithfullname
map <site>yy -js hyliaCopyTrackName();
map <site>ya -js hyliaCopyAlbumName();


" FIXME: hyliaCurlAllSongs only generates a curl command for last song

js <<EOF
function hyliaCurlAllSongs() {
    var tbl = content.document.getElementsByClassName("blog")[0];
    var albumName = tbl.getElementsByTagName("h2")[0].innerText;
    var rows = tbl.getElementsByTagName("table")[0].getElementsByTagName("tr");
    for (i=0; i<rows.length; ++i) {
        var row = rows[i];
        var pageLink = row.getElementsByTagName("a")[0].href;
        hyliaFetchSongPage(pageLink);
    }
}
function hyliaFetchSongPage(pageLink) {
    var newtab = gBrowser.addTab(pageLink);
    gBrowser.selectedTab = newtab;
    var tb = gBrowser.getBrowserForTab(newtab);
    tb.addEventListener("DOMContentLoaded", hyliaGetSong);
}
function hyliaGetSong(filename) {
    var tbl = content.document.getElementsByClassName("blog")[0];
    var allLinks = tbl.getElementsByTagName("a");
    var link = allLinks[allLinks.length-1];
    var linkurl = decodeURIComponent(link.href);
    if (typeof filename == 'undefined')
        filename = `${hyliaGetTrackName()}`;
    hyliaGenerateCurlCommand(linkurl, filename);
}
function hyliaGetSongWithFullName() {
    albumName = hyliaGetAlbumName();
    trackName = hyliaGetTrackName();
    filename = `${albumName} - ${trackName}`;
    hyliaGetSong(filename);
}
function hyliaGenerateCurlCommand(linkURL, filename) {
        if (typeof filename == 'undefined')
            var curlCmd = `curl '${linkURL}' `;
        else
            var curlCmd = `curl '${linkURL}' > '${filename}';`;
        dactyl.utils.cbWrite(curlCmd);
}
function hyliaGetAlbumName() {
    var hdg = content.document.getElementsByTagName('h2')[0];
    return hdg.innerText;
}
function hyliaGetTrackName() {
    var pars = content.document.getElementsByTagName('p');
    var descript = Array.from(pars).filter(p=>p.innerText.includes('Song name:'))[0].innerText;
    var lines = descript.split('\n');
    var track = lines[1].replace(/Song name:\s+/i,'');
    return track;
}
function hyliaCopyAlbumName() { dactyl.utils.cbWrite(hyliaGetAlbumName()); }
function hyliaCopyTrackName() { dactyl.utils.cbWrite(hyliaGetTrackName()); }
EOF

group user

" -----------------------------------------------------------------------------
" ,-----------------,
" | Userscripts.org |
" '-----------------'

js <<EOF

function userscriptsMirror(url) {
    var rx = /https?:\/\/(www.)?userscripts.org\/(.*)/;
    var match = rx.exec(url.toLowerCase());
    if (match)
        dactyl.open(`http://userscripts-mirror.org/${match[2]}`);
    else
        dactyl.utils.message(`userScriptsMirror: Address doesn't match: ${url}`);
}

EOF

command! userscriptsmirror -nargs=?
    \ -js if (args.length==0)
    \         userscriptsMirror(dactyl.clipboardRead());
    \     else
    \         userscriptsMirror(args[0]);

" -------------------------------------------------------------------------------
" ,-----------,
" | Wikia.com |
" '-----------'
group wikia -locations='.*\.wikia\.com/'
autocmd! -group wikia
map <leader>hkc -js CommandExMode().open("map -group wikia <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group wikia <site>")

" ,- - - - - - - - - - - - - - - - - - - - - - - - - ,
" ' override f to work on Wikia collapsible sections '
" '- - - - - - - - - - - - - - - - - - - - - - - - - '
set eht+=🅆:':-moz-any-link',area,button,iframe,'input:not([type=hidden]):not([disabled])','label[for]',select,textarea,'[onclick]','[onmouseover]','[onmousedown]','[onmouseup]','[oncommand]','[tabindex]','[role=link]','[role=button]','[contenteditable=true]',svg,'a[class^=vote]','a[class^=speed]',div.ita-hwt-candidate,.preference>li,section.pi-collapse
js <<EOF
hints.addMode(
    '🅆',
    'Click link/button',
    function(elt) {
        ' handle normal links, buttons, etc. '
        dispatchClickEvent(elt);
        ' toggle a section by adding/removing the class .pi-collapse-closed '
        ' trying to abstract this into a function and run it via a hint results in an error: Permission denied to access property "type" '
        if (elt.classList.contains('pi-collapse')) {
            if (elt.classList.contains('pi-collapse-closed'))
                elt.classList.remove('pi-collapse-closed');
            else elt.classList.add('pi-collapse-closed');
        }
    });
EOF
map f -js hints.show('🅆');

js <<EOF

function wikiaRemoveCruft() {
    removeSelectors(
    '.wds-global-navigation-wrapper', '#WikiaTopAds', '.wikia-ad', '#WikiHeader',
    '.header-tally', '.wikia-button', '.wikia-menu-button', '.editsection', '.WikiaRail',
    '.navbox', '.WikiaArticleInterlang', '.refpopups-configure-page', '#WikiaArticleFooter',
    'footer', '#WikiaArticleBottomAd', '#WikiaBar', 'script', '.ve-spinner'
    );
}

function wikiaRemoveImages() {
    removeSelectors('img', '#Gallery');
    removeSelectorsWithPrecedingElt('.wikia-gallery');
}

function wikiaGetNext() {
    var nextprevLinks = content.document.querySelectorAll('.portable-infobox tr a');
    return nextprevLinks[1].href;
}
function wikiaGetPrevious() {
    var nextprevLinks = content.document.querySelectorAll('.portable-infobox tr a');
    return nextprevLinks[0].href;
}

EOF

command! wikiaremovefandomads
    \ -description "Remove 'Trending Fandom' ads"
    \ removeselector '#recirculation-rail' '.recirculation-rail'
command! wikiaremovecruft -js wikiaRemoveCruft();
command! wikiaremoveimages -js wikiaRemoveImages();
command! -bang wikianext
    \ -js dactyl.open(wikiaGetNext(), { where: bang?'tab':'here' });
command! -bang wikiaprevious
    \ -js dactyl.open(wikiaGetPrevious(), { where: bang?'tab':'here' });

map <site>c -ex wikiaremovefandomads
map <site>a -ex wikiaremovefandomads
map <site>r -ex wikiaremovecruft
map <site>i -ex wikiaremoveimages
map <site>] -ex wikianext
map <site>[ -ex wikiaprevious

" ,-------------------------,
" | AdventureTime.Wikia.com |
" '-------------------------'
group wikiaadvtime -locations='adventuretime\.wikia\.com/wiki/'
autocmd! -group wikiaadvtime
map <leader>hkc -js CommandExMode().open("map -group wikiaadvtime <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group wikiaadvtime <site>")

js <<EOF

function advtimeToggleTranscript() {
    var url_A = /\/Transcript/;
    var url_B = /$/;
    var url_A_canon = "/Transcript";
    var url_B_canon = "";
    var url = content.location.href;
    var newurl;
    if (url.search(url_A) >= 0)
        newurl = url.replace(url_A, url_B_canon);
    else if (url.search(url_B) >= 0)
        newurl = url.replace(url_B, url_A_canon);
    dactyl.open(newurl);
}

EOF

" Repeat wikia bindings so <site><C-h> works "
map <site>a -ex wikiaremovefandomads
map <site>r -ex wikiaremovecruft
map <site>i -ex wikiaremoveimages
map <site>] -ex wikianext
map <site>[ -ex wikiaprevious

command! advtimeToggleTranscript -js advtimeToggleTranscript();
map <site>c -ex advtimeToggleTranscript

group user

" -----------------------------------------------------------------------------
" ,---------------,
" | Wikipedia.org |
" '---------------'
group wikipedia -locations=wikipedia.org
map <leader>hkc -js CommandExMode().open("map -group wikipedia <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group wikipedia <site>")

command! wpapplycss :source ~/.pentadactyl/wikipedia.css

js <<EOF
var wpLatest = function() {
   var newurl = buffer.URL.replace(/\?.*$/, '');
   dactyl.open(newurl);
}
var wpContent = function() {
    var heading = content.document.getElementById("firstHeading");
    var articletext = content.document.getElementById("bodyContent");
    return heading.innerText + "\n\n" + articletext.innerText;
}
var wpHtml = function() {
    var heading = content.document.getElementById("firstHeading");
    var articletext = content.document.getElementById("bodyContent");
    return `<h1>${heading.innerHTML}</h1>\n${articletext.innerHTML}`;
}
var wpCopyContent = function() {
    articletext = wpContent();
    dactyl.clipboardWrite(articletext);
    dactyl.utils.message(`COPIED: ${articletext.slice(0, 20)} ... ${articletext.slice(-20)}`);
}
var wpCopyHtml = function() {
    articlehtml = wpHtml();
    dactyl.clipboardWrite(articlehtml);
    dactyl.utils.message(`COPIED: ${articlehtml.slice(0, 20)} ... ${articlehtml.slice(-20)}`);
}

function wpGetContents() {
    return Array.from(doc.querySelectorAll('#toc ul li a'));
}
function wpGotoNextHeading() {
    var headings = wpGetContents();
    var fragment = content.window.location.hash;
    if (fragment) {
        var i = headings.findIndex((e,i,a)=>e.href.match(content.window.location.hash));
        if (i+1 < headings.length)
            headings[i+1].click();
    } else {
        headings[0].click();
    }
}
function wpGotoPreviousHeading() {
    var headings = wpGetContents();
    var fragment = content.window.location.hash;
    if (fragment) {
        var i = headings.findIndex((e,i,a)=>e.href.match(content.window.location.hash));
        if (i)
            headings[i-1].click();
        else
            content.window.scrollTo(0, 0);
    }
}

function wpGetTopic() {
    var url = buffer.URL;
    var regex = /https:\/\/([^./]+)\.wikipedia\.org\/wiki\/([^/]+)/i;
    var match = url.match(regex);
    if (match) return match[2];
    else return null;
}

function wpGotoWiktionary(where='here', lang='en') {
    var topic = wpGetTopic().toLowerCase();
    dactyl.open(`https://${lang}.wiktionary.org/wiki/${topic}`, where);
}

EOF
command! wplatest -description "Go to latest revision" -js wpLatest();
command! wpcopycontent -description "Copy article text to clipboard" -js wpCopyContent();
command! wpcopyhtml -description "Copy article HTML to clipboard" -js wpCopyHtml();
command! wpcleanup
    \ -description "Cleanup article"
    \ removeselector #siteNotice #mw-navigation #footer .noprint .mw-editsection .navbox
command! wpcopytablecols
    \ -description "Copy specified columns (single digits) from table chosen by HINT"
    \ -nargs=1
    \ -js dactylArgsSet(args[0].split("")); hints.show('Ŧ');

map <site>c -ex wpcleanup
map <site>d -js wpGotoWiktionary();
map <site>D -js wpGotoWiktionary('tab');
map <site>l -ex wplatest
map <site>t :wpcopytablecols<Space>
map <site>. -js wpGotoNextHeading();
map <site>, -js wpGotoPreviousHeading();

map J -js wpGotoNextHeading();
map K -js wpGotoPreviousHeading();

group user

" -------------------------------------------------------------------------------
" ,------------------,
" | WolframAlpha.com |
" '------------------'
group wolfram -locations=wolframalpha.com
map <leader>hkc -js CommandExMode().open("map -group wolfram <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group wolfram <site>")

" warning: wolframalpha.com uses multiple 'plaintext' ids when more than one box is showing"

js <<EOF
function wolframGetResult() {
    var ptdiv = content.document.getElementById('plaintext');
    if (ptdiv)
        utils.cbWrite(ptdiv.innerText);
    else
        content.document.querySelector('#Result .plaintext').click();
}
EOF

command! wolframresult
    \ -desciption "If plaintext showing, copy; else show plaintext"
    \ -js wolframGetResult();
map <site>c -ex wolframresult

group user

" -------------------------------------------------------------------------------
" ,-------------,
" | Youtube.com |
" '-------------'
group youtube -locations=youtube.com
map <leader>hkc -js CommandExMode().open("map -group youtube <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group youtube <site>")

js <<EOF
function ytplayer() {
    return content.document.getElementById("movie_player").wrappedJSObject;
}
window.ytplayer = ytplayer;

var ytMinSpeed = 0.25;
function ytGetSpeed() { return ytplayer().getPlaybackRate(); }
function ytSetSpeed(r) { ytplayer().setPlaybackRate(Math.max(r, ytMinSpeed)); }
function ytAdjustSpeed(delta) {
    var newspeed = ytGetSpeed()+delta;
    ytSetSpeed(newspeed);
    utils.cbWrite(`speed: ${newspeed}`);
}
function ytPlay() { ytplayer().playVideo(); }
function ytPause() { ytplayer().pauseVideo(); }
function ytIsPaused() { return (ytplayer().getPlayerState() == 2); }
function ytTogglePause() {
    if (ytIsPaused()) ytPlay();
    else ytPause();
}
function ytToggleMute() {
    var p = ytplayer();
    if (p.isMuted()) p.unMute();
    else p.mute();
}

function ytGetTime() { return ytplayer().getCurrentTime(); }

function ytForward(n) {
    var p = ytplayer();
    p.seekBy(n);
    utils.message(formatSeconds(ytGetTime()));
}

function ytDL(dir="~/Downloads") {
    if (!dir) dir = "~/Downloads";
    dactyl.execute(`!cd ${dir}; youtube-dl -ci --all-subs --xattrs -o "%(title)s-%(id)s.%(ext)s" "${buffer.URL}"`);
}

function ytAdjustVolume(dvol) {
    var p = ytplayer();
    volCurr = p.getVolume();
    volNew = cutoff(volCurr + dvol, 0, 100);
    ytShowVolumeSlider();
    p.setVolume(volNew);
    return volNew;
}

function ytShowVolumeSlider() {
    var controlsDiv = content.document.querySelector('.ytp-chrome-bottom');
    controlsDiv.classList.add('ytp-volume-slider-active');
}

EOF

command! ytincrate -description "increase playback rate" -js ytAdjustSpeed(0.25);
command! ytdecrate -description "decrease playback rate" -js ytAdjustSpeed(-0.25);
command! ytshowrate
    \ -description "show playback rate"
    \ -js dactyl.utils.message(ytGetSpeed());

command! ytrate
    \ -description "set playback rate (normal rate = 10)"
    \ -nargs=1
    \ -js ytSetSpeed(args[0]/10);

command! ytfullscreen -description "toggle fullscreen" -js clickSelector('.ytp-fullscreen-button');
command! ytcinema -description "toggle cinema mode" -js clickSelector('.ytp-size-button');
command! ytmute -description "toggle mute" -js ytToggleMute();
command! ytlowervolume -description "lower volume" -nargs=? -js ytAdjustVolume(-5 * (args[0] || 1));
command! ytraisevolume -description "raise volume" -nargs=? -js ytAdjustVolume(5 * (args[0] || 1));

map <site>r :ytrate<Space>
map <site>R -ex ytshowrate
map <site>\> -count -js ytAdjustSpeed(0.25 * (count || 1));
map <site>\< -count -js ytAdjustSpeed(-0.25 * (count || 1));
map <site>f -ex ytfullscreen
map <site>c -ex ytcinema
map <site>m -ex ytmute
map <S-right> -js ytForward(3);
map <S-left>  -js ytForward(-3);
map <A-right> -js ytForward(10);
map <A-left>  -js ytForward(-10);
map <C-right> -js ytForward(60);
map <C-left>  -js ytForward(-60);
map <PageDown> -count -ex ytlowervolume <count>
map <PageUp>   -count -ex ytraisevolume <count>
map <XF86AudioMute> -ex ytmute
map <XF86AudioLowerVolume> -count -ex ytlowervolume <count>
map <XF86AudioRaiseVolume> -count -ex ytraisevolume <count>

command! ytdl
    \ -description "Download video/playlist with youtube-dl"
    \ -nargs=?
    \ -complete=file
    \ -js ytDL(args[0]);
map <site>d -ex ytdl

map <site><Space> -js ytTogglePause();
map <Space> -js ytTogglePause();
command! ytBindSpacebar -ex map <Space> -js ytTogglePause();

group user

" -------------------------------------------------------------------------------
" ,-------------,
" | OTHER SITES |
" '-------------'

group tipsonjap -locations=meadowlake001.blogspot.jp
map <leader>hkc -js CommandExMode().open("map -group tipsonjap <site>")
map <site><C-h> -description "(show bindings)" -js CommandExMode().open("map -group tipsonjap <site>")
" Tips on Japanese
" http://meadowlake001.blogspot.jp
command! widenSidebar -group tipsonjap
    \ -js <<EOF
    var s=content.document.getElementById('sidebar');
    var c=content.document.getElementById('content');
    s.style.width='400px';
    c.style['margin-left']='400px';
EOF

group user

" =============================================================================
"                                       _______
"                                      |       |
"                                      | NOTES |
"                                      |_______|

" ===============================================================================
"                                 __________________
"                                |                  |
"                                | HELPER FUNCTIONS |
"                                |__________________|

js <<EOF

function getSelectionText() {
    return content.getSelection().text;
}

// author: Tim Down. see: https://stackoverflow.com/a/4652824/1261964
function getSelectionHtml() {
    var html = "";
    if (typeof content.window.getSelection != "undefined") {
        var sel = content.window.getSelection();
        if (sel.rangeCount) {
            var container = content.document.createElement("div");
            for (var i = 0, len = sel.rangeCount; i < len; ++i) {
                container.appendChild(sel.getRangeAt(i).cloneContents());
            }
            html = container.innerHTML;
        }
    } else if (typeof content.document.selection != "undefined") {
        if (content.document.selection.type == "Text") {
            html = content.document.selection.createRange().htmlText;
        }
    }
    return html;
}
window.getSelectionHtml = getSelectionHtml;

function openHTML(html, where='tab') {
    var dataURI = "data:text/html," + encodeURIComponent(html);
    dactyl.open(dataURI, where);
}
window.openHTML = openHTML;

function isAscii(s) {
    return Array.from(s).every(c=>c.charCodeAt(0) <= 128);
}

function urlLastComponent(url) {
    return url.replace(/^.*\//, '');
}

function indexToOrdinal(n) {
    // trim in case n is a string to start with
    var nstr = n.trim().toString();
    var lastDigit = nstr.slice(-1);
    switch (parseInt(lastDigit)) {
        case 1:
            return nstr + "st";
        case 2:
            return nstr + "nd";
        case 3:
            return nstr + "rd";
        case 4: case 5: case 6: case 7: case 8: case 9: case 0:
            return nstr + "th";
    }
}

function stripBlankLines(s) { return s.replace(/\n\s*\n/gm, '\n'); }

function isInView(elt) {
    var bound = elt.getBoundingClientRect();
    var viewBottom = content.window.innerHeight || content.document.documentElement.clientHeight;
    var viewRight = content.window.innerWidth || content.document.documentElement.clientWidth;
    var inview = bound.top >= 0 && bound.left >= 0 && bound.bottom <= viewBottom && bound.right <= viewRight;
    return inview;
}

function getTextArea(n) {
    var tareas = content.document.querySelectorAll('textarea');
    return tareas[n].textContent;
}

function alertobj(obj) {
    var s = "";
    for(k in Object.keys(obj)) {
        s += `${k.toString()}: ${obj[k].toString()}\n`;
    }
    alert(s);
}
window.alertobj = alertobj;

function alertall(...xs) {
    var s = "";
    for(x of xs) {
        s += x.toString() + "\n";
    }
    alert(s);
}
window.alertall = alertall;

function runInZSH(cmd) {
    var executable = XpcInstance("@mozilla.org/file/local;1", Components.interfaces.nsILocalFile);
    executable.initWithPath("/usr/bin/roxterm");
    var process = XpcInstance("@mozilla.org/process/util;1", Components.interfaces.nsIProcess);
    process.init(executable);
    process.runAsync(["-e",`zsh -c 'source ~/.sh-aliases; source .sh-functions; ${cmd}; zsh'`], 2);
}
window.runInZSH = runInZSH;

function runInPlainZSH(cmd) {
    var executable = XpcInstance("@mozilla.org/file/local;1", Components.interfaces.nsILocalFile);
    executable.initWithPath("/usr/bin/roxterm");
    var process = XpcInstance("@mozilla.org/process/util;1", Components.interfaces.nsIProcess);
    process.init(executable);
    process.runAsync(["-e",`zsh -f --no-rcs -c '${cmd}; zsh'`], 2);
}
window.runInPlainZSH = runInPlainZSH;

// modulus function taking negative n (base assumed to be positive)
function mod(n,b) { return n<0 ? n%b + Number(b) : n%b; }

// requires a webdriver implementation
function mouse_x() { return MousePosTracker._x; }
function mouse_y() { return MousePosTracker._y; }

function searchCommandSets(regex) {
    var cmdsets = document.querySelectorAll('commandset');
    var cmds = Array.from(document.querySelectorAll('command'));
    for (cmd of cmds) {
        if (cmd.id.match(regex))
           utils.message(cmd.id+': '+cmd.oncommand);
    }
}
window.searchCommandSets = searchCommandSets;

function getMenuItems(regex) {
    var mitems = document.querySelectorAll('menuitem');
    var result = [];
    for (mitem of mitems) {
        if (mitem.id.match(regex))
            result.push(mitem);
    }
    return result;
}
window.getMenuItems = getMenuItems;

function removeSelectors(...sels) {
    var doc = content.document;
    sels.forEach(sel=>{
        var elts = Array.from(doc.querySelectorAll(sel));
        elts.forEach(e=>e.remove && e.remove());
    });
}

function removeFirstSelector(sel) {
    "Remove the first element matching sel."
    var doc = content.document;
    var elt = doc.querySelector(sel);
    elt.remove && elt.remove();
}

"remove each matching element, plus immediately preceding heading (H1-H6)"
function removeSelectorsWithPrecedingElt(...sels) {
    var doc = content.document;
    sels.forEach(sel=>{
        var elts = Array.from(doc.querySelectorAll(sel));
        elts.forEach(e=> {
            var prev = e.previousElementSibling;
            if (prev && prev.tagName && prev.tagName.match(/H[1-6]/))
                prev.remove && prev.remove();
            e.remove && e.remove();
        });
    });
}
window.removeSelectorsWithPrecedingElt = removeSelectorsWithPrecedingElt;

function isolateSelector(sel) {
    selectedElt = content.document.querySelector(sel);
    topElts = Array.from(content.document.body.children);
    topElts.forEach(elt => elt.remove());
    content.document.body.appendChild(selectedElt);
}

function isolateSelectors(...sels) {
    var doc = content.document;
    selectedElts = Array.from(content.document.querySelectorAll(sels));
    topElts = Array.from(content.document.body.children);
    topElts.forEach(elt => elt.remove());
    selectedElts.forEach(elt =>
        content.document.body.appendChild(elt)
    );
}

function hideSelectors(...sels) {
    var doc = content.document;
    sels.forEach(sel=>{
        var elts = Array.from(doc.querySelectorAll(sel));
        elts.forEach(e=>{
            var css = e.getAttribute('style') || '';
            e.setAttribute('style', css+" display: none !important;");
        });
    });
}

function hideFirstSelector(sel) {
    "Hide the first element matching sel."
    var doc = content.document;
    var elt = doc.querySelector(sel);
    e.setAttribute('style', css+" display: none !important;");
}

function yankSelectorContent(sel, target='innerText') {
    "target may be:";
    "     * a string, naming an attribute";
    "     * a function taking an element and returning a string.";
    selectedElt = content.document.querySelector(sel);
    if (typeof target === 'string')
        selectedContent = selectedElt[target];
    else
        selectedContent = target(selectedElt);
    utils.cbWriteWithMessageLimit(selectedContent);
}
window.yankSelectorContent = yankSelectorContent;

function closeTabsLeftWhileMatching(regex, n) {
    "Close tabs from current, working left, while url matches regex";
    "n = max tabs to close";
    var currentTab = tabs.getTab();
    var currentIdx = currentTab.dactylOrdinal - 1;
    var ts = Array.from(new Array(currentIdx+1), (_,i)=>tabs.getTab(i));
    ts.reverse();
    if (Number(n) > 0)
        ts = ts.slice(0, n);
    for (t of ts) {
        if (tabURL(t).match(regex))
            tabs.remove(t);
    }
}
window.closeTabsLeftWhileMatching = closeTabsLeftWhileMatching;

function evalStringOrFunction(s) {
    "String s represents either a string (itself) or a function.";
    if (s.match(/\(.*\)|=>/)) {
        return eval(s);
    } else { return s; }
}
window.evalStringOrFunction = evalStringOrFunction;

function openInNewOrCurrentTab(site) {
    "Curried function openInNewOrCurrentTab(url)(count):"
    "  Open URL in new tab, or with COUNT, in current tab."
    return function(count=false) {
        if (typeof count == 'number')
            dactyl.open(site, {where:dactyl.CURRENT_TAB});
        else
            dactyl.open(site, {where:dactyl.NEW_TAB})
    };
}

function foreachElement(f, top=content.document) {
    Array.from(top.getElementsByTagName("*")).forEach(f);
}
window.foreachElement = foreachElement;

function foreachNode(f, top=content.document) {
    var nodes = [];
    var recurseNode = function(top) {
        nodes.push(top);
        for (n of top.childNodes)
            recurseNode(n);
    }
    recurseNode(top);
    nodes.forEach(f);
}
window.foreachNode = foreachNode;

function listElements(pred, options={}) {
    var top = options.top || content.document;
    var max = options.max;
    var elts = [];
    foreachElement(e=>{ if (pred(e)) elts.push(e); }, top);
    return max ? elts.slice(0, max) : elts;
}
function listNodes(pred, options={}) {
    var top = options.top || content.document;
    var max = options.max;
    var nodes = [];
    foreachNode(n=>{ if (pred(n)) elts.push(n); }, top);
    return max ? nodes.slice(0, max) : nodes;
}
window.listElements = listElements;
window.listNodes = listNodes;

function matches(var_, regex) { return (var_ && var_.match && var_.match(regex)); }
window.matches = matches;

function concatRegex(...regexps) {
    return RegExp(regexps.map(r=>`(${r.source})`).join(""));
}
window.concatRegex = concatRegex;

function inToCm(x) { return x * 2.54; }
window.inToCm = inToCm;

function subCmForInches(s) {
    var regex = /(-?\d+(\.\d+)?) *("|in(ch(es)?)?)/g;
    var replaceFn = function(m, m1, m2, m3, m4, m5, start, s, n) {
        return inToCm(m1) + "cm";
    };
    return s.replace(regex, replaceFn);
}
window.subCmForInches = subCmForInches;

function FtoC(tempF) { return (tempF-32)/1.8; }
window.FtoC = FtoC;

function USDtoAUD(x) { return parseFloat(x) * getUSDAUDexchange(); }
window.USDtoAUD = USDtoAUD;

function subAUDforUSD(s) {
    var regex = RegExp(/(?!AU)(?:US)?\$(\d+[.]\d\d)/g);
    var replaceFn = function(m, m1, start, s, n) {
        return sprintf("AU$%.2f", USDtoAUD(m1));
    };
    return s.replace(regex, replaceFn);
}
window.subAUDforUSD = subAUDforUSD;

function arrayWriteItems(a) { utils.message(a.join('\n')); };
function arrayCbWriteItems(a)  { utils.cbWrite(a.join('\n')); };

function seq(n) { return Array.from(new Array(n), (_,i)=>i); }
window.seq = seq;

function id(x) { return x; }
function fconst(x) { return function(...args) { return x; }; }
function ftrue(...args) { return true; }
function ffalse(...args) { return false; }
window.id = id;
window.fconst = fconst;
window.ftrue = ftrue;
window.ffalse = ffalse;

var re_label = /(?!-)[-a-z0-9\\u00a1-\\uffff]*[a-z0-9\\u00a1-\\uffff]/;
window.re_label = re_label;
var re_http_url = new RegExp(
    "(https?://|localhost:)?" +
    `((?:${re_label.source}[.])*${re_label.source})` + "(:\\d+)?" +
    "(/[^?# \\t]+)?" +
    "(\\?[^# \\t]+)?" +
    "(#\\S+)?"
);
window.re_http_url = re_http_url;
var re_http_url_groups = ["whole URL", "scheme", "host", "port", "path", "query", "fragment"];
window.re_http_url_groups = re_http_url_groups;

function getUSDAUDexchange() { return window.AUDperUSD; }
window.getUSDAUDexchange = getUSDAUDexchange;

function wget(url=null, optstr="", dirpref="~/Downloads") {
    if (url) dactyl.open(url, {where: dactyl.NEW_TAB});
    else url = buffer.URL;
    var title = buffer.title;
    dirpref = dirpref.replace("~", env.get("HOME"));
    var savedir = `${dirpref}/${title}`;
    dactyl.execute(`!mkdir '${savedir}' || echo "Directory already exists."`);
    dactyl.execute(`!wget ${optstr} -P '${savedir}' ${url}`);
}

function wgetm(url=null, optstr="", dirpref="~/Downloads") {
    wget(url, "-nH -kKpN -rl inf -np --no-remove-listing "+optstr, dirpref);
}

function wget1(url=null, optstr="", dirpref="~/Downloads") {
    wget(url, "wget -kKpEHN -rl 1 "+optstr, dirpref);
}

function formatSeconds(n) {
    var hours = Math.floor(n/3600);
    n -= hours*3600;
    var mins = Math.floor(n/60);
    n -= mins*60;
    var secs = n;
    if (hours) return sprintf("%d:%02d:%02d", hours, mins, secs);
    else return sprintf("%d:%02d", mins, secs);
}

function stringToSmartCaseRegExp(s) {
    return RegExp(s, s.match(/[A-Z]/) ? '' : 'i' );
}

function cutoff(num, min, max) {
    return Math.min(Math.max(num, min), max);
}

// ,-------------------------,
// | variables for temp data |
// '-------------------------'

window._dactylargs = null;
function dactylArgsSet(value) {
    window._dactylargs = value;
}

window._dactylresult = null;
function dactylResultSet(value) {
    window._dactylresult = value;
}

window._dactyldata = {};
function dactylDataSet(key, value) {
    window._dactyldata[key] = value;
}
window.dactylDataSet = dactylDataSet;
function dactylDataGet(key) {
    return window._dactyldata[key];
}
window.dactylDataGet = dactylDataGet;

EOF

" -----------------------------------------------------------------------------
" ,-----------------,
" | USEFUL COMMANDS |
" '-----------------'
"
" call function defined in document: content.wrappedJSObject.page_func()
" alternative to :execute: :js CommandExMode().open(exCommandString)
" echo in dactyl status bar: dactyl.echo('');
" current browser     getBrowser().selectedBrowser
" current document    getBrowser().selectedBrowser.contentDocument
"                     content.document
" current tab:        tabs.getTab()
" current selection:  buffer.currentWord
" current URL:        buffer.URL
" get tab with index i:  tabs.getTab(i)
" number of tabs:        tabs.count
" ordinal (one-based) of tab:   t.dactylOrdinal
" index of tab (zero-based):    t._tPos
"
" =============================================================================
" ,-------------------,
" | PENTADACTYL NOTES |
" '-------------------'
" * If we want to pass a count to a javascript mapping, it will be null if no
"   count is provided. Eg.:
"       map x -count -js myFunc(count)
"   A default argument isn't enough, since it only handles missing (undefined)
"   arguments.We can handle this with:
"       function myFunc(n="default") {
"           n = n || "default";
"           // ....
"       }
"   This also redefines the argument when zero is passed, but if it's only meant
"   to take a count, it's okay, since counts can't be zero.
