<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
          "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:dactyl="http://vimperator.org/namespaces/liberator" class="hl-Help"><head><link rel="stylesheet" type="text/css" href="help.css" xmlns="http://www.w3.org/1999/xhtml"/><title>Pentadactyl Repeating Commands</title><script type="text/javascript" src="help.js"></script></head><body class="hl-HelpBody" document-tags=" repeating single-repeat &lt;repeat-key&gt; . @: macros complex-repeat &lt;record-macro&gt; q :macros :delmac :delmacros &lt;play-macro&gt; @ @@ macro-utilities &lt;sleep&gt; &lt;A-m&gt;s &lt;wait-for-page-load&gt; &lt;A-m&gt;l group groups :gr :group :delgr :delgroup site-filter site-filters using-scripts :so :source :source-contexts :source-groups :source-css :source-javascript :source-ex :lpl :loadplugins :runt :runtime :scrip :scriptnames :fini :finish ex-scripts multiline-commands comments profile profiling :time "><div class="hl-HelpTags"><a id="repeat.xml" class="hl-HelpTag">repeat.xml</a></div><h1><div class="hl-HelpTags"><a id="repeating" class="hl-HelpTag">repeating</a></div>Repeating commands</h1>
<div class="hl-HelpTOC"><h2>Contents</h2><ol level="2" class="hl-HelpOrderedList"><li><a href="dactyl://help/repeat#single-repeat">Single repeats</a></li><li><a href="dactyl://help/repeat#macros">Macros</a></li><li><a href="dactyl://help/repeat#macro-utilities">Macro utilities</a></li><li><a href="dactyl://help/repeat#group">Groups</a></li><li><a href="dactyl://help/repeat#site-filter">Site Filters</a></li><li><a href="dactyl://help/repeat#using-scripts">Using scripts</a><ol level="3" class="hl-HelpOrderedList"><li><a href="dactyl://help/repeat#:source-contexts">Script Contexts</a></li><li><a href="dactyl://help/repeat#:source-groups">Script Groups</a></li><li><a href="dactyl://help/repeat#:source-css">Cascading Stylesheets</a></li><li><a href="dactyl://help/repeat#:source-javascript">JavaScript</a></li><li><a href="dactyl://help/repeat#:source-ex">Ex commands</a></li><li><a href="dactyl://help/repeat#ex-scripts">Ex Command Scripts</a></li></ol></li><li><a href="dactyl://help/repeat#profile">Profiling</a></li></ol></div>

<p>
    Pentadactyl can repeat commands in a number of ways, from repeating
    the last command, to recording and playing macros, to saving its state and
    executing scripts.
</p>

<h2><div class="hl-HelpTags"><a id="single-repeat" class="hl-HelpTag">single-repeat</a></div>Single repeats</h2>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id="&lt;repeat-key&gt;" class="hl-HelpTag">&lt;repeat-key&gt;</a><a id="." class="hl-HelpTag">.</a></div><div style="clear: both"></div><div class="hl-HelpSpec"><span class="hl-HelpOptionalArg">[count]</span>.</div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>
            Repeat the last keyboard mapping <span class="hl-HelpOptionalArg">[count]</span> times. Note that,
            unlike in Vim, this does not apply solely to editing commands,
            mainly because Pentadactyl doesn't have them.
        </p>
    </div><div style="clear: both;"></div></div>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id="@:" class="hl-HelpTag">@:</a></div><div style="clear: both"></div><div class="hl-HelpSpec"><span class="hl-HelpOptionalArg">[count]</span>@:</div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>Repeat the last Ex command <span class="hl-HelpOptionalArg">[count]</span> times.</p>
    </div><div style="clear: both;"></div></div>

<h2><div class="hl-HelpTags"><a id="macros" class="hl-HelpTag">macros</a><a id="complex-repeat" class="hl-HelpTag">complex-repeat</a></div>Macros</h2>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id="&lt;record-macro&gt;" class="hl-HelpTag">&lt;record-macro&gt;</a><a id="q" class="hl-HelpTag">q</a></div><div style="clear: both"></div><div class="hl-HelpSpec">q<span class="hl-HelpArg">{0-9a-zA-Z}</span></div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>
            Record a key sequence as a macro. Available macros are
            <span class="hl-HelpArg">{0-9a-zA-Z}</span>. If the macro is an uppercase letter, the
            recorded keys are appended to the lowercase macro of the same
            name. Typing <span class="hl-HelpKey"><a style="color: inherit;" href="dactyl://help/repeat#q">q</a></span> again stops the recording.
        </p>
    </div><div style="clear: both;"></div></div>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id=":macros" class="hl-HelpTag">:macros</a></div><div class="hl-HelpSpec">:mac<span class="hl-HelpOptionalArg">[ros]</span> <span class="hl-HelpOptionalArg">[pat]</span></div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>
            List recorded macros matching the optional regular expression
            <span class="hl-HelpOptionalArg">[pat]</span>. If no regexp is given, list all macros.
        </p>
    </div><div style="clear: both;"></div></div>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id=":delmac" class="hl-HelpTag">:delmac</a><a id=":delmacros" class="hl-HelpTag">:delmacros</a></div><div class="hl-HelpSpec">:delmac<span class="hl-HelpOptionalArg">[ros]</span> <span class="hl-HelpArg">{pat}</span></div><div class="hl-HelpSpec">:delmac<span class="hl-HelpOptionalArg">[ros]</span>!</div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>
            Delete recorded macros matching the regular expression
            <span class="hl-HelpArg">{pat}</span>. If <em>!</em> is given, all macros are deleted.
        </p>
    </div><div style="clear: both;"></div></div>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id="&lt;play-macro&gt;" class="hl-HelpTag">&lt;play-macro&gt;</a><a id="@" class="hl-HelpTag">@</a></div><div class="hl-HelpSpec"><span class="hl-HelpOptionalArg">[count]</span>@<span class="hl-HelpArg">{a-z0-9}</span></div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>
            Plays the contents of macro with name <span class="hl-HelpArg">{a-z0-9}</span> <span class="hl-HelpOptionalArg">[count]</span>
            times.
        </p>
    </div><div style="clear: both;"></div></div>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id="@@" class="hl-HelpTag">@@</a></div><div class="hl-HelpSpec"><span class="hl-HelpOptionalArg">[count]</span>@@</div><div class="hl-HelpDescription" short="true">
        <p>Replay the last executed macro <span class="hl-HelpOptionalArg">[count]</span> times.</p>
    </div><div style="clear: both;"></div></div>

<h2><div class="hl-HelpTags"><a id="macro-utilities" class="hl-HelpTag">macro-utilities</a></div>Macro utilities</h2>

<p>
    The following key bindings facilitate the recording of efficient
    macros. They have no effect when typed normally, but are
    recorded and take effect during macro playback.
</p>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id="&lt;sleep&gt;" class="hl-HelpTag">&lt;sleep&gt;</a><a id="&lt;A-m&gt;s" class="hl-HelpTag">&lt;A-m&gt;s</a></div><div class="hl-HelpSpec"><span class="hl-HelpArg">{count}</span>&lt;A-m&gt;s</div><div class="hl-HelpDescription" short="true">
        <p>
            Sleep for <span class="hl-HelpArg">{count}</span> milliseconds before resuming playback.
        </p>
    </div><div style="clear: both;"></div></div>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id="&lt;wait-for-page-load&gt;" class="hl-HelpTag">&lt;wait-for-page-load&gt;</a><a id="&lt;A-m&gt;l" class="hl-HelpTag">&lt;A-m&gt;l</a></div><div style="clear: both"></div><div class="hl-HelpSpec"><span class="hl-HelpOptionalArg">[count]</span>&lt;A-m&gt;l</div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>
            Wait for the current page to finish loading before resuming
            playback. If <span class="hl-HelpOptionalArg">[count]</span> is given, wait no more than
            <span class="hl-HelpOptionalArg">[count]</span> seconds. Otherwise wait no more than 25 seconds.
        </p>
    </div><div style="clear: both;"></div></div>


<h2><div class="hl-HelpTags"><a id="group" class="hl-HelpTag">group</a><a id="groups" class="hl-HelpTag">groups</a></div>Groups</h2>

<p>
    In order to facilitate script writing, especially scripts which only
    apply to certain web sites, many types of commands and mappings can
    be assigned to a named group. In addition to helping identify the
    source of such mappings in listings, and aiding in the cleanup of
    scripts, these groups can be configured to apply only to certain web
    sites.
</p>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id=":gr" class="hl-HelpTag">:gr</a><a id=":group" class="hl-HelpTag">:group</a></div><div class="hl-HelpSpec">:gr<span class="hl-HelpOptionalArg">[oup]</span></div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>List all active <span class="hl-HelpTopic"><a style="color: inherit;" href="dactyl://help/repeat#groups">groups</a></span>.</p>
    </div><div style="clear: both;"></div></div>

<div class="hl-HelpItem"><div class="hl-HelpSpec">:gr<span class="hl-HelpOptionalArg">[oup]</span><span class="hl-HelpOptionalArg">[!]</span> <span class="hl-HelpArg">{group}</span> …</div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>
            Select, create, or modify a <span class="hl-HelpTopic"><a style="color: inherit;" href="dactyl://help/repeat#group">group</a></span>. After invocation,
            <span class="hl-HelpArg">{group}</span> becomes the default group for all further commands
            issued in the current script. If <span class="hl-HelpOptionalArg">[!]</span> is given the group is
            cleared of all mappings, commands, and any other entries bound to
            it before making the specified additions (if any).
        </p>

        <p>The following <span class="hl-HelpArg">{group}</span> names have special meanings:</p>

        <dl><column style=""></column><column style=""></column><tr><dt>builtin</dt><dd>The default group for builtin items. Can not be modified in any way by scripts.</dd></tr><tr><dt>default</dt><dd>The default group for this script.</dd></tr><tr><dt>user</dt><dd>The default group for the command line and <span class="hl-HelpTopic"><a style="color: inherit;" href="starting.xhtml#pentadactylrc">pentadactylrc</a></span>.</dd></tr></dl>

        <p>The following arguments are available:</p>

        <dl><column style=""></column><column style=""></column><tr><dt>-args=<span class="hl-HelpArg">{javascript}</span></dt><dd>JavaScript Object which
                augments the arguments passed to commands, mappings, and
                autocommands, e.g., given <span class="hl-HelpString" delim="">{ foo: "bar" }</span>,
                <tt>foo</tt> (<tt>&lt;foo&gt;</tt> if the Ex syntax is used) will
                be replaced by <span class="hl-HelpString" delim="">bar</span> inside the definitions
                (short name: <em>-a</em>)</dd></tr><tr><dt>-description</dt><dd>A description of this group (short names: <em>-desc</em>, <em>-d</em>)</dd></tr><tr><dt>-locations=<span class="hl-HelpArg">{filters}</span></dt><dd>The URLs for which this
                group should be active. See <span class="hl-HelpTopic"><a style="color: inherit;" href="dactyl://help/repeat#site-filters">site-filters</a></span> (short names:
                <em>-locs</em>, <em>-loc</em>, <em>-l</em>)</dd></tr><tr><dt>-nopersist</dt><dd>Do not save this group to an auto-generated RC file (short name: <em>-n</em>)</dd></tr></dl>
    </div><div style="clear: both;"></div></div>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id=":delgr" class="hl-HelpTag">:delgr</a><a id=":delgroup" class="hl-HelpTag">:delgroup</a></div><div class="hl-HelpSpec">:delgr<span class="hl-HelpOptionalArg">[oup]</span> <span class="hl-HelpArg">{group}</span></div><div class="hl-HelpSpec">:delgr<span class="hl-HelpOptionalArg">[oup]</span>!</div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>
            Delete the specified <span class="hl-HelpArg">{group}</span>. With <span class="hl-HelpOptionalArg">[!]</span> delete all
            user groups.
        </p>
    </div><div style="clear: both;"></div></div>

<h2><div class="hl-HelpTags"><a id="site-filter" class="hl-HelpTag">site-filter</a><a id="site-filters" class="hl-HelpTag">site-filters</a></div>Site Filters</h2>

<p>
    Many Pentadactyl commands accept filters so that they may be applied
    only to specific sites. Most of these commands accept filters in any of the
    following formats:
</p>

<dl><column style=""></column><column style=""></column><tr><dt>domain</dt><dd>
        Any filter which is a valid domain name will match any site on that
        domain or any sub-domain thereof. These filters may contain any letter
        of the Roman alphabet, Arabic numerals, hyphens, and full stops.
        Non-Latin domain names must be punycode encoded.
    </dd></tr><tr><dt>URL prefix</dt><dd>
        Any URL beginning with a valid protocol name and ending with a
        <tt>*</tt> is treated as a URL prefix. It will match any URL which
        begins with the given filter sans the trailing asterisk.
    </dd></tr><tr><dt>Full URL</dt><dd>
        Any URL beginning with a valid protocol name and not ending with an
        asterisk is treated as a full URL match. It will match any page which
        has a URL identical to the filter.
    </dd></tr><tr><dt>Regular expression</dt><dd>
        Any filter which does not fall into one of the above categories is
        treated as a case-sensitive regular expression.
    </dd></tr></dl>

<p>
    In most cases, any of the above may be prefixed with a <tt>!</tt> character
    to exclude matching sites.
</p>

<h2><div class="hl-HelpTags"><a id="using-scripts" class="hl-HelpTag">using-scripts</a></div>Using scripts</h2>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id=":so" class="hl-HelpTag">:so</a><a id=":source" class="hl-HelpTag">:source</a></div><div class="hl-HelpSpec">:so<span class="hl-HelpOptionalArg">[urce]</span><span class="hl-HelpOptionalArg">[!]</span> <span class="hl-HelpArg">{file}</span></div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>
            Read Ex commands, JavaScript, or CSS from <span class="hl-HelpArg">{file}</span>. Files are
            interpreted based on their extensions. Files which end in
            <em>.js</em> are executed as JavaScript, while those ending in
            <em>.css</em> are loaded as Cascading Stylesheets, and anything
            else is interpreted as Ex commands. In normal cases, any errors
            generated by the execution or non-existence of <span class="hl-HelpArg">{file}</span> are
            printed to the <span class="hl-HelpTopic"><a style="color: inherit;" href="cmdline.xhtml#command-line">command-line</a></span> area.  When <span class="hl-HelpOptionalArg">[!]</span> is
            provided, these are suppressed.
        </p>

        <p>
            Environment variables in <span class="hl-HelpArg">{file}</span> are expanded to their current
            value, and the prefix <em>~</em> is replaced with the value of
            <em>$HOME</em>. See <span class="hl-HelpTopic"><a style="color: inherit;" href="options.xhtml#expand-env">expand-env</a></span> and <span class="hl-HelpTopic"><a style="color: inherit;" href="starting.xhtml#initialization">initialization</a></span>
            for more information.
        </p>

        <h3><div class="hl-HelpTags"><a id=":source-contexts" class="hl-HelpTag">:source-contexts</a></div>Script Contexts</h3>

        <p>
            Each script executes in its own JavaScript context. This means that
            any global variable or function, including those defined by
            <span class="hl-HelpEx"><a href="eval.xhtml#:javascript" style="color: inherit;">:javascript</a></span> and the <tt>-javascript</tt> flag of
            <span class="hl-HelpEx"><a href="map.xhtml#:map" style="color: inherit;">:map</a></span>, <span class="hl-HelpEx"><a href="map.xhtml#:command" style="color: inherit;">:command</a></span>, and <span class="hl-HelpEx"><a href="autocommands.xhtml#:autocmd" style="color: inherit;">:autocmd</a></span>,
            is directly available only within the current script. Outside of the
            current script, they can only be accessed as properties of the
            script's global object, which is stored in the <tt>plugins</tt>
            global under the script's full path.
        </p>

        <h3><div class="hl-HelpTags"><a id=":source-groups" class="hl-HelpTag">:source-groups</a></div>Script Groups</h3>

        <p>
            In addition to its own JavaScript context, each script is executed
            with its own default <a href="repeat.xhtml#groups" topic="groups">group</a> into which
            its styles, mappings, commands, and autocommands are placed. This
            means that commands such as <span class="hl-HelpEx"><a href="map.xhtml#:delcommand" style="color: inherit;">:delcommand!</a></span> can be issued
            without fear of trampling other user-defined mappings. The command
            <span class="hl-HelpEx"><a href="dactyl://help/repeat#:group" style="color: inherit;">:group! default</a></span> can be issued to clear all such items at
            once, and should be placed at the head of most scripts to prevent
            the accumulation of stale items when the script is re-sourced.
        </p>

        <h3><div class="hl-HelpTags"><a id=":source-css" class="hl-HelpTag">:source-css</a></div>Cascading Stylesheets</h3>

        <p>
            When a CSS file is sourced, its contents are applied to every web
            page and every chrome document, including all browser windows and
            dialogs. If the same file is sourced more than once, its previous
            rules are cleared before it is applied again. Rules can be
            restricted to specific documents by enclosing them in
            <a href="https://developer.mozilla.org/en/CSS/@-moz-document" rel="external" topic="https://developer.mozilla.org/en/CSS/@-moz-document">@-moz-document</a>
            blocks.
        </p>

        <h3><div class="hl-HelpTags"><a id=":source-javascript" class="hl-HelpTag">:source-javascript</a></div>JavaScript</h3>

        <p>
            JavaScript files are executed with full chrome privileges in their
            own global namespaces. These namespaces are stored as objects in
            the <em>plugins</em> object, in the property named after the full
            path of the sourced file. This means that any variables or
            functions created by your script are stored as properties of that
            object. Additionally, all properties of the global <em>window</em>
            and <em>modules</em> objects are accessible to your script as
            global variables.
        </p>

        <p>
            Files in <em>~/.pentadactyl/plugins</em> may additionally be
            accessed in <em>plugins.<span class="hl-HelpArg">{filename}</span></em> where <span class="hl-HelpArg">{filename}</span>
            is the last component of the file's path stripped of any
            extensions, with all hyphens stripped and any letter following a
            hyphen capitalized.  So, the file
            <em>~/.pentadactyl/plugins/foo-bar.js</em> may be accessed as
            <em>plugins.fooBar</em>. See also <span class="hl-HelpTopic"><a style="color: inherit;" href="developer.xhtml#writing-plugins">writing-plugins</a></span>.
        </p>

        <h3><div class="hl-HelpTags"><a id=":source-ex" class="hl-HelpTag">:source-ex</a></div>Ex commands</h3>

        <p>
            Ex command files are executed as if each line were entered into
            the <a href="cmdline.xhtml#command-line" topic="command-line">command line</a> individually.
            Additionally, certain commands support the same ‘here document’
            syntax supported by most Unix shells and by the <a href="cmdline.xhtml#command-line" topic="command-line">command line</a>.
            So, to execute a JavaScript statement which does not comfortably fit
            on a single line, you can use:
        </p>

        <pre class="hl-HelpCode"><span class="hl-HelpEx"><a href="eval.xhtml#:js" style="color: inherit;">:js</a></span> &lt;&lt;<em>EOF</em>
<span class="hl-HelpKeyword"><span class="hl-Object" key="Object">var</span></span> hello = <span class="hl-HelpKeyword">function</span> () {
    alert(<span class="hl-HelpString">Hello world</span>);
}
<em>EOF</em></pre>

        <p>See also <span class="hl-HelpTopic"><a style="color: inherit;" href="dactyl://help/repeat#ex-scripts">ex-scripts</a></span> below.</p>
    </div><div style="clear: both;"></div></div>


<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id=":lpl" class="hl-HelpTag">:lpl</a><a id=":loadplugins" class="hl-HelpTag">:loadplugins</a></div><div style="clear: both"></div><div class="hl-HelpSpec">:loadplugins <span class="hl-HelpOptionalArg">[pattern]</span> …</div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>
            Immediately load all plugins which have yet to be loaded. Because
            plugins are not automatically loaded until after <tt><span class="hl-HelpTopic"><a style="color: inherit;" href="starting.xhtml#pentadactylrc">pentadactylrc</a></span></tt>
            is sourced, this command must be placed early in the
            <tt>pentadactylrc</tt> file if <tt>pentadactylrc</tt> uses commands or options
            which are defined by plugins. Additionally, this command allows
            newly installed plugins to be easily loaded without restarting
            Pentadactyl. See also <span class="hl-HelpOpt"><a style="color: inherit;" href="options.xhtml#%27loadplugins%27">'loadplugins'</a></span>.
        </p>
        <p>
            If <span class="hl-HelpOptionalArg">[pattern]</span>s are provided, the given regular expressions are
            used as filters rather than those in <span class="hl-HelpOpt"><a style="color: inherit;" href="options.xhtml#%27loadplugins%27">'loadplugins'</a></span>.
        </p>
    </div><div style="clear: both;"></div></div>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id=":runt" class="hl-HelpTag">:runt</a><a id=":runtime" class="hl-HelpTag">:runtime</a></div><div class="hl-HelpSpec">:runt<span class="hl-HelpOptionalArg">[ime]</span><span class="hl-HelpOptionalArg">[!]</span> <span class="hl-HelpArg">{file}</span> …</div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>
            Source the specified file from the first directory in
            <span class="hl-HelpOpt"><a style="color: inherit;" href="options.xhtml#%27runtimepath%27">'runtimepath'</a></span> in which it exists. When <span class="hl-HelpOptionalArg">[!]</span> is given,
            source the file from all directories in <span class="hl-HelpOpt"><a style="color: inherit;" href="options.xhtml#%27runtimepath%27">'runtimepath'</a></span> in
            which it exists.
        </p>
        <div class="hl-HelpExample"><span class="hl-HelpEx"><a href="dactyl://help/repeat#:runtime" style="color: inherit;">:runtime plugins/foobar.js</a></span></div>
    </div><div style="clear: both;"></div></div>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id=":scrip" class="hl-HelpTag">:scrip</a><a id=":scriptnames" class="hl-HelpTag">:scriptnames</a></div><div class="hl-HelpSpec">:scrip<span class="hl-HelpOptionalArg">[tnames]</span></div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>List all sourced script names, in the order they were first sourced.</p>
    </div><div style="clear: both;"></div></div>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id=":fini" class="hl-HelpTag">:fini</a><a id=":finish" class="hl-HelpTag">:finish</a></div><div style="clear: both"></div><div class="hl-HelpSpec">:fini<span class="hl-HelpOptionalArg">[sh]</span></div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>
            Stop sourcing a script file. This can only be called from within a
            Pentadactyl script file.
        </p>
    </div><div style="clear: both;"></div></div>

<h3><div class="hl-HelpTags"><a id="ex-scripts" class="hl-HelpTag">ex-scripts</a></div>Ex Command Scripts</h3>

<p>
    Ex command scripts are similar to both entering commands on the
    <a href="cmdline.xhtml#command-line" topic="command-line">command line</a> and to Vim
    scripts, but with some notable differences.
</p>

<p><div class="hl-HelpTags"><a id="multiline-commands" class="hl-HelpTag">multiline-commands</a></div><div style="clear: right"></div>
    Commands in Ex command scripts can span multiple lines by
    prefixing the second and further lines with a <em>\</em>
    character. For instance, the following all define commands whose
    definitions span multiple lines.
</p>

<pre class="hl-HelpCode"><span class="hl-HelpEx"><a href="map.xhtml#:command" style="color: inherit;">:command!</a></span> <span class="hl-HelpString" delim="">foo</span>
        \ <em>-description</em> <span class="hl-HelpString">A command that frobs bars</span>
        \ <span class="hl-HelpEx"><a href="eval.xhtml#:javascript" style="color: inherit;">:javascript</a></span> frob(content.bar)</pre>

<pre class="hl-HelpCode"><span class="hl-HelpEx"><a href="styling.xhtml#:style" style="color: inherit;">:style</a></span> <em>-name</em> <span class="hl-HelpString" delim="'">foo</span>
     \ <span class="hl-HelpString" delim="'">foobar.com</span>
     \ p<span class="hl-HelpString" delim="">:first-line</span> { <em>font-variant</em>: <span class="hl-HelpString" delim="">small-caps</span>; }
     \ div<em>#side-bar</em> &gt; <span class="hl-HelpString" delim="">:first-child</span> { <em>display</em>: <span class="hl-HelpString" delim="">none</span>; }</pre>

<pre class="hl-HelpCode"><span class="hl-HelpEx"><a href="map.xhtml#:command" style="color: inherit;">:command!</a></span> <span class="hl-HelpString" delim="">do-some-stuff</span>
        \ <em>-description</em> <span class="hl-HelpString">A command which does some stuff in JavaScript</span>
        \ <span class="hl-HelpEx"><a href="eval.xhtml#:javascript" style="color: inherit;">:javascript</a></span> &lt;&lt;<em>EOF</em>
        \     window.do(<span class="hl-HelpString">some</span>);
        \     window.do(<span class="hl-HelpString">stuff</span>);
        \<em>EOF</em></pre>

<pre class="hl-HelpCode"><span class="hl-HelpEx"><a href="map.xhtml#:command" style="color: inherit;">:command!</a></span> <span class="hl-HelpString" delim="">do-some-stuff</span>
        \ <em>-description</em> <span class="hl-HelpString">A command which does some stuff in JavaScript</span>
        \ <span class="hl-HelpEx"><a href="eval.xhtml#:javascript" style="color: inherit;">:javascript</a></span>
        \\    window.do(<span class="hl-HelpString">some</span>);
        \\    window.do(<span class="hl-HelpString">stuff</span>);</pre>

<p><div class="hl-HelpTags"><a id="comments" class="hl-HelpTag">comments</a></div><div style="clear: right"></div>
    Lines may be commented out by prefixing them with a <em>"</em>
    character. Comments and commands cannot both occur in a single command
    line.
</p>

<pre class="hl-HelpCode">            <span class="hl-" style="color: #444">" This is a comment</span>
    foo bar " This is a syntax error
            <span class="hl-HelpString"> This is not a comment</span>
    foo bar <span class="hl-HelpString"> This is not a comment</span>
</pre>

<h2><div class="hl-HelpTags"><a id="profile" class="hl-HelpTag">profile</a><a id="profiling" class="hl-HelpTag">profiling</a></div>Profiling</h2>

<div class="hl-HelpItem"><div style="clear: right"></div><div class="hl-HelpTags"><a id=":time" class="hl-HelpTag">:time</a></div><div class="hl-HelpSpec">:<span class="hl-HelpOptionalArg">[count]</span>time<span class="hl-HelpOptionalArg">[!]</span> <span class="hl-HelpArg">{code|:command}</span></div><hr style="border: 0; height: 0; margin: 0; width: 100%; float: right;" /><div class="hl-HelpDescription">
        <p>
            Profile a piece of JavaScript code or an Ex command. Run
            <span class="hl-HelpArg">{code}</span> <span class="hl-HelpOptionalArg">[count]</span> times and print the elapsed time.
            If <span class="hl-HelpArg">{code}</span> begins with a <span class="hl-HelpEx"><a href="cmdline.xhtml#:" style="color: inherit;">:</a></span>, it is executed as an Ex
            command. Otherwise, it is executed as JavaScript, in which case it
            is evaluated only once and stored as a function which is executed
            <span class="hl-HelpOptionalArg">[count]</span> times.
        </p>

        <p>
            When <span class="hl-HelpOptionalArg">[!]</span> is given, <span class="hl-HelpArg">{code}</span> is executed <span class="hl-HelpOptionalArg">[count]</span>
            times, but no statistics are printed.
        </p>
    </div><div style="clear: both;"></div></div>

</body></html>